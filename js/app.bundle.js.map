{
  "version": 3,
  "sources": ["../../../node_modules/pdf-lib/node_modules/tslib/tslib.js", "../../../node_modules/pako/lib/utils/common.js", "../../../node_modules/pako/lib/zlib/trees.js", "../../../node_modules/pako/lib/zlib/adler32.js", "../../../node_modules/pako/lib/zlib/crc32.js", "../../../node_modules/pako/lib/zlib/messages.js", "../../../node_modules/pako/lib/zlib/deflate.js", "../../../node_modules/pako/lib/utils/strings.js", "../../../node_modules/pako/lib/zlib/zstream.js", "../../../node_modules/pako/lib/deflate.js", "../../../node_modules/pako/lib/zlib/inffast.js", "../../../node_modules/pako/lib/zlib/inftrees.js", "../../../node_modules/pako/lib/zlib/inflate.js", "../../../node_modules/pako/lib/zlib/constants.js", "../../../node_modules/pako/lib/zlib/gzheader.js", "../../../node_modules/pako/lib/inflate.js", "../../../node_modules/pako/index.js", "(disabled):canvas", "(disabled):fs", "(disabled):zlib", "(disabled):http", "(disabled):https", "(disabled):url", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/webpack/universalModuleDefinition", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/pdf.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/display_utils.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/util.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/compatibility.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/is_node.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/api.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/font_loader.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/node_utils.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/annotation_storage.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/api_compatibility.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/canvas.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/pattern_helper.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/worker_options.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/message_handler.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/metadata.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/xml_parser.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/optional_content_config.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/transport_stream.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/webgl.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/annotation_layer.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/scripting_utils.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/text_layer.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/svg.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/node_stream.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/network_utils.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/content_disposition.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/network.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/fetch_stream.js", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/webpack/bootstrap", "../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/webpack/startup", "../../../node_modules/pdf-lib/node_modules/tslib/modules/index.js", "../../../node_modules/pdf-lib/src/utils/base64.ts", "../../../node_modules/pdf-lib/src/utils/strings.ts", "../../../node_modules/pdf-lib/src/utils/arrays.ts", "../../../node_modules/pdf-lib/src/utils/async.ts", "../../../node_modules/pdf-lib/src/utils/unicode.ts", "../../../node_modules/pdf-lib/src/utils/numbers.ts", "../../../node_modules/pdf-lib/src/utils/errors.ts", "../../../node_modules/@pdf-lib/standard-fonts/es/utils.js", "../../../node_modules/@pdf-lib/standard-fonts/es/Font.js", "../../../node_modules/@pdf-lib/standard-fonts/es/Encoding.js", "../../../node_modules/pdf-lib/src/utils/objects.ts", "../../../node_modules/pdf-lib/src/utils/validators.ts", "../../../node_modules/pdf-lib/src/utils/pdfDocEncoding.ts", "../../../node_modules/pdf-lib/src/utils/Cache.ts", "../../../node_modules/pdf-lib/src/core/errors.ts", "../../../node_modules/pdf-lib/src/core/syntax/CharCodes.ts", "../../../node_modules/pdf-lib/src/core/PDFContext.ts", "../../../node_modules/pdf-lib/src/core/document/PDFHeader.ts", "../../../node_modules/pdf-lib/src/core/objects/PDFObject.ts", "../../../node_modules/pdf-lib/src/core/objects/PDFNumber.ts", "../../../node_modules/pdf-lib/src/core/objects/PDFArray.ts", "../../../node_modules/pdf-lib/src/core/objects/PDFBool.ts", "../../../node_modules/pdf-lib/src/core/objects/PDFNull.ts", "../../../node_modules/pdf-lib/src/core/objects/PDFDict.ts", "../../../node_modules/pdf-lib/src/core/syntax/Delimiters.ts", "../../../node_modules/pdf-lib/src/core/syntax/Whitespace.ts", "../../../node_modules/pdf-lib/src/core/syntax/Irregular.ts", "../../../node_modules/pdf-lib/src/core/objects/PDFName.ts", "../../../node_modules/pdf-lib/src/core/objects/PDFStream.ts", "../../../node_modules/pdf-lib/src/core/objects/PDFRawStream.ts", "../../../node_modules/pdf-lib/src/core/objects/PDFRef.ts", "../../../node_modules/pdf-lib/src/core/operators/PDFOperator.ts", "../../../node_modules/pdf-lib/src/core/operators/PDFOperatorNames.ts", "../../../node_modules/pdf-lib/src/core/structures/PDFFlateStream.ts", "../../../node_modules/pdf-lib/src/core/structures/PDFContentStream.ts", "../../../node_modules/pdf-lib/src/core/structures/PDFPageLeaf.ts", "../../../node_modules/pdf-lib/src/core/PDFObjectCopier.ts", "../../../node_modules/pdf-lib/src/core/document/PDFCrossRefSection.ts", "../../../node_modules/pdf-lib/src/core/document/PDFTrailer.ts", "../../../node_modules/pdf-lib/src/core/document/PDFTrailerDict.ts", "../../../node_modules/pdf-lib/src/core/structures/PDFObjectStream.ts", "../../../node_modules/pdf-lib/src/core/writers/PDFWriter.ts", "../../../node_modules/pdf-lib/src/core/objects/PDFInvalidObject.ts", "../../../node_modules/pdf-lib/src/core/structures/PDFCrossRefStream.ts", "../../../node_modules/pdf-lib/src/core/writers/PDFStreamWriter.ts", "../../../node_modules/pdf-lib/src/core/objects/PDFHexString.ts", "../../../node_modules/pdf-lib/src/core/embedders/StandardFontEmbedder.ts", "../../../node_modules/pdf-lib/src/core/embedders/CMap.ts", "../../../node_modules/pdf-lib/src/core/embedders/FontFlags.ts", "../../../node_modules/pdf-lib/src/core/objects/PDFString.ts", "../../../node_modules/pdf-lib/src/core/embedders/CustomFontEmbedder.ts", "../../../node_modules/pdf-lib/src/core/embedders/CustomFontSubsetEmbedder.ts", "../../../node_modules/pdf-lib/src/core/embedders/FileEmbedder.ts", "../../../node_modules/pdf-lib/src/core/embedders/JpegEmbedder.ts", "../../../node_modules/@pdf-lib/upng/UPNG.js", "../../../node_modules/pdf-lib/src/utils/png.ts", "../../../node_modules/pdf-lib/src/core/embedders/PngEmbedder.ts", "../../../node_modules/pdf-lib/src/core/streams/Stream.ts", "../../../node_modules/pdf-lib/src/core/streams/DecodeStream.ts", "../../../node_modules/pdf-lib/src/core/streams/Ascii85Stream.ts", "../../../node_modules/pdf-lib/src/core/streams/AsciiHexStream.ts", "../../../node_modules/pdf-lib/src/core/streams/FlateStream.ts", "../../../node_modules/pdf-lib/src/core/streams/LZWStream.ts", "../../../node_modules/pdf-lib/src/core/streams/RunLengthStream.ts", "../../../node_modules/pdf-lib/src/core/streams/decode.ts", "../../../node_modules/pdf-lib/src/core/embedders/PDFPageEmbedder.ts", "../../../node_modules/pdf-lib/src/core/interactive/ViewerPreferences.ts", "../../../node_modules/pdf-lib/src/core/acroform/PDFAcroField.ts", "../../../node_modules/pdf-lib/src/core/annotation/BorderStyle.ts", "../../../node_modules/pdf-lib/src/core/annotation/PDFAnnotation.ts", "../../../node_modules/pdf-lib/src/core/annotation/AppearanceCharacteristics.ts", "../../../node_modules/pdf-lib/src/core/annotation/PDFWidgetAnnotation.ts", "../../../node_modules/pdf-lib/src/core/acroform/PDFAcroTerminal.ts", "../../../node_modules/pdf-lib/src/core/acroform/PDFAcroButton.ts", "../../../node_modules/pdf-lib/src/core/acroform/PDFAcroCheckBox.ts", "../../../node_modules/pdf-lib/src/core/acroform/flags.ts", "../../../node_modules/pdf-lib/src/core/acroform/PDFAcroChoice.ts", "../../../node_modules/pdf-lib/src/core/acroform/PDFAcroComboBox.ts", "../../../node_modules/pdf-lib/src/core/acroform/PDFAcroNonTerminal.ts", "../../../node_modules/pdf-lib/src/core/acroform/PDFAcroSignature.ts", "../../../node_modules/pdf-lib/src/core/acroform/PDFAcroText.ts", "../../../node_modules/pdf-lib/src/core/acroform/PDFAcroPushButton.ts", "../../../node_modules/pdf-lib/src/core/acroform/PDFAcroRadioButton.ts", "../../../node_modules/pdf-lib/src/core/acroform/PDFAcroListBox.ts", "../../../node_modules/pdf-lib/src/core/acroform/utils.ts", "../../../node_modules/pdf-lib/src/core/acroform/PDFAcroForm.ts", "../../../node_modules/pdf-lib/src/core/structures/PDFCatalog.ts", "../../../node_modules/pdf-lib/src/core/structures/PDFPageTree.ts", "../../../node_modules/pdf-lib/src/core/syntax/Numeric.ts", "../../../node_modules/pdf-lib/src/core/parser/BaseParser.ts", "../../../node_modules/pdf-lib/src/core/parser/ByteStream.ts", "../../../node_modules/pdf-lib/src/core/syntax/Keywords.ts", "../../../node_modules/pdf-lib/src/core/parser/PDFObjectParser.ts", "../../../node_modules/pdf-lib/src/core/parser/PDFObjectStreamParser.ts", "../../../node_modules/pdf-lib/src/core/parser/PDFXRefStreamParser.ts", "../../../node_modules/pdf-lib/src/core/parser/PDFParser.ts", "../../../node_modules/pdf-lib/src/core/annotation/flags.ts", "../../../node_modules/pdf-lib/src/api/objects.ts", "../../../node_modules/pdf-lib/src/api/rotations.ts", "../../../node_modules/pdf-lib/src/api/operators.ts", "../../../node_modules/pdf-lib/src/api/colors.ts", "../../../node_modules/pdf-lib/src/api/svgPath.ts", "../../../node_modules/pdf-lib/src/api/operations.ts", "../../../node_modules/pdf-lib/src/api/errors.ts", "../../../node_modules/pdf-lib/src/api/text/alignment.ts", "../../../node_modules/pdf-lib/src/api/text/layout.ts", "../../../node_modules/pdf-lib/src/api/form/appearances.ts", "../../../node_modules/pdf-lib/src/api/PDFEmbeddedPage.ts", "../../../node_modules/pdf-lib/src/api/PDFFont.ts", "../../../node_modules/pdf-lib/src/api/PDFImage.ts", "../../../node_modules/pdf-lib/src/api/image/alignment.ts", "../../../node_modules/pdf-lib/src/api/form/PDFField.ts", "../../../node_modules/pdf-lib/src/api/form/PDFCheckBox.ts", "../../../node_modules/pdf-lib/src/api/form/PDFDropdown.ts", "../../../node_modules/pdf-lib/src/api/form/PDFOptionList.ts", "../../../node_modules/pdf-lib/src/api/form/PDFRadioGroup.ts", "../../../node_modules/pdf-lib/src/api/form/PDFSignature.ts", "../../../node_modules/pdf-lib/src/api/form/PDFTextField.ts", "../../../node_modules/pdf-lib/src/api/StandardFonts.ts", "../../../node_modules/pdf-lib/src/api/form/PDFForm.ts", "../../../node_modules/pdf-lib/src/api/sizes.ts", "../../../node_modules/pdf-lib/src/api/PDFDocumentOptions.ts", "../../../node_modules/pdf-lib/src/api/PDFEmbeddedFile.ts", "../../../node_modules/pdf-lib/src/api/PDFJavaScript.ts", "../../../node_modules/pdf-lib/src/core/embedders/JavaScriptEmbedder.ts", "../../../node_modules/pdf-lib/src/api/PDFDocument.ts", "../../../node_modules/pdf-lib/src/api/PDFPageOptions.ts", "../../../node_modules/pdf-lib/src/api/PDFPage.ts", "../../../node_modules/pdf-lib/src/api/form/PDFButton.ts", "../../../src/ts/utils/ObjectUtils.ts", "../../../src/ts/utils/HTMLUtils.ts", "../../../src/ts/popup/PopupWindow.ts", "../../../src/ts/popup/ConfirmWindow.ts", "../../../src/ts/utils/FileSelector.ts", "../../../src/ts/utils/FileUtils.ts", "../../../src/ts/utils/Functions.ts", "../../../src/ts/utils/HTMLFactory.ts", "../../../src/ts/utils/MathUtils.ts", "../../../src/ts/utils/ImageUtils.ts", "../../../src/ts/utils/PDFRenderer.ts", "../../../src/ts/utils/PDFSplitter.ts", "../../../src/ts/PDFEditor.ts", "../../../src/ts/Main.ts"],
  "sourcesContent": ["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __createBinding = function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result[\"default\"] = mod;\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, privateMap) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to get private field on non-instance\");\r\n        }\r\n        return privateMap.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, privateMap, value) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to set private field on non-instance\");\r\n        }\r\n        privateMap.set(receiver, value);\r\n        return value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n", "'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n", "'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n", "'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n", "// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n", "'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n", "'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n", "// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n", "", "", "", "", "", "", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable sort-exports/sort-exports */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  isFetchSupported,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { apiCompatibilityParams } from \"./display/api_compatibility.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n  setPDFNetworkStreamFactory(params => {\n    return streamsPromise.then(streams => {\n      const [{ PDFNetworkStream }, { PDFFetchStream }] = streams;\n      if (isFetchSupported() && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  });\n} else if (PDFJSDev.test(\"GENERIC\")) {\n  const { isNodeJS } = require(\"./shared/is_node.js\");\n  if (isNodeJS) {\n    const PDFNodeStream = require(\"./display/node_stream.js\").PDFNodeStream;\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n    let PDFFetchStream;\n    if (isFetchSupported()) {\n      PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    }\n    setPDFNetworkStreamFactory(params => {\n      if (PDFFetchStream && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n} else if (PDFJSDev.test(\"CHROME\")) {\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  const isChromeWithFetchCredentials = function () {\n    // fetch does not include credentials until Chrome 61.0.3138.0 and later.\n    // https://chromium.googlesource.com/chromium/src/+/2e231cf052ca5e68e22baf0008ac9e5e29121707\n    try {\n      // Indexed properties on window are read-only in Chrome 61.0.3151.0+\n      // https://chromium.googlesource.com/chromium/src.git/+/58ab4a971b06dec13e4edf9de8382ca6847f6190\n      window[999] = 123; // should throw. Note: JS strict mode MUST be enabled.\n      delete window[999];\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  if (isFetchSupported() && isChromeWithFetchCredentials()) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n  }\n  setPDFNetworkStreamFactory(params => {\n    if (PDFFetchStream && isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // From \"./display/api_compatibility.js\":\n  apiCompatibilityParams,\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n};\n", "/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    unreachable(\"Abstract method `create` called.\");\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url).then(async response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        let cMapData;\n        if (this.isCompressed) {\n          cMapData = new Uint8Array(await response.arrayBuffer());\n        } else {\n          cMapData = stringToBytes(await response.text());\n        }\n        return { cMapData, compressionType };\n      });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\n/**\n * Gets the file name from a given URL.\n * @param {string} url\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  addLinkAttributes,\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  DEFAULT_LINK_REL,\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  isFetchSupported,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  RenderingCancelledException,\n  StatTimer,\n};\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensures that the returned Object has a `null` prototype.\nfunction objectFromEntries(iterable) {\n  return Object.assign(Object.create(null), Object.fromEntries(iterable));\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\n// prettier-ignore\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(String.fromCharCode((char >> 8) & 0xff));\n    buf.push(String.fromCharCode(char & 0xff));\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  return arr1.every(function (element, index) {\n    return element === arr2[index];\n  });\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nconst createObjectURL = (function createObjectURLClosure() {\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  // eslint-disable-next-line no-shadow\n  return function createObjectURL(data, contentType, forceDataSchema = false) {\n    if (!forceDataSchema && URL.createObjectURL) {\n      const blob = new Blob([data], { type: contentType });\n      return URL.createObjectURL(blob);\n    }\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nconst XMLEntities = {\n  /* < */ 0x3c: \"&lt;\",\n  /* > */ 0x3e: \"&gt;\",\n  /* & */ 0x26: \"&amp;\",\n  /* \" */ 0x22: \"&quot;\",\n  /* ' */ 0x27: \"&apos;\",\n};\n\nfunction encodeToXmlString(str) {\n  const buffer = [];\n  let start = 0;\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.codePointAt(i);\n    if (0x20 <= char && char <= 0x7e) {\n      // ascii\n      const entity = XMLEntities[char];\n      if (entity) {\n        if (start < i) {\n          buffer.push(str.substring(start, i));\n        }\n        buffer.push(entity);\n        start = i + 1;\n      }\n    } else {\n      if (start < i) {\n        buffer.push(str.substring(start, i));\n      }\n      buffer.push(`&#x${char.toString(16).toUpperCase()};`);\n      if (char > 0xd7ff && (char < 0xe000 || char > 0xfffd)) {\n        // char is represented by two u16\n        i++;\n      }\n      start = i + 1;\n    }\n  }\n\n  if (buffer.length === 0) {\n    return str;\n  }\n\n  if (start < str.length) {\n    buffer.push(str.substring(start, str.length));\n  }\n\n  return buffer.join(\"\");\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  encodeToXmlString,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromEntries,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n", "/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"./is_node.js\";\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  (typeof globalThis === \"undefined\" || !globalThis._pdfjsCompatibilityChecked)\n) {\n  // Provides support for globalThis in legacy browsers.\n  // Support: Firefox<65, Chrome<71, Safari<12.1\n  if (typeof globalThis === \"undefined\" || globalThis.Math !== Math) {\n    // eslint-disable-next-line no-global-assign\n    globalThis = require(\"core-js/es/global-this\");\n  }\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Provides support for Object.fromEntries in legacy browsers.\n  // Support: Firefox<63, Chrome<73, Safari<12.1\n  (function checkObjectFromEntries() {\n    if (Object.fromEntries) {\n      return;\n    }\n    require(\"core-js/es/object/from-entries.js\");\n  })();\n\n  // Provides support for *recent* additions to the Promise specification,\n  // however basic Promise support is assumed to be available natively.\n  // Support: Firefox<71, Chrome<76, Safari<13\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: Safari\n  (function checkURL() {\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n      // Prevent \"require is not a function\" errors in development mode,\n      // since the `URL` constructor should be available in modern browers.\n      return;\n    } else if (!PDFJSDev.test(\"GENERIC\")) {\n      // The `URL` constructor is assumed to be available in the extension\n      // builds.\n      return;\n    } else if (PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders don't use the `URL` constructor, so it\n      // doesn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    globalThis.URL = require(\"core-js/web/url.js\");\n  })();\n\n  // Support: Safari<10.1, Node.js\n  (function checkReadableStream() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `ReadableStream`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    let isReadableStreamSupported = false;\n\n    if (typeof ReadableStream !== \"undefined\") {\n      // MS Edge may say it has ReadableStream but they are not up to spec yet.\n      try {\n        // eslint-disable-next-line no-new\n        new ReadableStream({\n          start(controller) {\n            controller.close();\n          },\n        });\n        isReadableStreamSupported = true;\n      } catch (e) {\n        // The ReadableStream constructor cannot be used.\n      }\n    }\n    if (isReadableStreamSupported) {\n      return;\n    }\n    globalThis.ReadableStream = require(\"web-streams-polyfill/dist/ponyfill.js\").ReadableStream;\n  })();\n\n  // Provides support for String.prototype.padStart in legacy browsers.\n  // Support: Chrome<57, Safari<10\n  (function checkStringPadStart() {\n    if (String.prototype.padStart) {\n      return;\n    }\n    require(\"core-js/es/string/pad-start.js\");\n  })();\n\n  // Provides support for String.prototype.padEnd in legacy browsers.\n  // Support: Chrome<57, Safari<10\n  (function checkStringPadEnd() {\n    if (String.prototype.padEnd) {\n      return;\n    }\n    require(\"core-js/es/string/pad-end.js\");\n  })();\n\n  // Provides support for Object.values in legacy browsers.\n  // Support: Chrome<54, Safari<10.1\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = require(\"core-js/es/object/values.js\");\n  })();\n\n  // Provides support for Object.entries in legacy browsers.\n  // Support: Chrome<54, Safari<10.1\n  (function checkObjectEntries() {\n    if (Object.entries) {\n      return;\n    }\n    Object.entries = require(\"core-js/es/object/entries.js\");\n  })();\n}\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { NodeCanvasFactory, NodeCMapReaderFactory } from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { WebGLContext } from \"./webgl.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via `@font-face` rules. If disabled, fonts will\n *   be rendered using a built-in font renderer that constructs the glyphs with\n *   primitive path commands. The default value is `false`.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * @typedef {Object} PDFDocumentStats\n * @property {Object<string, boolean>} streamTypes - Used stream types in the\n *   document (an item is set to true if specific stream ID was used in the\n *   document).\n * @property {Object<string, boolean>} fontTypes - Used font types in the\n *   document (an item is set to true if specific font ID was used in the\n *   document).\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|TypedArray|DocumentInitParameters|PDFDataRangeTransport} src -\n *   Can be a URL to where a PDF file is located, a typed array (Uint8Array)\n *   already populated with data or parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\") {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either Uint8Array, string or a parameter object\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    if (key === \"url\" && typeof window !== \"undefined\") {\n      // The full path is required in the 'url' field.\n      params[key] = new URL(source[key], window.location).href;\n      continue;\n    } else if (key === \"range\") {\n      rangeTransport = source[key];\n      continue;\n    } else if (key === \"worker\") {\n      worker = source[key];\n      continue;\n    } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n      // Converting string or array-like data to Uint8Array.\n      const pdfBytes = source[key];\n      if (typeof pdfBytes === \"string\") {\n        params[key] = stringToBytes(pdfBytes);\n      } else if (\n        typeof pdfBytes === \"object\" &&\n        pdfBytes !== null &&\n        !isNaN(pdfBytes.length)\n      ) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else if (isArrayBuffer(pdfBytes)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else {\n        throw new Error(\n          \"Invalid PDF binary data: either typed array, \" +\n            \"string or array-like object is expected in the \" +\n            \"data property.\"\n        );\n      }\n      continue;\n    }\n    params[key] = source[key];\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise} A promise that is resolved when the worker ID of the\n *   `MessageHandler` is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n *\n * @typedef {Object} PDFDocumentLoadingTask\n * @property {string} docId - Unique identifier for the document loading task.\n * @property {boolean} destroyed - Whether the loading task is destroyed or not.\n * @property {function} [onPassword] - Callback to request a password if a wrong\n *   or no password was provided. The callback receives two parameters: a\n *   function that should be called with the new password, and a reason (see\n *   {@link PasswordResponses}).\n * @property {function} [onProgress] - Callback to be able to monitor the\n *   loading progress of the PDF file (necessary to implement e.g. a loading\n *   bar). The callback receives an {Object} with the properties `loaded`\n *   ({number}) and `total` ({number}) that indicate how many bytes are loaded.\n * @property {function} [onUnsupportedFeature] - Callback for when an\n *   unsupported feature is used in the PDF document. The callback receives an\n *   {@link UNSUPPORTED_FEATURES} argument.\n * @property {Promise<PDFDocumentProxy>} promise - Promise for document loading\n *   task completion.\n * @property {function} destroy - Abort all network requests and destroy\n *   the worker. Returns a promise that is resolved when destruction is\n *   completed.\n */\n\n/**\n * @type {any}\n * @ignore\n */\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique identifier for the document loading task.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Whether the loading task is destroyed or not.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if a wrong or no password was provided.\n       * The callback receives two parameters: a function that should be called\n       * with the new password, and a reason (see {@link PasswordResponses}).\n       * @type {function}\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties `loaded` ({number}) and `total`\n       * ({number}) that indicate how many bytes are loaded.\n       * @type {function}\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback for when an unsupported feature is used in the PDF document.\n       * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n       * @type {function}\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise<PDFDocumentProxy>}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * @returns {Promise<void>} A promise that is resolved when destruction is\n     *   completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   */\n  constructor(length, initialData, progressiveDone = false) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {{num: number, gen: number}} ref - The page reference. Must have\n   *   the `num` and `gen` properties.\n   * @returns {Promise<{num: number, gen: number}>} A promise that is resolved\n   *   with the page index (starting from zero) that is associated with the\n   *   reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any>>} A promise that is resolved with all\n   *   information of the given named destination.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\n   *   current statistics about document structures (see\n   *   {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup() {\n    return this._transport.startCleanup();\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are either needed in the viewer and/or\n   *   whose default values may be affected by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @param {AnnotationStorage} annotationStorage - Storage for annotation\n   *   data in forms.\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument(annotationStorage) {\n    return this._transport.saveDocument(annotationStorage);\n  }\n\n  /**\n   * @returns {Promise<Array<Object> | null>} A promise that is resolved with an\n   *   {Array<Object>} containing /AcroForm field data for the JS sandbox,\n   *   or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem>} items - Array of {@link TextItem} objects.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *   can be either 'display' (viewable annotations) or 'print' (printable\n *   annotations). If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'.\n *   The default value is 'display'.\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering for\n *   some operations. The default value is `false`.\n * @property {boolean} [renderInteractiveForms] - Whether or not interactive\n *   form elements are rendered in the display layer. If so, we do not render\n *   them on the canvas as well.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {AnnotationStorage} [annotationStorage] - Storage for annotation\n *   data in forms.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n      this.annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this.annotationsIntent = intent;\n    }\n    return this.annotationsPromise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    annotationStorage = null,\n    optionalContentConfigPromise = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const webGLContext = new WebGLContext({\n      enable: enableWebGL,\n    });\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n        annotationStorage: annotationStorage?.getAll() || null,\n      });\n    }\n\n    const complete = error => {\n      const i = intentState.renderTasks.indexOf(internalRenderTask);\n      if (i >= 0) {\n        intentState.renderTasks.splice(i, 1);\n      }\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    if (!intentState.renderTasks) {\n      intentState.renderTasks = [];\n    }\n    intentState.renderTasks.push(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        const i = intentState.renderTasks.indexOf(opListTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      intentState.renderTasks = [];\n      intentState.renderTasks.push(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    for (const [intent, intentState] of this._intentStates) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this._jsActionsPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.length !== 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this._jsActionsPromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this._intentStates.get(intent);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (let i = 0; i < intentState.renderTasks.length; i++) {\n      intentState.renderTasks[i].operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(args.intent);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (let i = 0; i < intentState.renderTasks.length; i++) {\n              intentState.renderTasks[i].operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.length !== 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(new AbortException(reason?.message));\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [intent, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(intent);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor(defer = true) {\n    this._listeners = [];\n    this._defer = defer;\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        if (transfers?.includes(buffer)) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result); // adding to cache now for cyclic references\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    if (!this._defer) {\n      this._listeners.forEach(listener => {\n        listener.call(this, { data: obj });\n      });\n      return;\n    }\n\n    const cloned = new WeakMap();\n    const e = { data: cloneValue(obj) };\n    this._deferred.then(() => {\n      this._listeners.forEach(listener => {\n        listener.call(this, e);\n      });\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {@link VerbosityLevel} should be used.\n */\n\n/** @type {any} */\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath = document.currentScript?.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler = globalThis.pdfjsWorker?.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction that controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function () {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *   parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n    });\n    this._params = params;\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: params.cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get loadingTaskSettled() {\n    return this.loadingTask._capability.settled;\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    this.pageCache.forEach(function (page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.loadingTaskSettled) {\n      const annotationStorageResetModified = this.loadingTask.promise\n        .then(pdfDocument => {\n          // Avoid initializing the `annotationStorage` if it doesn't exist.\n          if (pdfDocument.hasOwnProperty(\"annotationStorage\")) {\n            pdfDocument.annotationStorage.resetModified();\n          }\n        })\n        .catch(() => {});\n      waitOn.push(annotationStorageResetModified);\n    }\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (!(reason instanceof Error)) {\n        const msg = \"DocException - expected a valid Error.\";\n        if (\n          typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ) {\n          unreachable(msg);\n        } else {\n          warn(msg);\n        }\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function (reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument(annotationStorage) {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        numPages: this._numPages,\n        annotationStorage: annotationStorage?.getAll() || null,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        if (annotationStorage) {\n          annotationStorage.resetModified();\n        }\n      });\n  }\n\n  getFieldObjects() {\n    return this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  startCleanup() {\n    return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n      for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n        const page = this.pageCache[i];\n        if (page) {\n          const cleanupSuccessful = page.cleanup();\n\n          if (!cleanupSuccessful) {\n            throw new Error(\n              `startCleanup: Page ${i + 1} is currently rendering.`\n            );\n          }\n        }\n      }\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this._hasJSActionsPromise = null;\n    });\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableFontFace: params.disableFontFace,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj?.resolved || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  // eslint-disable-next-line no-shadow\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    get completed() {\n      return this.capability.promise.catch(function () {\n        // Ignoring errors, since we only want to know when rendering is\n        // no longer pending.\n      });\n    }\n\n    initializeGraphics({ transparency = false, optionalContentConfig }) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (this._pdfBug && globalThis.StepperManager?.enabled) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      } = this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        this.webGLContext,\n        imageLayer,\n        optionalContentConfig\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this.cancel.bind(this));\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n};\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(nativeFontFace => {\n      this._document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    return shadow(this, \"isFontLoadingAPISupported\", !!this._document?.fonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        this._document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature = null,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(new Uint8Array(this.data));\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      if (this._onUnsupportedFeature) {\n        this._onUnsupportedFeature({\n          featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n        });\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      let args,\n        js = \"\";\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\"c\", \"size\", js));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n", "/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport { BaseCanvasFactory, BaseCMapReaderFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    create(width, height) {\n      if (width <= 0 || height <= 0) {\n        throw new Error(\"Invalid canvas size\");\n      }\n      const Canvas = __non_webpack_require__(\"canvas\");\n      const canvas = Canvas.createCanvas(width, height);\n      return {\n        canvas,\n        context: canvas.getContext(\"2d\"),\n      };\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return new Promise((resolve, reject) => {\n        const fs = __non_webpack_require__(\"fs\");\n        fs.readFile(url, (error, data) => {\n          if (error || !data) {\n            reject(new Error(error));\n            return;\n          }\n          resolve({ cMapData: new Uint8Array(data), compressionType });\n        });\n      });\n    }\n  };\n}\n\nexport { NodeCanvasFactory, NodeCMapReaderFactory };\n", "/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromEntries } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable efffects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists\n   * or store and return the default value\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  getOrCreateValue(key, defaultValue) {\n    if (this._storage.has(key)) {\n      return this._storage.get(key);\n    }\n\n    this._storage.set(key, defaultValue);\n    return defaultValue;\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} value\n   */\n  setValue(key, value) {\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      this._storage.set(key, value);\n      modified = true;\n    }\n    if (modified) {\n      this._setModified();\n    }\n  }\n\n  getAll() {\n    if (this._storage.size === 0) {\n      return null;\n    }\n    return objectFromEntries(this._storage);\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n}\n\nexport { AnnotationStorage };\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // Support: Node.js\n  (function checkFontFace() {\n    // Node.js is missing native support for `@font-face`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n    }\n  })();\n}\nconst apiCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { apiCompatibilityParams };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPatternFromIR, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      },\n    });\n\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        const m = this._transformMatrix;\n        const a = m[0],\n          b = m[1],\n          c = m[2],\n          d = m[3],\n          e = m[4],\n          f = m[5];\n\n        const ad_bc = a * d - b * c;\n        const bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc,\n        ];\n      },\n    });\n\n    ctx.save = function ctxSave() {\n      const old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      const prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      const m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      const m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      const m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5],\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      const cosValue = Math.cos(angle);\n      const sinValue = Math.sin(angle);\n\n      const m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * -sinValue + m[2] * cosValue,\n        m[1] * -sinValue + m[3] * cosValue,\n        m[4],\n        m[5],\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nconst CachedCanvases = (function CachedCanvasesClosure() {\n  // eslint-disable-next-line no-shadow\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(\n      id,\n      width,\n      height,\n      trackTransform\n    ) {\n      let canvasEntry;\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n      return canvasEntry;\n    },\n    clear() {\n      for (const id in this.cache) {\n        const canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    },\n  };\n  return CachedCanvases;\n})();\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n  // prettier-ignore\n  const POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nconst CanvasExtraState = (function CanvasExtraStateClosure() {\n  // eslint-disable-next-line no-shadow\n  function CanvasExtraState() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n    this.transferMaps = null;\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    },\n  };\n  return CanvasExtraState;\n})();\n\n/**\n * @type {any}\n */\nconst CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  const EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  const EXECUTION_STEPS = 10;\n\n  // eslint-disable-next-line no-shadow\n  function CanvasGraphics(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    webGLContext,\n    imageLayer,\n    optionalContentConfig\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData, transferMaps = null) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0,\n      destPos;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n    let i, j, thisChunkHeight, elemsInThisChunk;\n\n    let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n    if (transferMaps) {\n      switch (transferMaps.length) {\n        case 1:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[0];\n          transferMapBlue = transferMaps[0];\n          transferMapGray = transferMaps[0];\n          break;\n        case 4:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[1];\n          transferMapBlue = transferMaps[2];\n          transferMapGray = transferMaps[3];\n          break;\n      }\n    }\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      const srcLength = src.byteLength;\n      const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      const dest32DataLength = dest32.length;\n      const fullSrcDiff = (width + 7) >> 3;\n      let white = 0xffffffff;\n      let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n      if (transferMapGray) {\n        if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n          [white, black] = [black, white];\n        }\n      }\n\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          const srcDiff = srcLength - srcPos;\n          let k = 0;\n          const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          const kEndUnrolled = kEnd & ~7;\n          let mask = 0;\n          let srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < destPos; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n\n    for (let i = 0; i < totalChunks; i++) {\n      const thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      let destPos = 3; // alpha component offset\n      for (let j = 0; j < thisChunkHeight; j++) {\n        let elem,\n          mask = 0;\n        for (let k = 0; k < width; k++) {\n          if (!mask) {\n            elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    const properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (let i = 0, ii = properties.length; i < ii; i++) {\n      const property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    const length = bytes.length;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        const alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    const scale = 1 / 255;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    for (let i = 3; i < length; i += 4) {\n      const y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    const hasBackdrop = !!backdrop;\n    const r0 = hasBackdrop ? backdrop[0] : 0;\n    const g0 = hasBackdrop ? backdrop[1] : 0;\n    const b0 = hasBackdrop ? backdrop[2] : 0;\n\n    let composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    const PIXELS_TO_PROCESS = 1048576;\n    const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (let row = 0; row < height; row += chunkSize) {\n      const chunkHeight = Math.min(chunkSize, height - row);\n      const maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      const layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    const mask = smask.canvas;\n    const maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    const backdrop = smask.backdrop || null;\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop,\n        },\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  const NORMAL_CLIP = {};\n  const EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      const width = this.ctx.canvas.width;\n      const height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        const transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n      this._combinedScaleFactor = Math.hypot(\n        this.baseTransform[0],\n        this.baseTransform[2]\n      );\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      let i = executionStartIdx || 0;\n      const argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      const chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      let steps = 0;\n\n      const commonObjs = this.commonObjs;\n      const objs = this.objs;\n      let fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      while (this.stateStack.length || this.current.activeSMask !== null) {\n        this.restore();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      const ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (let i = 0, ii = states.length; i < ii; i++) {\n        const state = states[i];\n        const key = state[0];\n        const value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n          case \"TR\":\n            this.current.transferMaps = value;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      const activeSMask = this.current.activeSMask;\n      const drawnWidth = activeSMask.canvas.width;\n      const drawnHeight = activeSMask.canvas.height;\n      const cacheId = \"smaskGroupAt\" + this.groupLevel;\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      const currentCtx = this.ctx;\n      const currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      const groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_resumeSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      const groupCtx = this.current.resumeSMaskCtx;\n      const currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      const old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      } else {\n        // We've finished all the SMask groups, reflect that in our state.\n        this.current.activeSMask = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    },\n\n    // Path\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      const ctx = this.ctx;\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n\n            const xw = x + width;\n            const yh = y + height;\n            ctx.moveTo(x, y);\n            if (width === 0 || height === 0) {\n              ctx.lineTo(xw, yh);\n            } else {\n              ctx.lineTo(xw, y);\n              ctx.lineTo(xw, yh);\n              ctx.lineTo(x, yh);\n            }\n\n            ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (this.contentVisible) {\n        if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n          // for patterns, we transform to pattern space, calculate\n          // the pattern, call stroke, and restore to user space\n          ctx.save();\n          // The current transform will be replaced while building the pattern,\n          // but the line width needs to be adjusted by the current transform,\n          // so we must scale it. To properly fix this we should be using a\n          // pattern transform instead (see #10955).\n          const transform = ctx.mozCurrentTransform;\n          const scale = Util.singularValueDecompose2dScale(transform)[0];\n          ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n          const lineWidth = this.getSinglePixelWidth();\n          const scaledLineWidth = this.current.lineWidth * scale;\n          if (lineWidth < 0 && -lineWidth >= scaledLineWidth) {\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          } else {\n            ctx.lineWidth = Math.max(lineWidth, scaledLineWidth);\n          }\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          const lineWidth = this.getSinglePixelWidth();\n          if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n            // The current transform will transform a square pixel into a\n            // parallelogram where both heights are lower than 1 and not equal.\n            ctx.save();\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            ctx.stroke();\n            ctx.restore();\n          } else {\n            // Prevent drawing too thin lines by enforcing a minimum line width.\n            ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n            ctx.stroke();\n          }\n        }\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      let needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.contentVisible) {\n        if (this.pendingEOFill) {\n          ctx.fill(\"evenodd\");\n          this.pendingEOFill = false;\n        } else {\n          ctx.fill();\n        }\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      const paths = this.pendingTextPaths;\n      const ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (let i = 0; i < paths.length; i++) {\n        const path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      const fontObj = this.commonObjs.get(fontRefName);\n      const current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      const name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n      const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const textRenderingMode = current.textRenderingMode;\n      const fontSize = current.fontSize / current.fontSizeScale;\n      const fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      const isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && !font.missingFile;\n\n      let addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          if (resetLineWidthToOne) {\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          }\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          if (resetLineWidthToOne) {\n            ctx.save();\n            ctx.moveTo(x, y);\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            ctx.strokeText(character, 0, 0);\n            ctx.restore();\n          } else {\n            ctx.strokeText(character, x, y);\n          }\n        }\n      }\n\n      if (isAddToPathSet) {\n        const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      const data = ctx.getImageData(0, 0, 10, 10).data;\n      let enabled = false;\n      for (let i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      const ctx = this.ctx;\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const glyphsLength = glyphs.length;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      const simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      let lineWidth = current.lineWidth;\n      let resetLineWidthToOne = false;\n      const scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        const fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth();\n          resetLineWidthToOne = lineWidth < 0;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      let x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        const glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        let restoreNeeded = false;\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        const accent = glyph.accent;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          const vx =\n            -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n          const measuredWidth =\n            ((ctx.measureText(character).width * 1000) / fontSize) *\n            fontSizeScale;\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            const characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX +=\n              (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(\n              character,\n              scaledX,\n              scaledY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n            if (accent) {\n              const scaledAccentX =\n                scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n              const scaledAccentY =\n                scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform,\n                resetLineWidthToOne\n              );\n            }\n          }\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n    },\n\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      const fontDirection = current.fontDirection;\n      const spacingDir = font.vertical ? 1 : -1;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const textHScale = current.textHScale * fontDirection;\n      const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      const glyphsLength = glyphs.length;\n      const isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      let i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        if (this.contentVisible) {\n          this.processingType3 = glyph;\n          this.save();\n          ctx.scale(fontSize, fontSize);\n          ctx.transform.apply(ctx, fontMatrix);\n          this.executeOperatorList(operatorList);\n          this.restore();\n        }\n\n        const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(\n      xWidth,\n      yWidth,\n      llx,\n      lly,\n      urx,\n      ury\n    ) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      let pattern;\n      if (IR[0] === \"TilingPattern\") {\n        const color = IR[1];\n        const baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        const canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory,\n              this.webGLContext\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPatternFromIR(IR);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      const color = Util.makeHexColor(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      const color = Util.makeHexColor(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      this.save();\n      const pattern = getShadingPatternFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      const inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        const canvas = ctx.canvas;\n        const width = canvas.width;\n        const height = canvas.height;\n\n        const bl = Util.applyTransform([0, 0], inv);\n        const br = Util.applyTransform([0, height], inv);\n        const ul = Util.applyTransform([width, 0], inv);\n        const ur = Util.applyTransform([width, height], inv);\n\n        const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(\n      matrix,\n      bbox\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n\n      this.save();\n      const currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      const currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      let bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      const canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      const offsetX = Math.floor(bounds[0]);\n      const offsetY = Math.floor(bounds[1]);\n      let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      let scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      let cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      const groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Reseting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.groupLevel--;\n      const groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(\n      rect,\n      transform,\n      matrix\n    ) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        const width = rect[2] - rect[0];\n        const height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const width = img.width,\n        height = img.height;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n\n      const glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph?.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      skewX = 0,\n      skewY = 0,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      const ctx = this.ctx;\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(\n          scaleX,\n          skewX,\n          skewY,\n          scaleY,\n          positions[i],\n          positions[i + 1]\n        );\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(\n      images\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      for (let i = 0, ii = images.length; i < ii; i++) {\n        const image = images[i];\n        const width = image.width,\n          height = image.height;\n\n        const maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        const maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(\n      objId,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      const width = imgData.width;\n      const height = imgData.height;\n      const map = [];\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(\n      imgData\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const width = imgData.width;\n      const height = imgData.height;\n      const ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      const currentTransform = ctx.mozCurrentTransformInverse;\n      const a = currentTransform[0],\n        b = currentTransform[1];\n      let widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      const c = currentTransform[2],\n        d = currentTransform[3];\n      let heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n\n      let imgToPaint, tmpCanvas, tmpCtx;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      let paintWidth = width,\n        paintHeight = height;\n      let tmpCanvasId = \"prescale1\";\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size.\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        let newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(\n      imgData,\n      map\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const w = imgData.width;\n      const h = imgData.height;\n\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n      for (let i = 0, ii = map.length; i < ii; i++) {\n        const entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          const position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n      tag,\n      properties\n    ) {\n      if (tag === \"OC\") {\n        this.markedContentStack.push({\n          visible: this.optionalContentConfig.isVisible(properties),\n        });\n      } else {\n        this.markedContentStack.push({\n          visible: true,\n        });\n      }\n      this.contentVisible = this.isContentVisible();\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      this.markedContentStack.pop();\n      this.contentVisible = this.isContentVisible();\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      const ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    },\n    getSinglePixelWidth() {\n      if (this._cachedGetSinglePixelWidth === null) {\n        // If transform is [a b] then a pixel (square) is transformed\n        //                 [c d]\n        // into a parallelogram: its area is the abs value of the determinant.\n        // This parallelogram has 2 heights:\n        //  - Area / |col_1|;\n        //  - Area / |col_2|.\n        // so in order to get a height of at least 1, pixel height\n        // must be computed as followed:\n        //  h = max(sqrt(a\u00B2 + c\u00B2) / |det(M)|, sqrt(b\u00B2 + d\u00B2) / |det(M)|).\n        // This is equivalent to:\n        //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n        const m = this.ctx.mozCurrentTransform;\n\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n        const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n        const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n        if (\n          sqNorm1 !== sqNorm2 &&\n          this._combinedScaleFactor * pixelHeight > 1\n        ) {\n          // The parallelogram isn't a square and at least one height\n          // is lower than 1 so the resulting line width must be 1\n          // but it cannot be achieved with one scale: when scaling a pixel\n          // we'll get a rectangle (see issue #12295).\n          // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n          // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n          // then we'll get a rectangle 1x1e5 which is wrong.\n          // In this case, we must reset the transform, set linewidth to 1\n          // and then stroke.\n          this._cachedGetSinglePixelWidth = -(\n            this._combinedScaleFactor * pixelHeight\n          );\n        } else if (absDet > Number.EPSILON) {\n          // The multiplication by the constant 1.0000001 is here to have\n          // a number slightly greater than what we \"exactly\" want.\n          this._cachedGetSinglePixelWidth = pixelHeight * 1.0000001;\n        } else {\n          // Matrix is non-invertible.\n          this._cachedGetSinglePixelWidth = 1;\n        }\n      }\n\n      return this._cachedGetSinglePixelWidth;\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      const transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    },\n\n    isContentVisible: function CanvasGraphics_isContentVisible() {\n      for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n        if (!this.markedContentStack[i].visible) {\n          return false;\n        }\n      }\n      return true;\n    },\n  };\n\n  for (const op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n", "/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, Util } from \"../shared/util.js\";\n\nconst ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    const type = raw[1];\n    const bbox = raw[2];\n    const colorStops = raw[3];\n    const p0 = raw[4];\n    const p1 = raw[5];\n    const r0 = raw[6];\n    const r1 = raw[7];\n    return {\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        let grad;\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (let i = 0, ii = colorStops.length; i < ii; ++i) {\n          const c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      },\n    };\n  },\n};\n\nconst createMeshCanvas = (function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    // Very basic Gouraud-shaded triangle rasterization algorithm.\n    const coords = context.coords,\n      colors = context.colors;\n    const bytes = data.data,\n      rowSize = data.width * 4;\n    let tmp;\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n    if (y1 >= y3) {\n      return;\n    }\n    const c1r = colors[c1],\n      c1g = colors[c1 + 1],\n      c1b = colors[c1 + 2];\n    const c2r = colors[c2],\n      c2g = colors[c2 + 1],\n      c2b = colors[c2 + 2];\n    const c3r = colors[c3],\n      c3g = colors[c3 + 1],\n      c3b = colors[c3 + 2];\n\n    const minY = Math.round(y1),\n      maxY = Math.round(y3);\n    let xa, car, cag, cab;\n    let xb, cbr, cbg, cbb;\n    for (let y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      const x1_ = Math.round(Math.min(xa, xb));\n      const x2_ = Math.round(Math.max(xa, xb));\n      let j = rowSize * y + x1_ * 4;\n      for (let x = x1_; x <= x2_; x++) {\n        k = (xa - x) / (xa - xb);\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n        bytes[j++] = (car - (car - cbr) * k) | 0;\n        bytes[j++] = (cag - (cag - cbg) * k) | 0;\n        bytes[j++] = (cab - (cab - cbb) * k) | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    const ps = figure.coords;\n    const cs = figure.colors;\n    let i, ii;\n    switch (figure.type) {\n      case \"lattice\":\n        const verticesPerRow = figure.verticesPerRow;\n        const rows = Math.floor(ps.length / verticesPerRow) - 1;\n        const cols = verticesPerRow - 1;\n        for (i = 0; i < rows; i++) {\n          let q = i * verticesPerRow;\n          for (let j = 0; j < cols; j++, q++) {\n            drawTriangle(\n              data,\n              context,\n              ps[q],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n            drawTriangle(\n              data,\n              context,\n              ps[q + verticesPerRow + 1],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q + verticesPerRow + 1],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n          }\n        }\n        break;\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(\n            data,\n            context,\n            ps[i],\n            ps[i + 1],\n            ps[i + 2],\n            cs[i],\n            cs[i + 1],\n            cs[i + 2]\n          );\n        }\n        break;\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  // eslint-disable-next-line no-shadow\n  function createMeshCanvas(\n    bounds,\n    combinesScale,\n    coords,\n    colors,\n    figures,\n    backgroundColor,\n    cachedCanvases,\n    webGLContext\n  ) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    const boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    let canvas, tmpCanvas, i, ii;\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context,\n      });\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=972126\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      const tmpCtx = tmpCanvas.context;\n\n      const data = tmpCtx.createImageData(width, height);\n      if (backgroundColor) {\n        const bytes = data.data;\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n  return createMeshCanvas;\n})();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    // var type = raw[1];\n    const coords = raw[2];\n    const colors = raw[3];\n    const figures = raw[4];\n    const bounds = raw[5];\n    const matrix = raw[6];\n    const bbox = raw[7];\n    const background = raw[8];\n    return {\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        let scale;\n        if (shadingFill) {\n          scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          // Obtain scale from matrix and current transformation matrix.\n          scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n          if (matrix) {\n            const matrixScale = Util.singularValueDecompose2dScale(matrix);\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        // Rasterizing on the main thread since sending/queue large canvases\n        // might cause OOM.\n        const temporaryPatternCanvas = createMeshCanvas(\n          bounds,\n          scale,\n          coords,\n          colors,\n          figures,\n          shadingFill ? null : background,\n          owner.cachedCanvases,\n          owner.webGLContext\n        );\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(\n          temporaryPatternCanvas.offsetX,\n          temporaryPatternCanvas.offsetY\n        );\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      },\n    };\n  },\n};\n\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      },\n    };\n  },\n};\n\nfunction getShadingPatternFromIR(raw) {\n  const shadingIR = ShadingIRs[raw[0]];\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n  return shadingIR.fromIR(raw);\n}\n\n/**\n * @type {any}\n */\nconst TilingPattern = (function TilingPatternClosure() {\n  const PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2,\n  };\n\n  const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  // eslint-disable-next-line no-shadow\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      const operatorList = this.operatorList;\n      const bbox = this.bbox;\n      const xstep = this.xstep;\n      const ystep = this.ystep;\n      const paintType = this.paintType;\n      const tilingType = this.tilingType;\n      const color = this.color;\n      const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n      info(\"TilingType: \" + tilingType);\n\n      // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n      // described by bbox, and may repeat regularly by shifting the cell by\n      // xstep and ystep.\n      // Because the HTML5 canvas API does not support pattern repetition with\n      // gaps in between, we use the xstep/ystep instead of the bbox's size.\n      //\n      // This has the following consequences (similarly for ystep):\n      //\n      // - If xstep is the same as bbox, then there is no observable difference.\n      //\n      // - If xstep is larger than bbox, then the pattern canvas is partially\n      //   empty: the area bounded by bbox is painted, the outside area is void.\n      //\n      // - If xstep is smaller than bbox, then the pixels between xstep and the\n      //   bbox boundary will be missing. This is INCORRECT behavior.\n      //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n      //   but overlapping cells without common pixels are still valid.\n      //   TODO: Fix the implementation, to allow this scenario to be painted\n      //   correctly.\n\n      const x0 = bbox[0],\n        y0 = bbox[1],\n        x1 = bbox[2],\n        y1 = bbox[3];\n\n      // Obtain scale from matrix and current transformation matrix.\n      const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      const curMatrixScale = Util.singularValueDecompose2dScale(\n        this.baseTransform\n      );\n      const combinedScale = [\n        matrixScale[0] * curMatrixScale[0],\n        matrixScale[1] * curMatrixScale[1],\n      ];\n\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      const dimx = this.getSizeAndScale(\n        xstep,\n        this.ctx.canvas.width,\n        combinedScale[0]\n      );\n      const dimy = this.getSizeAndScale(\n        ystep,\n        this.ctx.canvas.height,\n        combinedScale[1]\n      );\n\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        dimx.size,\n        dimy.size,\n        true\n      );\n      const tmpCtx = tmpCanvas.context;\n      const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n      // transform coordinates to pattern space\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n\n      // Rescale canvas so that the ctx.createPattern call generates a pattern\n      // with the desired size.\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n\n    getSizeAndScale: function TilingPattern_getSizeAndScale(\n      step,\n      realOutputSize,\n      scale\n    ) {\n      // xstep / ystep may be negative -- normalize.\n      step = Math.abs(step);\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use the destination canvas's size if it is bigger than the hard-coded\n      // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n      // whole canvas.\n      const maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      let size = Math.ceil(step * scale);\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n      return { scale, size };\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        const bboxWidth = x1 - x0;\n        const bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(\n      graphics,\n      paintType,\n      color\n    ) {\n      const context = graphics.ctx,\n        current = graphics.current;\n      switch (paintType) {\n        case PaintType.COLORED:\n          const ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n        case PaintType.UNCOLORED:\n          const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          // Set color needed by image masks (fixes issues 3226 and 8741).\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n        default:\n          throw new FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n\n      const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    },\n  };\n\n  return TilingPattern;\n})();\n\nexport { getShadingPatternFromIR, TilingPattern };\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, objectFromEntries } from \"../shared/util.js\";\nimport { SimpleXMLParser } from \"../shared/xml_parser.js\";\n\nclass Metadata {\n  constructor(data) {\n    assert(typeof data === \"string\", \"Metadata: input is not a string\");\n\n    // Ghostscript may produce invalid metadata, so try to repair that first.\n    data = this._repair(data);\n\n    // Convert the string to an XML document.\n    const parser = new SimpleXMLParser({ lowerCaseName: true });\n    const xmlDocument = parser.parseFromString(data);\n\n    this._metadataMap = new Map();\n\n    if (xmlDocument) {\n      this._parse(xmlDocument);\n    }\n    this._data = data;\n  }\n\n  _repair(data) {\n    // Start by removing any \"junk\" before the first tag (see issue 10395).\n    return data\n      .replace(/^[^<]+/, \"\")\n      .replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n        const bytes = codes\n          .replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n            return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n          })\n          .replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n            switch (name) {\n              case \"amp\":\n                return \"&\";\n              case \"apos\":\n                return \"'\";\n              case \"gt\":\n                return \">\";\n              case \"lt\":\n                return \"<\";\n              case \"quot\":\n                return '\"';\n            }\n            throw new Error(`_repair: ${name} isn't defined.`);\n          });\n\n        let chars = \"\";\n        for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n          const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n          if (\n            code >= /* Space = */ 32 &&\n            code < /* Delete = */ 127 &&\n            code !== /* '<' = */ 60 &&\n            code !== /* '>' = */ 62 &&\n            code !== /* '&' = */ 38\n          ) {\n            chars += String.fromCharCode(code);\n          } else {\n            chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n          }\n        }\n\n        return \">\" + chars;\n      });\n  }\n\n  _getSequence(entry) {\n    const name = entry.nodeName;\n    if (name !== \"rdf:bag\" && name !== \"rdf:seq\" && name !== \"rdf:alt\") {\n      return null;\n    }\n\n    return entry.childNodes.filter(node => node.nodeName === \"rdf:li\");\n  }\n\n  _getCreators(entry) {\n    if (entry.nodeName !== \"dc:creator\") {\n      return false;\n    }\n    if (!entry.hasChildNodes()) {\n      return true;\n    }\n\n    // Child must be a Bag (unordered array) or a Seq.\n    const seqNode = entry.childNodes[0];\n    const authors = this._getSequence(seqNode) || [];\n    this._metadataMap.set(\n      entry.nodeName,\n      authors.map(node => node.textContent.trim())\n    );\n\n    return true;\n  }\n\n  _parse(xmlDocument) {\n    let rdf = xmlDocument.documentElement;\n\n    if (rdf.nodeName !== \"rdf:rdf\") {\n      // Wrapped in <xmpmeta>\n      rdf = rdf.firstChild;\n      while (rdf && rdf.nodeName !== \"rdf:rdf\") {\n        rdf = rdf.nextSibling;\n      }\n    }\n\n    if (!rdf || rdf.nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n      return;\n    }\n\n    for (const desc of rdf.childNodes) {\n      if (desc.nodeName !== \"rdf:description\") {\n        continue;\n      }\n\n      for (const entry of desc.childNodes) {\n        const name = entry.nodeName;\n        if (name === \"#text\") {\n          continue;\n        }\n        if (this._getCreators(entry)) {\n          continue;\n        }\n        this._metadataMap.set(name, entry.textContent.trim());\n      }\n    }\n  }\n\n  getRaw() {\n    return this._data;\n  }\n\n  get(name) {\n    return this._metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromEntries(this._metadataMap);\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// The code for XMLParserBase copied from\n// https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/avm2/natives/xml.ts\n\nimport { encodeToXmlString } from \"./util.js\";\n\nconst XMLParserErrorCode = {\n  NoError: 0,\n  EndOfDocument: -1,\n  UnterminatedCdat: -2,\n  UnterminatedXmlDeclaration: -3,\n  UnterminatedDoctypeDeclaration: -4,\n  UnterminatedComment: -5,\n  MalformedElement: -6,\n  OutOfMemory: -7,\n  UnterminatedAttributeValue: -8,\n  UnterminatedElement: -9,\n  ElementNeverBegun: -10,\n};\n\nfunction isWhitespace(s, index) {\n  const ch = s[index];\n  return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n}\n\nfunction isWhitespaceString(s) {\n  for (let i = 0, ii = s.length; i < ii; i++) {\n    if (!isWhitespace(s, i)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass XMLParserBase {\n  _resolveEntities(s) {\n    return s.replace(/&([^;]+);/g, (all, entity) => {\n      if (entity.substring(0, 2) === \"#x\") {\n        return String.fromCodePoint(parseInt(entity.substring(2), 16));\n      } else if (entity.substring(0, 1) === \"#\") {\n        return String.fromCodePoint(parseInt(entity.substring(1), 10));\n      }\n      switch (entity) {\n        case \"lt\":\n          return \"<\";\n        case \"gt\":\n          return \">\";\n        case \"amp\":\n          return \"&\";\n        case \"quot\":\n          return '\"';\n      }\n      return this.onResolveEntity(entity);\n    });\n  }\n\n  _parseContent(s, start) {\n    const attributes = [];\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    while (\n      pos < s.length &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\" &&\n      s[pos] !== \"?\"\n    ) {\n      skipWs();\n      let attrName = \"\",\n        attrValue = \"\";\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n        attrName += s[pos];\n        ++pos;\n      }\n      skipWs();\n      if (s[pos] !== \"=\") {\n        return null;\n      }\n      ++pos;\n      skipWs();\n      const attrEndChar = s[pos];\n      if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n        return null;\n      }\n      const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n      if (attrEndIndex < 0) {\n        return null;\n      }\n      attrValue = s.substring(pos, attrEndIndex);\n      attributes.push({\n        name: attrName,\n        value: this._resolveEntities(attrValue),\n      });\n      pos = attrEndIndex + 1;\n      skipWs();\n    }\n    return {\n      name,\n      attributes,\n      parsed: pos - start,\n    };\n  }\n\n  _parseProcessingInstruction(s, start) {\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    const attrStart = pos;\n    while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n      ++pos;\n    }\n    const value = s.substring(attrStart, pos);\n    return {\n      name,\n      value,\n      parsed: pos - start,\n    };\n  }\n\n  parseXml(s) {\n    let i = 0;\n    while (i < s.length) {\n      const ch = s[i];\n      let j = i;\n      if (ch === \"<\") {\n        ++j;\n        const ch2 = s[j];\n        let q;\n        switch (ch2) {\n          case \"/\":\n            ++j;\n            q = s.indexOf(\">\", j);\n            if (q < 0) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onEndElement(s.substring(j, q));\n            j = q + 1;\n            break;\n          case \"?\":\n            ++j;\n            const pi = this._parseProcessingInstruction(s, j);\n            if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n              this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n              return;\n            }\n            this.onPi(pi.name, pi.value);\n            j += pi.parsed + 2;\n            break;\n          case \"!\":\n            if (s.substring(j + 1, j + 3) === \"--\") {\n              q = s.indexOf(\"-->\", j + 3);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedComment);\n                return;\n              }\n              this.onComment(s.substring(j + 3, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n              q = s.indexOf(\"]]>\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedCdat);\n                return;\n              }\n              this.onCdata(s.substring(j + 8, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n              const q2 = s.indexOf(\"[\", j + 8);\n              let complexDoctype = false;\n              q = s.indexOf(\">\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                return;\n              }\n              if (q2 > 0 && q > q2) {\n                q = s.indexOf(\"]>\", j + 8);\n                if (q < 0) {\n                  this.onError(\n                    XMLParserErrorCode.UnterminatedDoctypeDeclaration\n                  );\n                  return;\n                }\n                complexDoctype = true;\n              }\n              const doctypeContent = s.substring(\n                j + 8,\n                q + (complexDoctype ? 1 : 0)\n              );\n              this.onDoctype(doctypeContent);\n              j = q + (complexDoctype ? 2 : 1);\n            } else {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            break;\n          default:\n            const content = this._parseContent(s, j);\n            if (content === null) {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            let isClosed = false;\n            if (\n              s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\"\n            ) {\n              isClosed = true;\n            } else if (\n              s.substring(j + content.parsed, j + content.parsed + 1) !== \">\"\n            ) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onBeginElement(content.name, content.attributes, isClosed);\n            j += content.parsed + (isClosed ? 2 : 1);\n            break;\n        }\n      } else {\n        while (j < s.length && s[j] !== \"<\") {\n          j++;\n        }\n        const text = s.substring(i, j);\n        this.onText(this._resolveEntities(text));\n      }\n      i = j;\n    }\n  }\n\n  onResolveEntity(name) {\n    return `&${name};`;\n  }\n\n  onPi(name, value) {}\n\n  onComment(text) {}\n\n  onCdata(text) {}\n\n  onDoctype(doctypeContent) {}\n\n  onText(text) {}\n\n  onBeginElement(name, attributes, isEmpty) {}\n\n  onEndElement(name) {}\n\n  onError(code) {}\n}\n\nclass SimpleDOMNode {\n  constructor(nodeName, nodeValue) {\n    this.nodeName = nodeName;\n    this.nodeValue = nodeValue;\n\n    Object.defineProperty(this, \"parentNode\", { value: null, writable: true });\n  }\n\n  get firstChild() {\n    return this.childNodes && this.childNodes[0];\n  }\n\n  get nextSibling() {\n    const childNodes = this.parentNode.childNodes;\n    if (!childNodes) {\n      return undefined;\n    }\n    const index = childNodes.indexOf(this);\n    if (index === -1) {\n      return undefined;\n    }\n    return childNodes[index + 1];\n  }\n\n  get textContent() {\n    if (!this.childNodes) {\n      return this.nodeValue || \"\";\n    }\n    return this.childNodes\n      .map(function (child) {\n        return child.textContent;\n      })\n      .join(\"\");\n  }\n\n  hasChildNodes() {\n    return this.childNodes && this.childNodes.length > 0;\n  }\n\n  /**\n   * Search a node in the tree with the given path\n   * foo.bar[nnn], i.e. find the nnn-th node named\n   * bar under a node named foo.\n   *\n   * @param {Array} paths - an array of objects as\n   * returned by {parseXFAPath}.\n   * @param {number} pos - the current position in\n   * the paths array.\n   * @returns {SimpleDOMNode} The node corresponding\n   * to the path or null if not found.\n   */\n  searchNode(paths, pos) {\n    if (pos >= paths.length) {\n      return this;\n    }\n\n    const component = paths[pos];\n    const stack = [];\n    let node = this;\n\n    while (true) {\n      if (component.name === node.nodeName) {\n        if (component.pos === 0) {\n          const res = node.searchNode(paths, pos + 1);\n          if (res !== null) {\n            return res;\n          }\n        } else if (stack.length === 0) {\n          return null;\n        } else {\n          const [parent] = stack.pop();\n          let siblingPos = 0;\n          for (const child of parent.childNodes) {\n            if (component.name === child.nodeName) {\n              if (siblingPos === component.pos) {\n                return child.searchNode(paths, pos + 1);\n              }\n              siblingPos++;\n            }\n          }\n          // We didn't find the correct sibling\n          // so just return the first found node\n          return node.searchNode(paths, pos + 1);\n        }\n      }\n\n      if (node.childNodes && node.childNodes.length !== 0) {\n        stack.push([node, 0]);\n        node = node.childNodes[0];\n      } else if (stack.length === 0) {\n        return null;\n      } else {\n        while (stack.length !== 0) {\n          const [parent, currentPos] = stack.pop();\n          const newPos = currentPos + 1;\n          if (newPos < parent.childNodes.length) {\n            stack.push([parent, newPos]);\n            node = parent.childNodes[newPos];\n            break;\n          }\n        }\n        if (stack.length === 0) {\n          return null;\n        }\n      }\n    }\n  }\n\n  dump(buffer) {\n    if (this.nodeName === \"#text\") {\n      buffer.push(encodeToXmlString(this.nodeValue));\n      return;\n    }\n\n    buffer.push(`<${this.nodeName}`);\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        buffer.push(\n          ` ${attribute.name}=\"${encodeToXmlString(attribute.value)}\"`\n        );\n      }\n    }\n    if (this.hasChildNodes()) {\n      buffer.push(\">\");\n      for (const child of this.childNodes) {\n        child.dump(buffer);\n      }\n      buffer.push(`</${this.nodeName}>`);\n    } else if (this.nodeValue) {\n      buffer.push(`>${encodeToXmlString(this.nodeValue)}</${this.nodeName}>`);\n    } else {\n      buffer.push(\"/>\");\n    }\n  }\n}\n\nclass SimpleXMLParser extends XMLParserBase {\n  constructor({ hasAttributes = false, lowerCaseName = false }) {\n    super();\n    this._currentFragment = null;\n    this._stack = null;\n    this._errorCode = XMLParserErrorCode.NoError;\n    this._hasAttributes = hasAttributes;\n    this._lowerCaseName = lowerCaseName;\n  }\n\n  parseFromString(data) {\n    this._currentFragment = [];\n    this._stack = [];\n    this._errorCode = XMLParserErrorCode.NoError;\n\n    this.parseXml(data);\n\n    if (this._errorCode !== XMLParserErrorCode.NoError) {\n      return undefined; // return undefined on error\n    }\n\n    // We should only have one root.\n    const [documentElement] = this._currentFragment;\n    if (!documentElement) {\n      return undefined; // Return undefined if no root was found.\n    }\n    return { documentElement };\n  }\n\n  onResolveEntity(name) {\n    switch (name) {\n      case \"apos\":\n        return \"'\";\n    }\n    return super.onResolveEntity(name);\n  }\n\n  onText(text) {\n    if (isWhitespaceString(text)) {\n      return;\n    }\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onCdata(text) {\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onBeginElement(name, attributes, isEmpty) {\n    if (this._lowerCaseName) {\n      name = name.toLowerCase();\n    }\n    const node = new SimpleDOMNode(name);\n    node.childNodes = [];\n    if (this._hasAttributes) {\n      node.attributes = attributes;\n    }\n    this._currentFragment.push(node);\n    if (isEmpty) {\n      return;\n    }\n    this._stack.push(this._currentFragment);\n    this._currentFragment = node.childNodes;\n  }\n\n  onEndElement(name) {\n    this._currentFragment = this._stack.pop() || [];\n    const lastElement = this._currentFragment[this._currentFragment.length - 1];\n    if (!lastElement) {\n      return;\n    }\n    for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n      lastElement.childNodes[i].parentNode = lastElement;\n    }\n  }\n\n  onError(code) {\n    this._errorCode = code;\n  }\n}\n\nexport { SimpleDOMNode, SimpleXMLParser };\n", "/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromEntries, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  isVisible(group) {\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available. Until\n      // we implement this, just fallback to using the group policy for now.\n      if (group.expression) {\n        warn(\"Visibility expression not supported yet.\");\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    if (!this._groups.size) {\n      return null;\n    }\n    return objectFromEntries(this._groups);\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeReaders.slice(0);\n    readers.forEach(function (rangeReader) {\n      rangeReader.cancel(reason);\n    });\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({ value: undefined, done: true });\n      });\n      this._requests = [];\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n", "/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-multi-str */\n\nimport { shadow } from \"../shared/util.js\";\n\nclass WebGLContext {\n  constructor({ enable = false }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n    return shadow(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({ layer, mask, properties }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({ width, height, backgroundColor, figures, context }) {\n    return WebGLUtils.drawFigures(\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    );\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n}\n\nconst WebGLUtils = (function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    const shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      const errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n    return shader;\n  }\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n  function createProgram(gl, shaders) {\n    const program = gl.createProgram();\n    for (let i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n    gl.linkProgram(program);\n    const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      const errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n    return program;\n  }\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  let currentGL, currentCanvas;\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    // The temporary canvas is used in the WebGL context.\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false,\n    });\n  }\n\n  const smaskVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n\n  const smaskFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n\n  let smaskCache = null;\n\n  function initSmaskGL() {\n    generateGL();\n    const canvas = currentCanvas;\n    currentCanvas = null;\n    const gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    const vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    const fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    const program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    const cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n\n    const texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    const texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    const texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n\n    // provide texture coordinates for the rectangle.\n    const texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0.0, 0.0,\n      1.0, 0.0,\n      0.0, 1.0,\n      0.0, 1.0,\n      1.0, 0.0,\n      1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    const width = layer.width,\n      height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n    const cache = smaskCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(\n        cache.resolutionLocation,\n        properties.backdrop[0],\n        properties.backdrop[1],\n        properties.backdrop[2],\n        1\n      );\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n    gl.uniform1i(\n      cache.subtypeLocation,\n      properties.subtype === \"Luminosity\" ? 1 : 0\n    );\n\n    // Create a textures\n    const texture = createTexture(gl, layer, gl.TEXTURE0);\n    const maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n\n    // Create a buffer and put a single clipspace rectangle in\n    // it (2 triangles)\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0, 0,\n      width, 0,\n      0, height,\n      0, height,\n      width, 0,\n      width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // draw\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    gl.flush();\n\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n\n    return canvas;\n  }\n\n  const figuresVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n\n  const figuresFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n\n  let figuresCache = null;\n\n  function initFiguresGL() {\n    generateGL();\n    const canvas = currentCanvas;\n    currentCanvas = null;\n    const gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    const vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    const fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    const program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    const cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n    const cache = figuresCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    // count triangle points\n    let count = 0;\n    for (let i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          const rows =\n            (figures[i].coords.length / figures[i].verticesPerRow) | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n    // transfer data\n    const coords = new Float32Array(count * 2);\n    const colors = new Uint8Array(count * 3);\n    const coordsMap = context.coords,\n      colorsMap = context.colors;\n    let pIndex = 0,\n      cIndex = 0;\n    for (let i = 0, ii = figures.length; i < ii; i++) {\n      const figure = figures[i],\n        ps = figure.coords,\n        cs = figure.colors;\n      switch (figure.type) {\n        case \"lattice\":\n          const cols = figure.verticesPerRow;\n          const rows = (ps.length / cols) | 0;\n          for (let row = 1; row < rows; row++) {\n            let offset = row * cols + 1;\n            for (let col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n          break;\n        case \"triangles\":\n          for (let j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n          break;\n      }\n    }\n\n    // draw\n    if (backgroundColor) {\n      gl.clearColor(\n        backgroundColor[0] / 255,\n        backgroundColor[1] / 255,\n        backgroundColor[2] / 255,\n        1.0\n      );\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    const coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    const colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(\n      cache.colorLocation,\n      3,\n      gl.UNSIGNED_BYTE,\n      false,\n      0,\n      0\n    );\n\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n\n    gl.flush();\n\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n      return false;\n    },\n\n    composeSMask,\n\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache?.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n      if (figuresCache?.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n      smaskCache = null;\n      figuresCache = null;\n    },\n  };\n})();\n\nexport { WebGLContext };\n", "/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    this.quadrilaterals.forEach(quadrilateral => {\n      quadrilateral.className = className;\n    });\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, { isRenderable, createQuadrilaterals: true });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else if (\n      data.actions &&\n      (data.actions.Action ||\n        data.actions[\"Mouse Up\"] ||\n        data.actions[\"Mouse Down\"]) &&\n      this.enableScripting &&\n      this.hasJSActions\n    ) {\n      this._bindJSAction(link, data);\n    } else {\n      this._bindLink(link, \"\");\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    return (\n      (navigator.platform.includes(\"Win\") && event.ctrlKey) ||\n      (navigator.platform.includes(\"Mac\") && event.metaKey)\n    );\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: event.target.checked,\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const textContent = storage.getOrCreateValue(id, {\n        value: this.data.fieldValue,\n      }).value;\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        beforeInputSelectionRange: null,\n        beforeInputValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", function (event) {\n        storage.setValue(id, { value: event.target.value });\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        event.target.setSelectionRange(0, 0);\n        elementData.beforeInputSelectionRange = null;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        element.addEventListener(\"updatefromsandbox\", function (event) {\n          const { detail } = event;\n          const actions = {\n            value() {\n              elementData.userValue = detail.value || \"\";\n              storage.setValue(id, { value: elementData.userValue.toString() });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString() {\n              elementData.formattedValue = detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, {\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            focus() {\n              setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n            },\n            userName() {\n              // tooltip\n              event.target.title = detail.userName;\n            },\n            hidden() {\n              event.target.style.visibility = detail.hidden\n                ? \"hidden\"\n                : \"visible\";\n              storage.setValue(id, { hidden: detail.hidden });\n            },\n            editable() {\n              event.target.disabled = !detail.editable;\n            },\n            selRange() {\n              const [selStart, selEnd] = detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n            strokeColor() {\n              const color = detail.strokeColor;\n              event.target.style.color = ColorConverters[`${color[0]}_HTML`](\n                color.slice(1)\n              );\n            },\n          };\n          Object.keys(detail)\n            .filter(name => name in actions)\n            .forEach(name => actions[name]());\n        });\n\n        if (this.data.actions) {\n          // Even if the field hasn't any actions\n          // leaving it can still trigger some actions with Calculate\n          element.addEventListener(\"keydown\", event => {\n            elementData.beforeInputValue = event.target.value;\n            // if the key is one of Escape, Enter or Tab\n            // then the data are committed\n            let commitKey = -1;\n            if (event.key === \"Escape\") {\n              commitKey = 0;\n            } else if (event.key === \"Enter\") {\n              commitKey = 2;\n            } else if (event.key === \"Tab\") {\n              commitKey = 3;\n            }\n            if (commitKey === -1) {\n              return;\n            }\n            // Save the entered value\n            elementData.userValue = event.target.value;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          });\n          const _blurListener = blurListener;\n          blurListener = null;\n          element.addEventListener(\"blur\", event => {\n            if (this._mouseState.isDown) {\n              // Focus out using the mouse: data are committed\n              elementData.userValue = event.target.value;\n              this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                source: this,\n                detail: {\n                  id,\n                  name: \"Keystroke\",\n                  value: event.target.value,\n                  willCommit: true,\n                  commitKey: 1,\n                  selStart: event.target.selectionStart,\n                  selEnd: event.target.selectionEnd,\n                },\n              });\n            }\n            _blurListener(event);\n          });\n          element.addEventListener(\"mousedown\", event => {\n            elementData.beforeInputValue = event.target.value;\n            elementData.beforeInputSelectionRange = null;\n          });\n          element.addEventListener(\"keyup\", event => {\n            // keyup is triggered after input\n            if (event.target.selectionStart === event.target.selectionEnd) {\n              elementData.beforeInputSelectionRange = null;\n            }\n          });\n          element.addEventListener(\"select\", event => {\n            elementData.beforeInputSelectionRange = [\n              event.target.selectionStart,\n              event.target.selectionEnd,\n            ];\n          });\n\n          if (\"Keystroke\" in this.data.actions) {\n            // We should use beforeinput but this\n            // event isn't available in Firefox\n            element.addEventListener(\"input\", event => {\n              let selStart = -1;\n              let selEnd = -1;\n              if (elementData.beforeInputSelectionRange) {\n                [selStart, selEnd] = elementData.beforeInputSelectionRange;\n              }\n              this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                source: this,\n                detail: {\n                  id,\n                  name: \"Keystroke\",\n                  value: elementData.beforeInputValue,\n                  change: event.data,\n                  willCommit: false,\n                  selStart,\n                  selEnd,\n                },\n              });\n            });\n          }\n\n          this._setEventListeners(\n            element,\n            [\n              [\"focus\", \"Focus\"],\n              [\"blur\", \"Blur\"],\n              [\"mousedown\", \"Mouse Down\"],\n              [\"mouseenter\", \"Mouse Enter\"],\n              [\"mouseleave\", \"Mouse Exit\"],\n              [\"mouseup\", \"Mouse Up\"],\n            ],\n            event => event.target.value\n          );\n        }\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    const value = storage.getOrCreateValue(id, {\n      value: data.fieldValue && data.fieldValue !== \"Off\",\n    }).value;\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n\n    element.addEventListener(\"change\", function (event) {\n      const name = event.target.name;\n      for (const checkbox of document.getElementsByName(name)) {\n        if (checkbox !== event.target) {\n          checkbox.checked = false;\n          storage.setValue(\n            checkbox.parentNode.getAttribute(\"data-annotation-id\"),\n            { value: false }\n          );\n        }\n      }\n      storage.setValue(id, { value: event.target.checked });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", event => {\n        const { detail } = event;\n        const actions = {\n          value() {\n            event.target.checked = detail.value !== \"Off\";\n            storage.setValue(id, { value: event.target.checked });\n          },\n          focus() {\n            setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n          },\n          hidden() {\n            event.target.style.visibility = detail.hidden\n              ? \"hidden\"\n              : \"visible\";\n            storage.setValue(id, { hidden: detail.hidden });\n          },\n          editable() {\n            event.target.disabled = !detail.editable;\n          },\n        };\n        Object.keys(detail)\n          .filter(name => name in actions)\n          .forEach(name => actions[name]());\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    const value = storage.getOrCreateValue(id, {\n      value: data.fieldValue === data.buttonValue,\n    }).value;\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"pdfButtonValue\", data.buttonValue);\n    element.setAttribute(\"id\", id);\n\n    element.addEventListener(\"change\", function (event) {\n      const { target } = event;\n      for (const radio of document.getElementsByName(target.name)) {\n        if (radio !== target) {\n          storage.setValue(radio.getAttribute(\"id\"), { value: false });\n        }\n      }\n      storage.setValue(id, { value: target.checked });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", event => {\n        const { detail } = event;\n        const actions = {\n          value() {\n            const fieldValue = detail.value;\n            for (const radio of document.getElementsByName(event.target.name)) {\n              const radioId = radio.getAttribute(\"id\");\n              if (fieldValue === radio.getAttribute(\"pdfButtonValue\")) {\n                radio.setAttribute(\"checked\", true);\n                storage.setValue(radioId, { value: true });\n              } else {\n                storage.setValue(radioId, { value: false });\n              }\n            }\n          },\n          focus() {\n            setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n          },\n          hidden() {\n            event.target.style.visibility = detail.hidden\n              ? \"hidden\"\n              : \"visible\";\n            storage.setValue(id, { hidden: detail.hidden });\n          },\n          editable() {\n            event.target.disabled = !detail.editable;\n          },\n        };\n        Object.keys(detail)\n          .filter(name => name in actions)\n          .forEach(name => actions[name]());\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getOrCreateValue` is\n    // used and the full array of field values is stored.\n    storage.getOrCreateValue(id, {\n      value:\n        this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    });\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    function getValue(event) {\n      const options = event.target.options;\n      return options[options.selectedIndex].value;\n    }\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", event => {\n        const { detail } = event;\n        const actions = {\n          value() {\n            const options = event.target.options;\n            const value = detail.value;\n            const i = options.indexOf(value);\n            if (i !== -1) {\n              options.selectedIndex = i;\n              storage.setValue(id, { value });\n            }\n          },\n          focus() {\n            setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n          },\n          hidden() {\n            event.target.style.visibility = detail.hidden\n              ? \"hidden\"\n              : \"visible\";\n            storage.setValue(id, { hidden: detail.hidden });\n          },\n          editable() {\n            event.target.disabled = !detail.editable;\n          },\n        };\n        Object.keys(detail)\n          .filter(name => name in actions)\n          .forEach(name => actions[name]());\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const value = getValue(event);\n        storage.setValue(id, { value });\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            changeEx: value,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, { value: getValue(event) });\n      });\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.setAttribute(\"hidden\", true);\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    this.trigger.forEach(element => {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    });\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hasAttribute(\"hidden\")) {\n      this.hideElement.removeAttribute(\"hidden\");\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n      this.hideElement.setAttribute(\"hidden\", true);\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    if (!this.downloadManager) {\n      warn(\"Download cannot be started due to unavailable download manager\");\n      return;\n    }\n    this.downloadManager.downloadData(this.content, this.filename, \"\");\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms:\n          typeof parameters.renderInteractiveForms === \"boolean\"\n            ? parameters.renderInteractiveForms\n            : true,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            parameters.div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            parameters.div.prepend(rendered);\n          } else {\n            parameters.div.appendChild(rendered);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    for (const data of parameters.annotations) {\n      const elements = parameters.div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        elements.forEach(element => {\n          element.style.transform = transform;\n        });\n      }\n    }\n    parameters.div.removeAttribute(\"hidden\");\n  }\n}\n\nexport { AnnotationLayer };\n", "/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n", "/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\n/**\n * @typedef {Object} TextLayerRenderTask\n * @property {Promise<void>} promise\n * @property {() => void} cancel\n * @property {(expandDivs: boolean) => void} expandTextDivs\n */\n\n/**\n * @type {(renderParameters: TextLayerRenderParameters) => TextLayerRenderTask}\n */\nconst renderTextLayer = (function renderTextLayerClosure() {\n  const MAX_TEXT_DIVS_TO_RENDER = 100000;\n\n  const NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function appendText(task, geom, styles) {\n    // Initialize all used properties to keep the caches monomorphic.\n    const textDiv = document.createElement(\"span\");\n    const textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1,\n    };\n\n    task._textDivs.push(textDiv);\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n      task._textDivProperties.set(textDiv, textDivProperties);\n      return;\n    }\n\n    const tx = Util.transform(task._viewport.transform, geom.transform);\n    let angle = Math.atan2(tx[1], tx[0]);\n    const style = styles[geom.fontName];\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n    const fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n    let fontAscent = fontHeight;\n    if (style.ascent) {\n      fontAscent = style.ascent * fontAscent;\n    } else if (style.descent) {\n      fontAscent = (1 + style.descent) * fontAscent;\n    }\n\n    let left, top;\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n    // Setting the style properties individually, rather than all at once,\n    // should be OK since the `textDiv` isn't appended to the document yet.\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n\n    textDiv.textContent = geom.str;\n    // `fontName` is only used by the FontInspector, and we only use `dataset`\n    // here to make the font name available in the debugger.\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n    // We don't bother scaling single-char text divs, because it has very\n    // little effect on text highlighting. This makes scrolling on docs with\n    // lots of such divs a lot faster.\n    let shouldScaleText = false;\n    if (geom.str.length > 1) {\n      shouldScaleText = true;\n    } else if (geom.transform[0] !== geom.transform[3]) {\n      const absScaleX = Math.abs(geom.transform[0]),\n        absScaleY = Math.abs(geom.transform[3]);\n      // When the horizontal/vertical scaling differs significantly, also scale\n      // even single-char text to improve highlighting (fixes issue11713.pdf).\n      if (\n        absScaleX !== absScaleY &&\n        Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n      ) {\n        shouldScaleText = true;\n      }\n    }\n    if (shouldScaleText) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n    task._textDivProperties.set(textDiv, textDivProperties);\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      let angleCos = 1,\n        angleSin = 0;\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n      const divWidth =\n        (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      const divHeight = fontHeight;\n\n      let m, b;\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m,\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n    const textDivs = task._textDivs;\n    const capability = task._capability;\n    const textDivsLength = textDivs.length;\n\n    // No point in rendering many divs as it would make the browser\n    // unusable even after the divs are rendered.\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (let i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function findPositiveMin(ts, offset, count) {\n    let result = 0;\n    for (let i = 0; i < count; i++) {\n      const t = ts[offset++];\n      if (t > 0) {\n        result = result ? Math.min(t, result) : t;\n      }\n    }\n    return result;\n  }\n\n  function expand(task) {\n    const bounds = task._bounds;\n    const viewport = task._viewport;\n\n    const expanded = expandBounds(viewport.width, viewport.height, bounds);\n    for (let i = 0; i < expanded.length; i++) {\n      const div = bounds[i].div;\n      const divProperties = task._textDivProperties.get(div);\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n        task._textDivProperties.set(div, divProperties);\n        continue;\n      }\n      // Box is rotated -- trying to find padding so rotated div will not\n      // exceed its expanded bounds.\n      const e = expanded[i],\n        b = bounds[i];\n      const m = b.m,\n        c = m[0],\n        s = m[1];\n      // Finding intersections with expanded box.\n      const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      const ts = new Float64Array(64);\n      points.forEach(function (p, j) {\n        const t = Util.applyTransform(p, m);\n        ts[j + 0] = c && (e.left - t[0]) / c;\n        ts[j + 4] = s && (e.top - t[1]) / s;\n        ts[j + 8] = c && (e.right - t[0]) / c;\n        ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n        ts[j + 16] = s && (e.left - t[0]) / -s;\n        ts[j + 20] = c && (e.top - t[1]) / c;\n        ts[j + 24] = s && (e.right - t[0]) / -s;\n        ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n        ts[j + 32] = c && (e.left - t[0]) / -c;\n        ts[j + 36] = s && (e.top - t[1]) / -s;\n        ts[j + 40] = c && (e.right - t[0]) / -c;\n        ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n        ts[j + 48] = s && (e.left - t[0]) / s;\n        ts[j + 52] = c && (e.top - t[1]) / -c;\n        ts[j + 56] = s && (e.right - t[0]) / s;\n        ts[j + 60] = c && (e.bottom - t[1]) / -c;\n      });\n      // Not based on math, but to simplify calculations, using cos and sin\n      // absolute values to not exceed the box (it can but insignificantly).\n      const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    const bounds = boxes.map(function (box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined,\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    const expanded = new Array(boxes.length);\n    bounds.forEach(function (b) {\n      const i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0,\n      };\n    });\n\n    // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n    // array and objects.\n    boxes.map(function (box, i) {\n      const e = expanded[i],\n        b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n\n    bounds.forEach(function (b) {\n      const i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    // Sorting by x1 coordinate and walk by the bounds in the same order.\n    bounds.sort(function (a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n\n    // First we see on the horizon is a fake boundary.\n    const fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0,\n    };\n    const horizon = [\n      {\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary,\n      },\n    ];\n\n    bounds.forEach(function (boundary) {\n      // Searching for the affected part of horizon.\n      // TODO red-black tree or simple binary search\n      let i = 0;\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n      let j = horizon.length - 1;\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      let horizonPart, affectedBoundary;\n      let q,\n        k,\n        maxXNew = -Infinity;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        let xNew;\n        if (affectedBoundary.x2 > boundary.x1) {\n          // In the middle of the previous element, new x shall be at the\n          // boundary start. Extending if further if the affected boundary\n          // placed on top of the current one.\n          xNew =\n            affectedBoundary.index > boundary.index\n              ? affectedBoundary.x1New\n              : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          // We have some space in between, new x in middle will be a fair\n          // choice.\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          // Affected boundary has x2new set, using it as new x.\n          xNew = affectedBoundary.x2New;\n        }\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      // Set new x1 for current boundary.\n      boundary.x1New = maxXNew;\n\n      // Adjusts new x2 for the affected boundaries.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New === undefined) {\n          // Was not set yet, choosing new x if possible.\n          if (affectedBoundary.x2 > boundary.x1) {\n            // Current and affected boundaries intersect. If affected boundary\n            // is placed on top of the current, shrinking the affected.\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          // Affected boundary is touching new x, pushing it back.\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      // Fixing the horizon.\n      const changedHorizon = [];\n      let lastBoundary = null;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        // Checking which boundary will be visible.\n        const useBoundary =\n          affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n        if (lastBoundary === useBoundary) {\n          // Merging with previous.\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary,\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary,\n        });\n      }\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary,\n        });\n      }\n\n      // Set x2 new of boundary that is no longer visible (see overlapping case\n      // above).\n      // TODO more efficient, e.g. via reference counting.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n        let used = false;\n        for (\n          k = i - 1;\n          !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n          k--\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (\n          k = j + 1;\n          !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n          k++\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(\n        horizon,\n        [i, j - i + 1].concat(changedHorizon)\n      );\n    });\n\n    // Set new x2 for all unset boundaries.\n    horizon.forEach(function (horizonPart) {\n      const affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  /**\n   * Text layer rendering task.\n   *\n   * @param {TextContent} textContent\n   * @param {HTMLElement} container\n   * @param {PageViewport} viewport\n   * @param {Array} textDivs\n   * @param {boolean} enhanceTextSelection\n   * @private\n   */\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n      if (this._reader) {\n        this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n        this._reader = null;\n      }\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n        appendText(this, items[i], styleCache);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n      if (textDivProperties.canvasWidth !== 0) {\n        const { fontSize, fontFamily } = textDiv.style;\n\n        // Only build font string and set to context if different from last.\n        if (\n          fontSize !== this._layoutTextLastFontSize ||\n          fontFamily !== this._layoutTextLastFontFamily\n        ) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n        // Only measure the width for multi-char text divs, see `appendText`.\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      }\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n        textDiv.style.transform = transform;\n      }\n      this._textDivProperties.set(textDiv, textDivProperties);\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = createPromiseCapability();\n      let styleCache = Object.create(null);\n\n      // The temporary canvas is used to measure text length in the DOM.\n      const canvas = this._document.createElement(\"canvas\");\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n        this._processItems(textItems, textStyles);\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({ value, done }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n            this._processItems(value.items, styleCache);\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error(\n          'Neither \"textContent\" nor \"textContentStream\"' +\n            \" parameters specified.\"\n        );\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n        if (!timeout) {\n          // Render right away\n          render(this);\n        } else {\n          // Schedule\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n      const transformBuf = [],\n        paddingBuf = [];\n\n      for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(\n              `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n            );\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    },\n  };\n\n  // eslint-disable-next-line no-shadow\n  function renderTextLayer(renderParameters) {\n    const task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection,\n    });\n    task._render(renderParameters.timeout);\n    return task;\n  }\n\n  return renderTextLayer;\n})();\n\nexport { renderTextLayer };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\n/** @type {any} */\nlet SVGGraphics = function () {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89,\n      0x50,\n      0x4e,\n      0x47,\n      0x0d,\n      0x0a,\n      0x1a,\n      0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    function deflateSync(literals) {\n      if (!isNodeJS) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n      }\n      try {\n        // NOTE: This implementation is far from perfect, but already way better\n        // than not applying any compression.\n        //\n        // A better algorithm will try to choose a good predictor/filter and\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n        //\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n        // Node v3.0.0   Buffer inherits from Uint8Array.\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n        let input;\n        // eslint-disable-next-line no-undef\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          // eslint-disable-next-line no-undef\n          input = Buffer.from(literals);\n        }\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n          level: 9,\n        });\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        warn(\n          \"Not compressing PNG because zlib.deflateSync is unavailable: \" + e\n        );\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  // eslint-disable-next-line no-shadow\n  SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        this.extraStack.forEach(function (prev) {\n          prev.clipGroup = null;\n        });\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const {\n        allowRangeRequests,\n        suggestedLength,\n      } = validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (/\\.pdf$/i.test(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    \"Unexpected server response (\" +\n      status +\n      ') while retrieving PDF \"' +\n      url +\n      '\".',\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n", "/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const bytes = Array.from(value, function (ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength,\n    } = validateRangeRequestCapabilities({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange,\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.reject(exception);\n    });\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength,\n        } = validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(reason => {\n        if (reason?.name === \"AbortError\") {\n          return;\n        }\n        throw reason;\n      });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __w_pdfjs_require__(0);\n", "import tslib from '../tslib.js';\r\nconst {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __exportStar,\r\n    __createBinding,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n} = tslib;\r\nexport {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __exportStar,\r\n    __createBinding,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n};\r\n", null, null, null, null, null, null, null, "/*\n * The `chars`, `lookup`, and `decodeFromBase64` members of this file are\n * licensed under the following:\n *\n *     base64-arraybuffer\n *     https://github.com/niklasvh/base64-arraybuffer\n *\n *     Copyright (c) 2012 Niklas von Hertzen\n *     Licensed under the MIT license.\n *\n */\nimport pako from 'pako';\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport var decodeFromBase64 = function (base64) {\n    var bufferLength = base64.length * 0.75;\n    var len = base64.length;\n    var i;\n    var p = 0;\n    var encoded1;\n    var encoded2;\n    var encoded3;\n    var encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var bytes = new Uint8Array(bufferLength);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return bytes;\n};\nvar arrayToString = function (array) {\n    var str = '';\n    for (var i = 0; i < array.length; i++) {\n        str += String.fromCharCode(array[i]);\n    }\n    return str;\n};\nexport var decompressJson = function (compressedJson) {\n    return arrayToString(pako.inflate(decodeFromBase64(compressedJson)));\n};\nexport var padStart = function (value, length, padChar) {\n    var padding = '';\n    for (var idx = 0, len = length - value.length; idx < len; idx++) {\n        padding += padChar;\n    }\n    return padding + value;\n};\n", "import { decompressJson } from './utils';\nimport CourierBoldCompressed from './Courier-Bold.compressed.json';\nimport CourierBoldObliqueCompressed from './Courier-BoldOblique.compressed.json';\nimport CourierObliqueCompressed from './Courier-Oblique.compressed.json';\nimport CourierCompressed from './Courier.compressed.json';\nimport HelveticaBoldCompressed from './Helvetica-Bold.compressed.json';\nimport HelveticaBoldObliqueCompressed from './Helvetica-BoldOblique.compressed.json';\nimport HelveticaObliqueCompressed from './Helvetica-Oblique.compressed.json';\nimport HelveticaCompressed from './Helvetica.compressed.json';\nimport TimesBoldCompressed from './Times-Bold.compressed.json';\nimport TimesBoldItalicCompressed from './Times-BoldItalic.compressed.json';\nimport TimesItalicCompressed from './Times-Italic.compressed.json';\nimport TimesRomanCompressed from './Times-Roman.compressed.json';\nimport SymbolCompressed from './Symbol.compressed.json';\nimport ZapfDingbatsCompressed from './ZapfDingbats.compressed.json';\n// prettier-ignore\nvar compressedJsonForFontName = {\n    'Courier': CourierCompressed,\n    'Courier-Bold': CourierBoldCompressed,\n    'Courier-Oblique': CourierObliqueCompressed,\n    'Courier-BoldOblique': CourierBoldObliqueCompressed,\n    'Helvetica': HelveticaCompressed,\n    'Helvetica-Bold': HelveticaBoldCompressed,\n    'Helvetica-Oblique': HelveticaObliqueCompressed,\n    'Helvetica-BoldOblique': HelveticaBoldObliqueCompressed,\n    'Times-Roman': TimesRomanCompressed,\n    'Times-Bold': TimesBoldCompressed,\n    'Times-Italic': TimesItalicCompressed,\n    'Times-BoldItalic': TimesBoldItalicCompressed,\n    'Symbol': SymbolCompressed,\n    'ZapfDingbats': ZapfDingbatsCompressed,\n};\nexport var FontNames;\n(function (FontNames) {\n    FontNames[\"Courier\"] = \"Courier\";\n    FontNames[\"CourierBold\"] = \"Courier-Bold\";\n    FontNames[\"CourierOblique\"] = \"Courier-Oblique\";\n    FontNames[\"CourierBoldOblique\"] = \"Courier-BoldOblique\";\n    FontNames[\"Helvetica\"] = \"Helvetica\";\n    FontNames[\"HelveticaBold\"] = \"Helvetica-Bold\";\n    FontNames[\"HelveticaOblique\"] = \"Helvetica-Oblique\";\n    FontNames[\"HelveticaBoldOblique\"] = \"Helvetica-BoldOblique\";\n    FontNames[\"TimesRoman\"] = \"Times-Roman\";\n    FontNames[\"TimesRomanBold\"] = \"Times-Bold\";\n    FontNames[\"TimesRomanItalic\"] = \"Times-Italic\";\n    FontNames[\"TimesRomanBoldItalic\"] = \"Times-BoldItalic\";\n    FontNames[\"Symbol\"] = \"Symbol\";\n    FontNames[\"ZapfDingbats\"] = \"ZapfDingbats\";\n})(FontNames || (FontNames = {}));\nvar fontCache = {};\nvar Font = /** @class */ (function () {\n    function Font() {\n        var _this = this;\n        this.getWidthOfGlyph = function (glyphName) {\n            return _this.CharWidths[glyphName];\n        };\n        this.getXAxisKerningForPair = function (leftGlyphName, rightGlyphName) {\n            return (_this.KernPairXAmounts[leftGlyphName] || {})[rightGlyphName];\n        };\n    }\n    Font.load = function (fontName) {\n        var cachedFont = fontCache[fontName];\n        if (cachedFont)\n            return cachedFont;\n        var json = decompressJson(compressedJsonForFontName[fontName]);\n        var font = Object.assign(new Font(), JSON.parse(json));\n        font.CharWidths = font.CharMetrics.reduce(function (acc, metric) {\n            acc[metric.N] = metric.WX;\n            return acc;\n        }, {});\n        font.KernPairXAmounts = font.KernPairs.reduce(function (acc, _a) {\n            var name1 = _a[0], name2 = _a[1], width = _a[2];\n            if (!acc[name1])\n                acc[name1] = {};\n            acc[name1][name2] = width;\n            return acc;\n        }, {});\n        fontCache[fontName] = font;\n        return font;\n    };\n    return Font;\n}());\nexport { Font };\n", "/* tslint:disable max-classes-per-file */\nimport { decompressJson, padStart } from './utils';\nimport AllEncodingsCompressed from './all-encodings.compressed.json';\nvar decompressedEncodings = decompressJson(AllEncodingsCompressed);\nvar allUnicodeMappings = JSON.parse(decompressedEncodings);\nvar Encoding = /** @class */ (function () {\n    function Encoding(name, unicodeMappings) {\n        var _this = this;\n        this.canEncodeUnicodeCodePoint = function (codePoint) {\n            return codePoint in _this.unicodeMappings;\n        };\n        this.encodeUnicodeCodePoint = function (codePoint) {\n            var mapped = _this.unicodeMappings[codePoint];\n            if (!mapped) {\n                var str = String.fromCharCode(codePoint);\n                var hexCode = \"0x\" + padStart(codePoint.toString(16), 4, '0');\n                var msg = _this.name + \" cannot encode \\\"\" + str + \"\\\" (\" + hexCode + \")\";\n                throw new Error(msg);\n            }\n            return { code: mapped[0], name: mapped[1] };\n        };\n        this.name = name;\n        this.supportedCodePoints = Object.keys(unicodeMappings)\n            .map(Number)\n            .sort(function (a, b) { return a - b; });\n        this.unicodeMappings = unicodeMappings;\n    }\n    return Encoding;\n}());\nexport var Encodings = {\n    Symbol: new Encoding('Symbol', allUnicodeMappings.symbol),\n    ZapfDingbats: new Encoding('ZapfDingbats', allUnicodeMappings.zapfdingbats),\n    WinAnsi: new Encoding('WinAnsi', allUnicodeMappings.win1252),\n};\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "import pako from 'pako';\n\nvar UPNG = {};\n\n\t\n\nUPNG.toRGBA8 = function(out)\n{\n\tvar w = out.width, h = out.height;\n\tif(out.tabs.acTL==null) return [UPNG.toRGBA8.decodeImage(out.data, w, h, out).buffer];\n\t\n\tvar frms = [];\n\tif(out.frames[0].data==null) out.frames[0].data = out.data;\n\t\n\tvar len = w*h*4, img = new Uint8Array(len), empty = new Uint8Array(len), prev=new Uint8Array(len);\n\tfor(var i=0; i<out.frames.length; i++)\n\t{\n\t\tvar frm = out.frames[i];\n\t\tvar fx=frm.rect.x, fy=frm.rect.y, fw = frm.rect.width, fh = frm.rect.height;\n\t\tvar fdata = UPNG.toRGBA8.decodeImage(frm.data, fw,fh, out);\n\t\t\n\t\tif(i!=0) for(var j=0; j<len; j++) prev[j]=img[j];\n\t\t\n\t\tif     (frm.blend==0) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 0);\n\t\telse if(frm.blend==1) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 1);\n\t\t\n\t\tfrms.push(img.buffer.slice(0));\n\t\t\n\t\tif     (frm.dispose==0) {}\n\t\telse if(frm.dispose==1) UPNG._copyTile(empty, fw, fh, img, w, h, fx, fy, 0);\n\t\telse if(frm.dispose==2) for(var j=0; j<len; j++) img[j]=prev[j];\n\t}\n\treturn frms;\n}\nUPNG.toRGBA8.decodeImage = function(data, w, h, out)\n{\n\tvar area = w*h, bpp = UPNG.decode._getBPP(out);\n\tvar bpl = Math.ceil(w*bpp/8);\t// bytes per line\n\n\tvar bf = new Uint8Array(area*4), bf32 = new Uint32Array(bf.buffer);\n\tvar ctype = out.ctype, depth = out.depth;\n\tvar rs = UPNG._bin.readUshort;\n\t\n\t//console.log(ctype, depth);\n\tvar time = Date.now();\n\n\tif     (ctype==6) { // RGB + alpha\n\t\tvar qarea = area<<2;\n\t\tif(depth== 8) for(var i=0; i<qarea;i+=4) {  bf[i] = data[i];  bf[i+1] = data[i+1];  bf[i+2] = data[i+2];  bf[i+3] = data[i+3]; }\n\t\tif(depth==16) for(var i=0; i<qarea;i++ ) {  bf[i] = data[i<<1];  }\n\t}\n\telse if(ctype==2) {\t// RGB\n\t\tvar ts=out.tabs[\"tRNS\"];\n\t\tif(ts==null) {\n\t\t\tif(depth== 8) for(var i=0; i<area; i++) {  var ti=i*3;  bf32[i] = (255<<24)|(data[ti+2]<<16)|(data[ti+1]<<8)|data[ti];  }\n\t\t\tif(depth==16) for(var i=0; i<area; i++) {  var ti=i*6;  bf32[i] = (255<<24)|(data[ti+4]<<16)|(data[ti+2]<<8)|data[ti];  }\n\t\t}\n\t\telse {  var tr=ts[0], tg=ts[1], tb=ts[2];\n\t\t\tif(depth== 8) for(var i=0; i<area; i++) {  var qi=i<<2, ti=i*3;  bf32[i] = (255<<24)|(data[ti+2]<<16)|(data[ti+1]<<8)|data[ti];\n\t\t\t\tif(data[ti]   ==tr && data[ti+1]   ==tg && data[ti+2]   ==tb) bf[qi+3] = 0;  }\n\t\t\tif(depth==16) for(var i=0; i<area; i++) {  var qi=i<<2, ti=i*6;  bf32[i] = (255<<24)|(data[ti+4]<<16)|(data[ti+2]<<8)|data[ti];\n\t\t\t\tif(rs(data,ti)==tr && rs(data,ti+2)==tg && rs(data,ti+4)==tb) bf[qi+3] = 0;  }\n\t\t}\n\t}\n\telse if(ctype==3) {\t// palette\n\t\tvar p=out.tabs[\"PLTE\"], ap=out.tabs[\"tRNS\"], tl=ap?ap.length:0;\n\t\t//console.log(p, ap);\n\t\tif(depth==1) for(var y=0; y<h; y++) {  var s0 = y*bpl, t0 = y*w;\n\t\t\tfor(var i=0; i<w; i++) { var qi=(t0+i)<<2, j=((data[s0+(i>>3)]>>(7-((i&7)<<0)))& 1), cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }\n\t\t}\n\t\tif(depth==2) for(var y=0; y<h; y++) {  var s0 = y*bpl, t0 = y*w;\n\t\t\tfor(var i=0; i<w; i++) { var qi=(t0+i)<<2, j=((data[s0+(i>>2)]>>(6-((i&3)<<1)))& 3), cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }\n\t\t}\n\t\tif(depth==4) for(var y=0; y<h; y++) {  var s0 = y*bpl, t0 = y*w;\n\t\t\tfor(var i=0; i<w; i++) { var qi=(t0+i)<<2, j=((data[s0+(i>>1)]>>(4-((i&1)<<2)))&15), cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }\n\t\t}\n\t\tif(depth==8) for(var i=0; i<area; i++ ) {  var qi=i<<2, j=data[i]                      , cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }\n\t}\n\telse if(ctype==4) {\t// gray + alpha\n\t\tif(depth== 8)  for(var i=0; i<area; i++) {  var qi=i<<2, di=i<<1, gr=data[di];  bf[qi]=gr;  bf[qi+1]=gr;  bf[qi+2]=gr;  bf[qi+3]=data[di+1];  }\n\t\tif(depth==16)  for(var i=0; i<area; i++) {  var qi=i<<2, di=i<<2, gr=data[di];  bf[qi]=gr;  bf[qi+1]=gr;  bf[qi+2]=gr;  bf[qi+3]=data[di+2];  }\n\t}\n\telse if(ctype==0) {\t// gray\n\t\tvar tr = out.tabs[\"tRNS\"] ? out.tabs[\"tRNS\"] : -1;\n\t\tfor(var y=0; y<h; y++) {\n\t\t\tvar off = y*bpl, to = y*w;\n\t\t\tif     (depth== 1) for(var x=0; x<w; x++) {  var gr=255*((data[off+(x>>>3)]>>>(7 -((x&7)   )))& 1), al=(gr==tr*255)?0:255;  bf32[to+x]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }\n\t\t\telse if(depth== 2) for(var x=0; x<w; x++) {  var gr= 85*((data[off+(x>>>2)]>>>(6 -((x&3)<<1)))& 3), al=(gr==tr* 85)?0:255;  bf32[to+x]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }\n\t\t\telse if(depth== 4) for(var x=0; x<w; x++) {  var gr= 17*((data[off+(x>>>1)]>>>(4 -((x&1)<<2)))&15), al=(gr==tr* 17)?0:255;  bf32[to+x]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }\n\t\t\telse if(depth== 8) for(var x=0; x<w; x++) {  var gr=data[off+     x], al=(gr                 ==tr)?0:255;  bf32[to+x]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }\n\t\t\telse if(depth==16) for(var x=0; x<w; x++) {  var gr=data[off+(x<<1)], al=(rs(data,off+(x<<i))==tr)?0:255;  bf32[to+x]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }\n\t\t}\n\t}\n\t//console.log(Date.now()-time);\n\treturn bf;\n}\n\n\n\nUPNG.decode = function(buff)\n{\n\tvar data = new Uint8Array(buff), offset = 8, bin = UPNG._bin, rUs = bin.readUshort, rUi = bin.readUint;\n\tvar out = {tabs:{}, frames:[]};\n\tvar dd = new Uint8Array(data.length), doff = 0;\t // put all IDAT data into it\n\tvar fd, foff = 0;\t// frames\n\t\n\tvar mgck = [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];\n\tfor(var i=0; i<8; i++) if(data[i]!=mgck[i]) throw \"The input is not a PNG file!\";\n\n\twhile(offset<data.length)\n\t{\n\t\tvar len  = bin.readUint(data, offset);  offset += 4;\n\t\tvar type = bin.readASCII(data, offset, 4);  offset += 4;\n\t\t//console.log(type,len);\n\t\t\n\t\tif     (type==\"IHDR\")  {  UPNG.decode._IHDR(data, offset, out);  }\n\t\telse if(type==\"IDAT\") {\n\t\t\tfor(var i=0; i<len; i++) dd[doff+i] = data[offset+i];\n\t\t\tdoff += len;\n\t\t}\n\t\telse if(type==\"acTL\")  {\n\t\t\tout.tabs[type] = {  num_frames:rUi(data, offset), num_plays:rUi(data, offset+4)  };\n\t\t\tfd = new Uint8Array(data.length);\n\t\t}\n\t\telse if(type==\"fcTL\")  {\n\t\t\tif(foff!=0) {  var fr = out.frames[out.frames.length-1];\n\t\t\t\tfr.data = UPNG.decode._decompress(out, fd.slice(0,foff), fr.rect.width, fr.rect.height);  foff=0;\n\t\t\t}\n\t\t\tvar rct = {x:rUi(data, offset+12),y:rUi(data, offset+16),width:rUi(data, offset+4),height:rUi(data, offset+8)};\n\t\t\tvar del = rUs(data, offset+22);  del = rUs(data, offset+20) / (del==0?100:del);\n\t\t\tvar frm = {rect:rct, delay:Math.round(del*1000), dispose:data[offset+24], blend:data[offset+25]};\n\t\t\t//console.log(frm);\n\t\t\tout.frames.push(frm);\n\t\t}\n\t\telse if(type==\"fdAT\") {\n\t\t\tfor(var i=0; i<len-4; i++) fd[foff+i] = data[offset+i+4];\n\t\t\tfoff += len-4;\n\t\t}\n\t\telse if(type==\"pHYs\") {\n\t\t\tout.tabs[type] = [bin.readUint(data, offset), bin.readUint(data, offset+4), data[offset+8]];\n\t\t}\n\t\telse if(type==\"cHRM\") {\n\t\t\tout.tabs[type] = [];\n\t\t\tfor(var i=0; i<8; i++) out.tabs[type].push(bin.readUint(data, offset+i*4));\n\t\t}\n\t\telse if(type==\"tEXt\") {\n\t\t\tif(out.tabs[type]==null) out.tabs[type] = {};\n\t\t\tvar nz = bin.nextZero(data, offset);\n\t\t\tvar keyw = bin.readASCII(data, offset, nz-offset);\n\t\t\tvar text = bin.readASCII(data, nz+1, offset+len-nz-1);\n\t\t\tout.tabs[type][keyw] = text;\n\t\t}\n\t\telse if(type==\"iTXt\") {\n\t\t\tif(out.tabs[type]==null) out.tabs[type] = {};\n\t\t\tvar nz = 0, off = offset;\n\t\t\tnz = bin.nextZero(data, off);\n\t\t\tvar keyw = bin.readASCII(data, off, nz-off);  off = nz + 1;\n\t\t\tvar cflag = data[off], cmeth = data[off+1];  off+=2;\n\t\t\tnz = bin.nextZero(data, off);\n\t\t\tvar ltag = bin.readASCII(data, off, nz-off);  off = nz + 1;\n\t\t\tnz = bin.nextZero(data, off);\n\t\t\tvar tkeyw = bin.readUTF8(data, off, nz-off);  off = nz + 1;\n\t\t\tvar text  = bin.readUTF8(data, off, len-(off-offset));\n\t\t\tout.tabs[type][keyw] = text;\n\t\t}\n\t\telse if(type==\"PLTE\") {\n\t\t\tout.tabs[type] = bin.readBytes(data, offset, len);\n\t\t}\n\t\telse if(type==\"hIST\") {\n\t\t\tvar pl = out.tabs[\"PLTE\"].length/3;\n\t\t\tout.tabs[type] = [];  for(var i=0; i<pl; i++) out.tabs[type].push(rUs(data, offset+i*2));\n\t\t}\n\t\telse if(type==\"tRNS\") {\n\t\t\tif     (out.ctype==3) out.tabs[type] = bin.readBytes(data, offset, len);\n\t\t\telse if(out.ctype==0) out.tabs[type] = rUs(data, offset);\n\t\t\telse if(out.ctype==2) out.tabs[type] = [ rUs(data,offset),rUs(data,offset+2),rUs(data,offset+4) ];\n\t\t\t//else console.log(\"tRNS for unsupported color type\",out.ctype, len);\n\t\t}\n\t\telse if(type==\"gAMA\") out.tabs[type] = bin.readUint(data, offset)/100000;\n\t\telse if(type==\"sRGB\") out.tabs[type] = data[offset];\n\t\telse if(type==\"bKGD\")\n\t\t{\n\t\t\tif     (out.ctype==0 || out.ctype==4) out.tabs[type] = [rUs(data, offset)];\n\t\t\telse if(out.ctype==2 || out.ctype==6) out.tabs[type] = [rUs(data, offset), rUs(data, offset+2), rUs(data, offset+4)];\n\t\t\telse if(out.ctype==3) out.tabs[type] = data[offset];\n\t\t}\n\t\telse if(type==\"IEND\") {\n\t\t\tbreak;\n\t\t}\n\t\t//else {  log(\"unknown chunk type\", type, len);  }\n\t\toffset += len;\n\t\tvar crc = bin.readUint(data, offset);  offset += 4;\n\t}\n\tif(foff!=0) {  var fr = out.frames[out.frames.length-1];\n\t\tfr.data = UPNG.decode._decompress(out, fd.slice(0,foff), fr.rect.width, fr.rect.height);  foff=0;\n\t}\t\n\tout.data = UPNG.decode._decompress(out, dd, out.width, out.height);\n\t\n\tdelete out.compress;  delete out.interlace;  delete out.filter;\n\treturn out;\n}\n\nUPNG.decode._decompress = function(out, dd, w, h) {\n\tvar time = Date.now();\n\tvar bpp = UPNG.decode._getBPP(out), bpl = Math.ceil(w*bpp/8), buff = new Uint8Array((bpl+1+out.interlace)*h);\n\tdd = UPNG.decode._inflate(dd,buff);\n\t//console.log(dd.length, buff.length);\n\t//console.log(Date.now()-time);\n\n\tvar time=Date.now();\n\tif     (out.interlace==0) dd = UPNG.decode._filterZero(dd, out, 0, w, h);\n\telse if(out.interlace==1) dd = UPNG.decode._readInterlace(dd, out);\n\t//console.log(Date.now()-time);\n\treturn dd;\n}\n\nUPNG.decode._inflate = function(data, buff) {  var out=UPNG[\"inflateRaw\"](new Uint8Array(data.buffer, 2,data.length-6),buff);  return out;  }\nUPNG.inflateRaw=function(){var H={};H.H={};H.H.N=function(N,W){var R=Uint8Array,i=0,m=0,J=0,h=0,Q=0,X=0,u=0,w=0,d=0,v,C;\nif(N[0]==3&&N[1]==0)return W?W:new R(0);var V=H.H,n=V.b,A=V.e,l=V.R,M=V.n,I=V.A,e=V.Z,b=V.m,Z=W==null;\nif(Z)W=new R(N.length>>>2<<3);while(i==0){i=n(N,d,1);m=n(N,d+1,2);d+=3;if(m==0){if((d&7)!=0)d+=8-(d&7);\nvar D=(d>>>3)+4,q=N[D-4]|N[D-3]<<8;if(Z)W=H.H.W(W,w+q);W.set(new R(N.buffer,N.byteOffset+D,q),w);d=D+q<<3;\nw+=q;continue}if(Z)W=H.H.W(W,w+(1<<17));if(m==1){v=b.J;C=b.h;X=(1<<9)-1;u=(1<<5)-1}if(m==2){J=A(N,d,5)+257;\nh=A(N,d+5,5)+1;Q=A(N,d+10,4)+4;d+=14;var E=d,j=1;for(var c=0;c<38;c+=2){b.Q[c]=0;b.Q[c+1]=0}for(var c=0;\nc<Q;c++){var K=A(N,d+c*3,3);b.Q[(b.X[c]<<1)+1]=K;if(K>j)j=K}d+=3*Q;M(b.Q,j);I(b.Q,j,b.u);v=b.w;C=b.d;\nd=l(b.u,(1<<j)-1,J+h,N,d,b.v);var r=V.V(b.v,0,J,b.C);X=(1<<r)-1;var S=V.V(b.v,J,h,b.D);u=(1<<S)-1;M(b.C,r);\nI(b.C,r,v);M(b.D,S);I(b.D,S,C)}while(!0){var T=v[e(N,d)&X];d+=T&15;var p=T>>>4;if(p>>>8==0){W[w++]=p}else if(p==256){break}else{var z=w+p-254;\nif(p>264){var _=b.q[p-257];z=w+(_>>>3)+A(N,d,_&7);d+=_&7}var $=C[e(N,d)&u];d+=$&15;var s=$>>>4,Y=b.c[s],a=(Y>>>4)+n(N,d,Y&15);\nd+=Y&15;while(w<z){W[w]=W[w++-a];W[w]=W[w++-a];W[w]=W[w++-a];W[w]=W[w++-a]}w=z}}}return W.length==w?W:W.slice(0,w)};\nH.H.W=function(N,W){var R=N.length;if(W<=R)return N;var V=new Uint8Array(R<<1);V.set(N,0);return V};\nH.H.R=function(N,W,R,V,n,A){var l=H.H.e,M=H.H.Z,I=0;while(I<R){var e=N[M(V,n)&W];n+=e&15;var b=e>>>4;\nif(b<=15){A[I]=b;I++}else{var Z=0,m=0;if(b==16){m=3+l(V,n,2);n+=2;Z=A[I-1]}else if(b==17){m=3+l(V,n,3);\nn+=3}else if(b==18){m=11+l(V,n,7);n+=7}var J=I+m;while(I<J){A[I]=Z;I++}}}return n};H.H.V=function(N,W,R,V){var n=0,A=0,l=V.length>>>1;\nwhile(A<R){var M=N[A+W];V[A<<1]=0;V[(A<<1)+1]=M;if(M>n)n=M;A++}while(A<l){V[A<<1]=0;V[(A<<1)+1]=0;A++}return n};\nH.H.n=function(N,W){var R=H.H.m,V=N.length,n,A,l,M,I,e=R.j;for(var M=0;M<=W;M++)e[M]=0;for(M=1;M<V;M+=2)e[N[M]]++;\nvar b=R.K;n=0;e[0]=0;for(A=1;A<=W;A++){n=n+e[A-1]<<1;b[A]=n}for(l=0;l<V;l+=2){I=N[l+1];if(I!=0){N[l]=b[I];\nb[I]++}}};H.H.A=function(N,W,R){var V=N.length,n=H.H.m,A=n.r;for(var l=0;l<V;l+=2)if(N[l+1]!=0){var M=l>>1,I=N[l+1],e=M<<4|I,b=W-I,Z=N[l]<<b,m=Z+(1<<b);\nwhile(Z!=m){var J=A[Z]>>>15-W;R[J]=e;Z++}}};H.H.l=function(N,W){var R=H.H.m.r,V=15-W;for(var n=0;n<N.length;\nn+=2){var A=N[n]<<W-N[n+1];N[n]=R[A]>>>V}};H.H.M=function(N,W,R){R=R<<(W&7);var V=W>>>3;N[V]|=R;N[V+1]|=R>>>8};\nH.H.I=function(N,W,R){R=R<<(W&7);var V=W>>>3;N[V]|=R;N[V+1]|=R>>>8;N[V+2]|=R>>>16};H.H.e=function(N,W,R){return(N[W>>>3]|N[(W>>>3)+1]<<8)>>>(W&7)&(1<<R)-1};\nH.H.b=function(N,W,R){return(N[W>>>3]|N[(W>>>3)+1]<<8|N[(W>>>3)+2]<<16)>>>(W&7)&(1<<R)-1};H.H.Z=function(N,W){return(N[W>>>3]|N[(W>>>3)+1]<<8|N[(W>>>3)+2]<<16)>>>(W&7)};\nH.H.i=function(N,W){return(N[W>>>3]|N[(W>>>3)+1]<<8|N[(W>>>3)+2]<<16|N[(W>>>3)+3]<<24)>>>(W&7)};H.H.m=function(){var N=Uint16Array,W=Uint32Array;\nreturn{K:new N(16),j:new N(16),X:[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],S:[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,999,999,999],T:[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0],q:new N(32),p:[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,65535,65535],z:[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0],c:new W(32),J:new N(512),_:[],h:new N(32),$:[],w:new N(32768),C:[],v:[],d:new N(32768),D:[],u:new N(512),Q:[],r:new N(1<<15),s:new W(286),Y:new W(30),a:new W(19),t:new W(15e3),k:new N(1<<16),g:new N(1<<15)}}();\n(function(){var N=H.H.m,W=1<<15;for(var R=0;R<W;R++){var V=R;V=(V&2863311530)>>>1|(V&1431655765)<<1;\nV=(V&3435973836)>>>2|(V&858993459)<<2;V=(V&4042322160)>>>4|(V&252645135)<<4;V=(V&4278255360)>>>8|(V&16711935)<<8;\nN.r[R]=(V>>>16|V<<16)>>>17}function n(A,l,M){while(l--!=0)A.push(0,M)}for(var R=0;R<32;R++){N.q[R]=N.S[R]<<3|N.T[R];\nN.c[R]=N.p[R]<<4|N.z[R]}n(N._,144,8);n(N._,255-143,9);n(N._,279-255,7);n(N._,287-279,8);H.H.n(N._,9);\nH.H.A(N._,9,N.J);H.H.l(N._,9);n(N.$,32,5);H.H.n(N.$,5);H.H.A(N.$,5,N.h);H.H.l(N.$,5);n(N.Q,19,0);n(N.C,286,0);\nn(N.D,30,0);n(N.v,320,0)}());return H.H.N}()\n\n\nUPNG.decode._readInterlace = function(data, out)\n{\n\tvar w = out.width, h = out.height;\n\tvar bpp = UPNG.decode._getBPP(out), cbpp = bpp>>3, bpl = Math.ceil(w*bpp/8);\n\tvar img = new Uint8Array( h * bpl );\n\tvar di = 0;\n\n\tvar starting_row  = [ 0, 0, 4, 0, 2, 0, 1 ];\n\tvar starting_col  = [ 0, 4, 0, 2, 0, 1, 0 ];\n\tvar row_increment = [ 8, 8, 8, 4, 4, 2, 2 ];\n\tvar col_increment = [ 8, 8, 4, 4, 2, 2, 1 ];\n\n\tvar pass=0;\n\twhile(pass<7)\n\t{\n\t\tvar ri = row_increment[pass], ci = col_increment[pass];\n\t\tvar sw = 0, sh = 0;\n\t\tvar cr = starting_row[pass];  while(cr<h) {  cr+=ri;  sh++;  }\n\t\tvar cc = starting_col[pass];  while(cc<w) {  cc+=ci;  sw++;  }\n\t\tvar bpll = Math.ceil(sw*bpp/8);\n\t\tUPNG.decode._filterZero(data, out, di, sw, sh);\n\n\t\tvar y=0, row = starting_row[pass];\n\t\twhile(row<h)\n\t\t{\n\t\t\tvar col = starting_col[pass];\n\t\t\tvar cdi = (di+y*bpll)<<3;\n\n\t\t\twhile(col<w)\n\t\t\t{\n\t\t\t\tif(bpp==1) {\n\t\t\t\t\tvar val = data[cdi>>3];  val = (val>>(7-(cdi&7)))&1;\n\t\t\t\t\timg[row*bpl + (col>>3)] |= (val << (7-((col&7)<<0)));\n\t\t\t\t}\n\t\t\t\tif(bpp==2) {\n\t\t\t\t\tvar val = data[cdi>>3];  val = (val>>(6-(cdi&7)))&3;\n\t\t\t\t\timg[row*bpl + (col>>2)] |= (val << (6-((col&3)<<1)));\n\t\t\t\t}\n\t\t\t\tif(bpp==4) {\n\t\t\t\t\tvar val = data[cdi>>3];  val = (val>>(4-(cdi&7)))&15;\n\t\t\t\t\timg[row*bpl + (col>>1)] |= (val << (4-((col&1)<<2)));\n\t\t\t\t}\n\t\t\t\tif(bpp>=8) {\n\t\t\t\t\tvar ii = row*bpl+col*cbpp;\n\t\t\t\t\tfor(var j=0; j<cbpp; j++) img[ii+j] = data[(cdi>>3)+j];\n\t\t\t\t}\n\t\t\t\tcdi+=bpp;  col+=ci;\n\t\t\t}\n\t\t\ty++;  row += ri;\n\t\t}\n\t\tif(sw*sh!=0) di += sh * (1 + bpll);\n\t\tpass = pass + 1;\n\t}\n\treturn img;\n}\n\nUPNG.decode._getBPP = function(out) {\n\tvar noc = [1,null,3,1,2,null,4][out.ctype];\n\treturn noc * out.depth;\n}\n\nUPNG.decode._filterZero = function(data, out, off, w, h)\n{\n\tvar bpp = UPNG.decode._getBPP(out), bpl = Math.ceil(w*bpp/8), paeth = UPNG.decode._paeth;\n\tbpp = Math.ceil(bpp/8);\n\t\n\tvar i=0, di=1, type=data[off], x=0;\n\t\n\tif(type>1) data[off]=[0,0,1][type-2];  \n\tif(type==3) for(x=bpp; x<bpl; x++) data[x+1] = (data[x+1] + (data[x+1-bpp]>>>1) )&255;\n\n\tfor(var y=0; y<h; y++)  {\n\t\ti = off+y*bpl; di = i+y+1;\n\t\ttype = data[di-1]; x=0;\n\n\t\tif     (type==0)   for(; x<bpl; x++) data[i+x] = data[di+x];\n\t\telse if(type==1) { for(; x<bpp; x++) data[i+x] = data[di+x];\n\t\t\t\t\t\t   for(; x<bpl; x++) data[i+x] = (data[di+x] + data[i+x-bpp]);  }\n\t\telse if(type==2) { for(; x<bpl; x++) data[i+x] = (data[di+x] + data[i+x-bpl]);  }\n\t\telse if(type==3) { for(; x<bpp; x++) data[i+x] = (data[di+x] + ( data[i+x-bpl]>>>1));\n\t\t\t               for(; x<bpl; x++) data[i+x] = (data[di+x] + ((data[i+x-bpl]+data[i+x-bpp])>>>1) );  }\n\t\telse             { for(; x<bpp; x++) data[i+x] = (data[di+x] + paeth(0, data[i+x-bpl], 0));\n\t\t\t\t\t\t   for(; x<bpl; x++) data[i+x] = (data[di+x] + paeth(data[i+x-bpp], data[i+x-bpl], data[i+x-bpp-bpl]) );  }\n\t}\n\treturn data;\n}\n\nUPNG.decode._paeth = function(a,b,c)\n{\n\tvar p = a+b-c, pa = (p-a), pb = (p-b), pc = (p-c);\n\tif (pa*pa <= pb*pb && pa*pa <= pc*pc)  return a;\n\telse if (pb*pb <= pc*pc)  return b;\n\treturn c;\n}\n\nUPNG.decode._IHDR = function(data, offset, out)\n{\n\tvar bin = UPNG._bin;\n\tout.width  = bin.readUint(data, offset);  offset += 4;\n\tout.height = bin.readUint(data, offset);  offset += 4;\n\tout.depth     = data[offset];  offset++;\n\tout.ctype     = data[offset];  offset++;\n\tout.compress  = data[offset];  offset++;\n\tout.filter    = data[offset];  offset++;\n\tout.interlace = data[offset];  offset++;\n}\n\nUPNG._bin = {\n\tnextZero   : function(data,p)  {  while(data[p]!=0) p++;  return p;  },\n\treadUshort : function(buff,p)  {  return (buff[p]<< 8) | buff[p+1];  },\n\twriteUshort: function(buff,p,n){  buff[p] = (n>>8)&255;  buff[p+1] = n&255;  },\n\treadUint   : function(buff,p)  {  return (buff[p]*(256*256*256)) + ((buff[p+1]<<16) | (buff[p+2]<< 8) | buff[p+3]);  },\n\twriteUint  : function(buff,p,n){  buff[p]=(n>>24)&255;  buff[p+1]=(n>>16)&255;  buff[p+2]=(n>>8)&255;  buff[p+3]=n&255;  },\n\treadASCII  : function(buff,p,l){  var s = \"\";  for(var i=0; i<l; i++) s += String.fromCharCode(buff[p+i]);  return s;    },\n\twriteASCII : function(data,p,s){  for(var i=0; i<s.length; i++) data[p+i] = s.charCodeAt(i);  },\n\treadBytes  : function(buff,p,l){  var arr = [];   for(var i=0; i<l; i++) arr.push(buff[p+i]);   return arr;  },\n\tpad : function(n) { return n.length < 2 ? \"0\" + n : n; },\n\treadUTF8 : function(buff, p, l) {\n\t\tvar s = \"\", ns;\n\t\tfor(var i=0; i<l; i++) s += \"%\" + UPNG._bin.pad(buff[p+i].toString(16));\n\t\ttry {  ns = decodeURIComponent(s); }\n\t\tcatch(e) {  return UPNG._bin.readASCII(buff, p, l);  }\n\t\treturn  ns;\n\t}\n}\nUPNG._copyTile = function(sb, sw, sh, tb, tw, th, xoff, yoff, mode)\n{\n\tvar w = Math.min(sw,tw), h = Math.min(sh,th);\n\tvar si=0, ti=0;\n\tfor(var y=0; y<h; y++)\n\t\tfor(var x=0; x<w; x++)\n\t\t{\n\t\t\tif(xoff>=0 && yoff>=0) {  si = (y*sw+x)<<2;  ti = (( yoff+y)*tw+xoff+x)<<2;  }\n\t\t\telse                   {  si = ((-yoff+y)*sw-xoff+x)<<2;  ti = (y*tw+x)<<2;  }\n\t\t\t\n\t\t\tif     (mode==0) {  tb[ti] = sb[si];  tb[ti+1] = sb[si+1];  tb[ti+2] = sb[si+2];  tb[ti+3] = sb[si+3];  }\n\t\t\telse if(mode==1) {\n\t\t\t\tvar fa = sb[si+3]*(1/255), fr=sb[si]*fa, fg=sb[si+1]*fa, fb=sb[si+2]*fa; \n\t\t\t\tvar ba = tb[ti+3]*(1/255), br=tb[ti]*ba, bg=tb[ti+1]*ba, bb=tb[ti+2]*ba; \n\t\t\t\t\n\t\t\t\tvar ifa=1-fa, oa = fa+ba*ifa, ioa = (oa==0?0:1/oa);\n\t\t\t\ttb[ti+3] = 255*oa;  \n\t\t\t\ttb[ti+0] = (fr+br*ifa)*ioa;  \n\t\t\t\ttb[ti+1] = (fg+bg*ifa)*ioa;   \n\t\t\t\ttb[ti+2] = (fb+bb*ifa)*ioa;  \n\t\t\t}\n\t\t\telse if(mode==2){\t// copy only differences, otherwise zero\n\t\t\t\tvar fa = sb[si+3], fr=sb[si], fg=sb[si+1], fb=sb[si+2]; \n\t\t\t\tvar ba = tb[ti+3], br=tb[ti], bg=tb[ti+1], bb=tb[ti+2]; \n\t\t\t\tif(fa==ba && fr==br && fg==bg && fb==bb) {  tb[ti]=0;  tb[ti+1]=0;  tb[ti+2]=0;  tb[ti+3]=0;  }\n\t\t\t\telse {  tb[ti]=fr;  tb[ti+1]=fg;  tb[ti+2]=fb;  tb[ti+3]=fa;  }\n\t\t\t}\n\t\t\telse if(mode==3){\t// check if can be blended\n\t\t\t\tvar fa = sb[si+3], fr=sb[si], fg=sb[si+1], fb=sb[si+2]; \n\t\t\t\tvar ba = tb[ti+3], br=tb[ti], bg=tb[ti+1], bb=tb[ti+2]; \n\t\t\t\tif(fa==ba && fr==br && fg==bg && fb==bb) continue;\n\t\t\t\t//if(fa!=255 && ba!=0) return false;\n\t\t\t\tif(fa<220 && ba>20) return false;\n\t\t\t}\n\t\t}\n\treturn true;\n}\n\n\n\n\nUPNG.encode = function(bufs, w, h, ps, dels, tabs, forbidPlte)\n{\n\tif(ps==null) ps=0;\n\tif(forbidPlte==null) forbidPlte = false;\n\n\tvar nimg = UPNG.encode.compress(bufs, w, h, ps, [false, false, false, 0, forbidPlte]);\n\tUPNG.encode.compressPNG(nimg, -1);\n\t\n\treturn UPNG.encode._main(nimg, w, h, dels, tabs);\n}\n\nUPNG.encodeLL = function(bufs, w, h, cc, ac, depth, dels, tabs) {\n\tvar nimg = {  ctype: 0 + (cc==1 ? 0 : 2) + (ac==0 ? 0 : 4),      depth: depth,  frames: []  };\n\t\n\tvar time = Date.now();\n\tvar bipp = (cc+ac)*depth, bipl = bipp * w;\n\tfor(var i=0; i<bufs.length; i++)\n\t\tnimg.frames.push({  rect:{x:0,y:0,width:w,height:h},  img:new Uint8Array(bufs[i]), blend:0, dispose:1, bpp:Math.ceil(bipp/8), bpl:Math.ceil(bipl/8)  });\n\t\n\tUPNG.encode.compressPNG(nimg, 0, true);\n\t\n\tvar out = UPNG.encode._main(nimg, w, h, dels, tabs);\n\treturn out;\n}\n\nUPNG.encode._main = function(nimg, w, h, dels, tabs) {\n\tif(tabs==null) tabs={};\n\tvar crc = UPNG.crc.crc, wUi = UPNG._bin.writeUint, wUs = UPNG._bin.writeUshort, wAs = UPNG._bin.writeASCII;\n\tvar offset = 8, anim = nimg.frames.length>1, pltAlpha = false;\n\t\n\tvar leng = 8 + (16+5+4) /*+ (9+4)*/ + (anim ? 20 : 0);\n\tif(tabs[\"sRGB\"]!=null) leng += 8+1+4;\n\tif(tabs[\"pHYs\"]!=null) leng += 8+9+4;\n\tif(nimg.ctype==3) {\n\t\tvar dl = nimg.plte.length;\n\t\tfor(var i=0; i<dl; i++) if((nimg.plte[i]>>>24)!=255) pltAlpha = true;\n\t\tleng += (8 + dl*3 + 4) + (pltAlpha ? (8 + dl*1 + 4) : 0);\n\t}\n\tfor(var j=0; j<nimg.frames.length; j++)\n\t{\n\t\tvar fr = nimg.frames[j];\n\t\tif(anim) leng += 38;\n\t\tleng += fr.cimg.length + 12;\n\t\tif(j!=0) leng+=4;\n\t}\n\tleng += 12; \n\t\n\tvar data = new Uint8Array(leng);\n\tvar wr=[0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];\n\tfor(var i=0; i<8; i++) data[i]=wr[i];\n\t\n\twUi(data,offset, 13);     offset+=4;\n\twAs(data,offset,\"IHDR\");  offset+=4;\n\twUi(data,offset,w);  offset+=4;\n\twUi(data,offset,h);  offset+=4;\n\tdata[offset] = nimg.depth;  offset++;  // depth\n\tdata[offset] = nimg.ctype;  offset++;  // ctype\n\tdata[offset] = 0;  offset++;  // compress\n\tdata[offset] = 0;  offset++;  // filter\n\tdata[offset] = 0;  offset++;  // interlace\n\twUi(data,offset,crc(data,offset-17,17));  offset+=4; // crc\n\n\t// 13 bytes to say, that it is sRGB\n\tif(tabs[\"sRGB\"]!=null) {\n\t\twUi(data,offset, 1);      offset+=4;\n\t\twAs(data,offset,\"sRGB\");  offset+=4;\n\t\tdata[offset] = tabs[\"sRGB\"];  offset++;\n\t\twUi(data,offset,crc(data,offset-5,5));  offset+=4; // crc\n\t}\n\tif(tabs[\"pHYs\"]!=null) {\n\t\twUi(data,offset, 9);      offset+=4;\n\t\twAs(data,offset,\"pHYs\");  offset+=4;\n\t\twUi(data,offset, tabs[\"pHYs\"][0]);      offset+=4;\n\t\twUi(data,offset, tabs[\"pHYs\"][1]);      offset+=4;\n\t\tdata[offset]=tabs[\"pHYs\"][2];\t\t\toffset++;\n\t\twUi(data,offset,crc(data,offset-13,13));  offset+=4; // crc\n\t}\n\n\tif(anim) {\n\t\twUi(data,offset, 8);      offset+=4;\n\t\twAs(data,offset,\"acTL\");  offset+=4;\n\t\twUi(data,offset, nimg.frames.length);     offset+=4;\n\t\twUi(data,offset, tabs[\"loop\"]!=null?tabs[\"loop\"]:0);      offset+=4;\n\t\twUi(data,offset,crc(data,offset-12,12));  offset+=4; // crc\n\t}\n\n\tif(nimg.ctype==3) {\n\t\tvar dl = nimg.plte.length;\n\t\twUi(data,offset, dl*3);  offset+=4;\n\t\twAs(data,offset,\"PLTE\");  offset+=4;\n\t\tfor(var i=0; i<dl; i++){\n\t\t\tvar ti=i*3, c=nimg.plte[i], r=(c)&255, g=(c>>>8)&255, b=(c>>>16)&255;\n\t\t\tdata[offset+ti+0]=r;  data[offset+ti+1]=g;  data[offset+ti+2]=b;\n\t\t}\n\t\toffset+=dl*3;\n\t\twUi(data,offset,crc(data,offset-dl*3-4,dl*3+4));  offset+=4; // crc\n\n\t\tif(pltAlpha) {\n\t\t\twUi(data,offset, dl);  offset+=4;\n\t\t\twAs(data,offset,\"tRNS\");  offset+=4;\n\t\t\tfor(var i=0; i<dl; i++)  data[offset+i]=(nimg.plte[i]>>>24)&255;\n\t\t\toffset+=dl;\n\t\t\twUi(data,offset,crc(data,offset-dl-4,dl+4));  offset+=4; // crc\n\t\t}\n\t}\n\t\n\tvar fi = 0;\n\tfor(var j=0; j<nimg.frames.length; j++)\n\t{\n\t\tvar fr = nimg.frames[j];\n\t\tif(anim) {\n\t\t\twUi(data, offset, 26);     offset+=4;\n\t\t\twAs(data, offset,\"fcTL\");  offset+=4;\n\t\t\twUi(data, offset, fi++);   offset+=4;\n\t\t\twUi(data, offset, fr.rect.width );   offset+=4;\n\t\t\twUi(data, offset, fr.rect.height);   offset+=4;\n\t\t\twUi(data, offset, fr.rect.x);   offset+=4;\n\t\t\twUi(data, offset, fr.rect.y);   offset+=4;\n\t\t\twUs(data, offset, dels[j]);   offset+=2;\n\t\t\twUs(data, offset,  1000);   offset+=2;\n\t\t\tdata[offset] = fr.dispose;  offset++;\t// dispose\n\t\t\tdata[offset] = fr.blend  ;  offset++;\t// blend\n\t\t\twUi(data,offset,crc(data,offset-30,30));  offset+=4; // crc\n\t\t}\n\t\t\t\t\n\t\tvar imgd = fr.cimg, dl = imgd.length;\n\t\twUi(data,offset, dl+(j==0?0:4));     offset+=4;\n\t\tvar ioff = offset;\n\t\twAs(data,offset,(j==0)?\"IDAT\":\"fdAT\");  offset+=4;\n\t\tif(j!=0) {  wUi(data, offset, fi++);  offset+=4;  }\n\t\tdata.set(imgd,offset);\n\t\toffset += dl;\n\t\twUi(data,offset,crc(data,ioff,offset-ioff));  offset+=4; // crc\n\t}\n\n\twUi(data,offset, 0);     offset+=4;\n\twAs(data,offset,\"IEND\");  offset+=4;\n\twUi(data,offset,crc(data,offset-4,4));  offset+=4; // crc\n\n\treturn data.buffer;\n}\n\nUPNG.encode.compressPNG = function(out, filter, levelZero) {\n\tfor(var i=0; i<out.frames.length; i++) {\n\t\tvar frm = out.frames[i], nw=frm.rect.width, nh=frm.rect.height;\n\t\tvar fdata = new Uint8Array(nh*frm.bpl+nh);\n\t\tfrm.cimg = UPNG.encode._filterZero(frm.img,nh,frm.bpp,frm.bpl,fdata, filter, levelZero);\n\t}\n}\n\n\n\nUPNG.encode.compress = function(bufs, w, h, ps, prms) // prms:  onlyBlend, minBits, forbidPlte\n{\n\t//var time = Date.now();\n\tvar onlyBlend = prms[0], evenCrd = prms[1], forbidPrev = prms[2], minBits = prms[3], forbidPlte = prms[4];\n\t\n\tvar ctype = 6, depth = 8, alphaAnd=255\n\t\n\tfor(var j=0; j<bufs.length; j++)  {  // when not quantized, other frames can contain colors, that are not in an initial frame\n\t\tvar img = new Uint8Array(bufs[j]), ilen = img.length;\n\t\tfor(var i=0; i<ilen; i+=4) alphaAnd &= img[i+3];\n\t}\n\tvar gotAlpha = (alphaAnd!=255);\n\t\n\t//console.log(\"alpha check\", Date.now()-time);  time = Date.now();\n\t\n\t//var brute = gotAlpha && forGIF;\t\t// brute : frames can only be copied, not \"blended\"\n\tvar frms = UPNG.encode.framize(bufs, w, h, onlyBlend, evenCrd, forbidPrev);\n\t//console.log(\"framize\", Date.now()-time);  time = Date.now();\n\t\n\tvar cmap={}, plte=[], inds=[];  \n\t\n\tif(ps!=0) {\n\t\tvar nbufs = [];  for(var i=0; i<frms.length; i++) nbufs.push(frms[i].img.buffer);\n\t\t\n\t\tvar abuf = UPNG.encode.concatRGBA(nbufs), qres = UPNG.quantize(abuf, ps);  \n\t\tvar cof = 0, bb = new Uint8Array(qres.abuf);\n\t\tfor(var i=0; i<frms.length; i++) {  var ti=frms[i].img, bln=ti.length;  inds.push(new Uint8Array(qres.inds.buffer, cof>>2, bln>>2));\n\t\t\tfor(var j=0; j<bln; j+=4) {  ti[j]=bb[cof+j];  ti[j+1]=bb[cof+j+1];  ti[j+2]=bb[cof+j+2];  ti[j+3]=bb[cof+j+3];  }    cof+=bln;  }\n\t\t\n\t\tfor(var i=0; i<qres.plte.length; i++) plte.push(qres.plte[i].est.rgba);\n\t\t//console.log(\"quantize\", Date.now()-time);  time = Date.now();\n\t}\n\telse {\n\t\t// what if ps==0, but there are <=256 colors?  we still need to detect, if the palette could be used\n\t\tfor(var j=0; j<frms.length; j++)  {  // when not quantized, other frames can contain colors, that are not in an initial frame\n\t\t\tvar frm = frms[j], img32 = new Uint32Array(frm.img.buffer), nw=frm.rect.width, ilen = img32.length;\n\t\t\tvar ind = new Uint8Array(ilen);  inds.push(ind);\n\t\t\tfor(var i=0; i<ilen; i++) {\n\t\t\t\tvar c = img32[i];\n\t\t\t\tif     (i!=0 && c==img32[i- 1]) ind[i]=ind[i-1];\n\t\t\t\telse if(i>nw && c==img32[i-nw]) ind[i]=ind[i-nw];\n\t\t\t\telse {\n\t\t\t\t\tvar cmc = cmap[c];\n\t\t\t\t\tif(cmc==null) {  cmap[c]=cmc=plte.length;  plte.push(c);  if(plte.length>=300) break;  }\n\t\t\t\t\tind[i]=cmc;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//console.log(\"make palette\", Date.now()-time);  time = Date.now();\n\t}\n\t\n\tvar cc=plte.length; //console.log(\"colors:\",cc);\n\tif(cc<=256 && forbidPlte==false) {\n\t\tif(cc<= 2) depth=1;  else if(cc<= 4) depth=2;  else if(cc<=16) depth=4;  else depth=8;\n\t\tdepth =  Math.max(depth, minBits);\n\t}\n\t\n\tfor(var j=0; j<frms.length; j++)\n\t{\n\t\tvar frm = frms[j], nx=frm.rect.x, ny=frm.rect.y, nw=frm.rect.width, nh=frm.rect.height;\n\t\tvar cimg = frm.img, cimg32 = new Uint32Array(cimg.buffer);\n\t\tvar bpl = 4*nw, bpp=4;\n\t\tif(cc<=256 && forbidPlte==false) {\n\t\t\tbpl = Math.ceil(depth*nw/8);\n\t\t\tvar nimg = new Uint8Array(bpl*nh);\n\t\t\tvar inj = inds[j];\n\t\t\tfor(var y=0; y<nh; y++) {  var i=y*bpl, ii=y*nw;\n\t\t\t\tif     (depth==8) for(var x=0; x<nw; x++) nimg[i+(x)   ]   =  (inj[ii+x]             );\n\t\t\t\telse if(depth==4) for(var x=0; x<nw; x++) nimg[i+(x>>1)]  |=  (inj[ii+x]<<(4-(x&1)*4));\n\t\t\t\telse if(depth==2) for(var x=0; x<nw; x++) nimg[i+(x>>2)]  |=  (inj[ii+x]<<(6-(x&3)*2));\n\t\t\t\telse if(depth==1) for(var x=0; x<nw; x++) nimg[i+(x>>3)]  |=  (inj[ii+x]<<(7-(x&7)*1));\n\t\t\t}\n\t\t\tcimg=nimg;  ctype=3;  bpp=1;\n\t\t}\n\t\telse if(gotAlpha==false && frms.length==1) {\t// some next \"reduced\" frames may contain alpha for blending\n\t\t\tvar nimg = new Uint8Array(nw*nh*3), area=nw*nh;\n\t\t\tfor(var i=0; i<area; i++) { var ti=i*3, qi=i*4;  nimg[ti]=cimg[qi];  nimg[ti+1]=cimg[qi+1];  nimg[ti+2]=cimg[qi+2];  }\n\t\t\tcimg=nimg;  ctype=2;  bpp=3;  bpl=3*nw;\n\t\t}\n\t\tfrm.img=cimg;  frm.bpl=bpl;  frm.bpp=bpp;\n\t}\n\t//console.log(\"colors => palette indices\", Date.now()-time);  time = Date.now();\n\t\n\treturn {ctype:ctype, depth:depth, plte:plte, frames:frms  };\n}\nUPNG.encode.framize = function(bufs,w,h,alwaysBlend,evenCrd,forbidPrev) {\n\t/*  DISPOSE\n\t    - 0 : no change\n\t\t- 1 : clear to transparent\n\t\t- 2 : retstore to content before rendering (previous frame disposed)\n\t\tBLEND\n\t\t- 0 : replace\n\t\t- 1 : blend\n\t*/\n\tvar frms = [];\n\tfor(var j=0; j<bufs.length; j++) {\n\t\tvar cimg = new Uint8Array(bufs[j]), cimg32 = new Uint32Array(cimg.buffer);\n\t\tvar nimg;\n\t\t\n\t\tvar nx=0, ny=0, nw=w, nh=h, blend=alwaysBlend?1:0;\n\t\tif(j!=0) {\n\t\t\tvar tlim = (forbidPrev || alwaysBlend || j==1 || frms[j-2].dispose!=0)?1:2, tstp = 0, tarea = 1e9;\n\t\t\tfor(var it=0; it<tlim; it++)\n\t\t\t{\n\t\t\t\tvar pimg = new Uint8Array(bufs[j-1-it]), p32 = new Uint32Array(bufs[j-1-it]);\n\t\t\t\tvar mix=w,miy=h,max=-1,may=-1;\n\t\t\t\tfor(var y=0; y<h; y++) for(var x=0; x<w; x++) {\n\t\t\t\t\tvar i = y*w+x;\n\t\t\t\t\tif(cimg32[i]!=p32[i]) {\n\t\t\t\t\t\tif(x<mix) mix=x;  if(x>max) max=x;\n\t\t\t\t\t\tif(y<miy) miy=y;  if(y>may) may=y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(max==-1) mix=miy=max=may=0;\n\t\t\t\tif(evenCrd) {  if((mix&1)==1)mix--;  if((miy&1)==1)miy--;  }\n\t\t\t\tvar sarea = (max-mix+1)*(may-miy+1);\n\t\t\t\tif(sarea<tarea) {\n\t\t\t\t\ttarea = sarea;  tstp = it;\n\t\t\t\t\tnx = mix; ny = miy; nw = max-mix+1; nh = may-miy+1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// alwaysBlend: pokud zjist\u00EDm, \u017Ee blendit nelze, nastav\u00EDm p\u0159edchoz\u00EDmu sn\u00EDmku dispose=1. Zajist\u00EDm, aby obsahoval m\u016Fj obd\u00E9ln\u00EDk.\n\t\t\tvar pimg = new Uint8Array(bufs[j-1-tstp]);\n\t\t\tif(tstp==1) frms[j-1].dispose = 2;\n\t\t\t\n\t\t\tnimg = new Uint8Array(nw*nh*4);\n\t\t\tUPNG._copyTile(pimg,w,h, nimg,nw,nh, -nx,-ny, 0);\n\t\t\t\n\t\t\tblend =  UPNG._copyTile(cimg,w,h, nimg,nw,nh, -nx,-ny, 3) ? 1 : 0;\n\t\t\tif(blend==1) UPNG.encode._prepareDiff(cimg,w,h,nimg,{x:nx,y:ny,width:nw,height:nh});\n\t\t\telse         UPNG._copyTile(cimg,w,h, nimg,nw,nh, -nx,-ny, 0);\n\t\t\t//UPNG._copyTile(cimg,w,h, nimg,nw,nh, -nx,-ny, blend==1?2:0);\n\t\t}\n\t\telse nimg = cimg.slice(0);\t// img may be rewritten further ... don't rewrite input\n\t\t\n\t\tfrms.push({rect:{x:nx,y:ny,width:nw,height:nh}, img:nimg, blend:blend, dispose:0});\n\t}\n\t\n\t\n\tif(alwaysBlend) for(var j=0; j<frms.length; j++) {\n\t\tvar frm = frms[j];  if(frm.blend==1) continue;\n\t\tvar r0 = frm.rect, r1 = frms[j-1].rect\n\t\tvar miX = Math.min(r0.x, r1.x), miY = Math.min(r0.y, r1.y);\n\t\tvar maX = Math.max(r0.x+r0.width, r1.x+r1.width), maY = Math.max(r0.y+r0.height, r1.y+r1.height);\n\t\tvar r = {x:miX, y:miY, width:maX-miX, height:maY-miY};\n\t\t\n\t\tfrms[j-1].dispose = 1;\n\t\tif(j-1!=0) \n\t\tUPNG.encode._updateFrame(bufs, w,h,frms, j-1,r, evenCrd);\n\t\tUPNG.encode._updateFrame(bufs, w,h,frms, j  ,r, evenCrd);\n\t}\n\tvar area = 0;\n\tif(bufs.length!=1) for(var i=0; i<frms.length; i++) {\n\t\tvar frm = frms[i];\n\t\tarea += frm.rect.width*frm.rect.height;\n\t\t//if(i==0 || frm.blend!=1) continue;\n\t\t//var ob = new Uint8Array(\n\t\t//console.log(frm.blend, frm.dispose, frm.rect);\n\t}\n\t//if(area!=0) console.log(area);\n\treturn frms;\n}\nUPNG.encode._updateFrame = function(bufs, w,h, frms, i, r, evenCrd) {\n\tvar U8 = Uint8Array, U32 = Uint32Array;\n\tvar pimg = new U8(bufs[i-1]), pimg32 = new U32(bufs[i-1]), nimg = i+1<bufs.length ? new U8(bufs[i+1]):null;\n\tvar cimg = new U8(bufs[i]), cimg32 = new U32(cimg.buffer);\n\t\n\tvar mix=w,miy=h,max=-1,may=-1;\n\tfor(var y=0; y<r.height; y++) for(var x=0; x<r.width; x++) {\n\t\tvar cx = r.x+x, cy = r.y+y;\n\t\tvar j = cy*w+cx, cc = cimg32[j];\n\t\t// no need to draw transparency, or to dispose it. Or, if writing the same color and the next one does not need transparency.\n\t\tif(cc==0 || (frms[i-1].dispose==0 && pimg32[j]==cc && (nimg==null || nimg[j*4+3]!=0))/**/) {}\n\t\telse {\n\t\t\tif(cx<mix) mix=cx;  if(cx>max) max=cx;\n\t\t\tif(cy<miy) miy=cy;  if(cy>may) may=cy;\n\t\t}\n\t}\n\tif(max==-1) mix=miy=max=may=0;\n\tif(evenCrd) {  if((mix&1)==1)mix--;  if((miy&1)==1)miy--;  }\n\tr = {x:mix, y:miy, width:max-mix+1, height:may-miy+1};\n\t\n\tvar fr = frms[i];  fr.rect = r;  fr.blend = 1;  fr.img = new Uint8Array(r.width*r.height*4);\n\tif(frms[i-1].dispose==0) {\n\t\tUPNG._copyTile(pimg,w,h, fr.img,r.width,r.height, -r.x,-r.y, 0);\n\t\tUPNG.encode._prepareDiff(cimg,w,h,fr.img,r);\n\t\t//UPNG._copyTile(cimg,w,h, fr.img,r.width,r.height, -r.x,-r.y, 2);\n\t}\n\telse\n\t\tUPNG._copyTile(cimg,w,h, fr.img,r.width,r.height, -r.x,-r.y, 0);\n}\nUPNG.encode._prepareDiff = function(cimg, w,h, nimg, rec) {\n\tUPNG._copyTile(cimg,w,h, nimg,rec.width,rec.height, -rec.x,-rec.y, 2);\n\t/*\n\tvar n32 = new Uint32Array(nimg.buffer);\n\tvar og = new Uint8Array(rec.width*rec.height*4), o32 = new Uint32Array(og.buffer);\n\tUPNG._copyTile(cimg,w,h, og,rec.width,rec.height, -rec.x,-rec.y, 0);\n\tfor(var i=4; i<nimg.length; i+=4) {\n\t\tif(nimg[i-1]!=0 && nimg[i+3]==0 && o32[i>>>2]==o32[(i>>>2)-1]) {\n\t\t\tn32[i>>>2]=o32[i>>>2];\n\t\t\t//var j = i, c=p32[(i>>>2)-1];\n\t\t\t//while(p32[j>>>2]==c) {  n32[j>>>2]=c;  j+=4;  }\n\t\t}\n\t}\n\tfor(var i=nimg.length-8; i>0; i-=4) {\n\t\tif(nimg[i+7]!=0 && nimg[i+3]==0 && o32[i>>>2]==o32[(i>>>2)+1]) {\n\t\t\tn32[i>>>2]=o32[i>>>2];\n\t\t\t//var j = i, c=p32[(i>>>2)-1];\n\t\t\t//while(p32[j>>>2]==c) {  n32[j>>>2]=c;  j+=4;  }\n\t\t}\n\t}*/\n}\n\nUPNG.encode._filterZero = function(img,h,bpp,bpl,data, filter, levelZero)\n{\n\tvar fls = [], ftry=[0,1,2,3,4];\n\tif     (filter!=-1)             ftry=[filter];\n\telse if(h*bpl>500000 || bpp==1) ftry=[0];\n\tvar opts;  if(levelZero) opts={level:0};\n\t\n\tvar CMPR = (levelZero && UZIP!=null) ? UZIP : pako;\n\t\n\tfor(var i=0; i<ftry.length; i++) {\n\t\tfor(var y=0; y<h; y++) UPNG.encode._filterLine(data, img, y, bpl, bpp, ftry[i]);\n\t\t//var nimg = new Uint8Array(data.length);\n\t\t//var sz = UZIP.F.deflate(data, nimg);  fls.push(nimg.slice(0,sz));\n\t\t//var dfl = pako[\"deflate\"](data), dl=dfl.length-4;\n\t\t//var crc = (dfl[dl+3]<<24)|(dfl[dl+2]<<16)|(dfl[dl+1]<<8)|(dfl[dl+0]<<0);\n\t\t//console.log(crc, UZIP.adler(data,2,data.length-6));\n\t\tfls.push(CMPR[\"deflate\"](data,opts));\n\t}\n\tvar ti, tsize=1e9;\n\tfor(var i=0; i<fls.length; i++) if(fls[i].length<tsize) {  ti=i;  tsize=fls[i].length;  }\n\treturn fls[ti];\n}\nUPNG.encode._filterLine = function(data, img, y, bpl, bpp, type)\n{\n\tvar i = y*bpl, di = i+y, paeth = UPNG.decode._paeth\n\tdata[di]=type;  di++;\n\n\tif(type==0) {\n\t\tif(bpl<500) for(var x=0; x<bpl; x++) data[di+x] = img[i+x];\n\t\telse data.set(new Uint8Array(img.buffer,i,bpl),di);\n\t}\n\telse if(type==1) {\n\t\tfor(var x=  0; x<bpp; x++) data[di+x] =  img[i+x];\n\t\tfor(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x]-img[i+x-bpp]+256)&255;\n\t}\n\telse if(y==0) {\n\t\tfor(var x=  0; x<bpp; x++) data[di+x] = img[i+x];\n\n\t\tif(type==2) for(var x=bpp; x<bpl; x++) data[di+x] = img[i+x];\n\t\tif(type==3) for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x] - (img[i+x-bpp]>>1) +256)&255;\n\t\tif(type==4) for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x] - paeth(img[i+x-bpp], 0, 0) +256)&255;\n\t}\n\telse {\n\t\tif(type==2) { for(var x=  0; x<bpl; x++) data[di+x] = (img[i+x]+256 - img[i+x-bpl])&255;  }\n\t\tif(type==3) { for(var x=  0; x<bpp; x++) data[di+x] = (img[i+x]+256 - (img[i+x-bpl]>>1))&255;\n\t\t\t\t\t  for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x]+256 - ((img[i+x-bpl]+img[i+x-bpp])>>1))&255;  }\n\t\tif(type==4) { for(var x=  0; x<bpp; x++) data[di+x] = (img[i+x]+256 - paeth(0, img[i+x-bpl], 0))&255;\n\t\t\t\t\t  for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x]+256 - paeth(img[i+x-bpp], img[i+x-bpl], img[i+x-bpp-bpl]))&255;  }\n\t}\n}\n\nUPNG.crc = {\n\ttable : ( function() {\n\t   var tab = new Uint32Array(256);\n\t   for (var n=0; n<256; n++) {\n\t\t\tvar c = n;\n\t\t\tfor (var k=0; k<8; k++) {\n\t\t\t\tif (c & 1)  c = 0xedb88320 ^ (c >>> 1);\n\t\t\t\telse        c = c >>> 1;\n\t\t\t}\n\t\t\ttab[n] = c;  }\n\t\treturn tab;  })(),\n\tupdate : function(c, buf, off, len) {\n\t\tfor (var i=0; i<len; i++)  c = UPNG.crc.table[(c ^ buf[off+i]) & 0xff] ^ (c >>> 8);\n\t\treturn c;\n\t},\n\tcrc : function(b,o,l)  {  return UPNG.crc.update(0xffffffff,b,o,l) ^ 0xffffffff;  }\n}\n\n\nUPNG.quantize = function(abuf, ps)\n{\t\n\tvar oimg = new Uint8Array(abuf), nimg = oimg.slice(0), nimg32 = new Uint32Array(nimg.buffer);\n\t\n\tvar KD = UPNG.quantize.getKDtree(nimg, ps);\n\tvar root = KD[0], leafs = KD[1];\n\t\n\tvar planeDst = UPNG.quantize.planeDst;\n\tvar sb = oimg, tb = nimg32, len=sb.length;\n\t\t\n\tvar inds = new Uint8Array(oimg.length>>2);\n\tfor(var i=0; i<len; i+=4) {\n\t\tvar r=sb[i]*(1/255), g=sb[i+1]*(1/255), b=sb[i+2]*(1/255), a=sb[i+3]*(1/255);\n\t\t\n\t\t//  exact, but too slow :(\n\t\tvar nd = UPNG.quantize.getNearest(root, r, g, b, a);\n\t\t//var nd = root;\n\t\t//while(nd.left) nd = (planeDst(nd.est,r,g,b,a)<=0) ? nd.left : nd.right;\n\t\t\n\t\tinds[i>>2] = nd.ind;\n\t\ttb[i>>2] = nd.est.rgba;\n\t}\n\treturn {  abuf:nimg.buffer, inds:inds, plte:leafs  };\n}\n\nUPNG.quantize.getKDtree = function(nimg, ps, err) {\n\tif(err==null) err = 0.0001;\n\tvar nimg32 = new Uint32Array(nimg.buffer);\n\t\n\tvar root = {i0:0, i1:nimg.length, bst:null, est:null, tdst:0, left:null, right:null };  // basic statistic, extra statistic\n\troot.bst = UPNG.quantize.stats(  nimg,root.i0, root.i1  );  root.est = UPNG.quantize.estats( root.bst );\n\tvar leafs = [root];\n\t\n\twhile(leafs.length<ps)\n\t{\n\t\tvar maxL = 0, mi=0;\n\t\tfor(var i=0; i<leafs.length; i++) if(leafs[i].est.L > maxL) {  maxL=leafs[i].est.L;  mi=i;  }\n\t\tif(maxL<err) break;\n\t\tvar node = leafs[mi];\n\t\t\n\t\tvar s0 = UPNG.quantize.splitPixels(nimg,nimg32, node.i0, node.i1, node.est.e, node.est.eMq255);\n\t\tvar s0wrong = (node.i0>=s0 || node.i1<=s0);\n\t\t//console.log(maxL, leafs.length, mi);\n\t\tif(s0wrong) {  node.est.L=0;  continue;  }\n\t\t\n\t\t\n\t\tvar ln = {i0:node.i0, i1:s0, bst:null, est:null, tdst:0, left:null, right:null };  ln.bst = UPNG.quantize.stats( nimg, ln.i0, ln.i1 );  \n\t\tln.est = UPNG.quantize.estats( ln.bst );\n\t\tvar rn = {i0:s0, i1:node.i1, bst:null, est:null, tdst:0, left:null, right:null };  rn.bst = {R:[], m:[], N:node.bst.N-ln.bst.N};\n\t\tfor(var i=0; i<16; i++) rn.bst.R[i] = node.bst.R[i]-ln.bst.R[i];\n\t\tfor(var i=0; i< 4; i++) rn.bst.m[i] = node.bst.m[i]-ln.bst.m[i];\n\t\trn.est = UPNG.quantize.estats( rn.bst );\n\t\t\n\t\tnode.left = ln;  node.right = rn;\n\t\tleafs[mi]=ln;  leafs.push(rn);\n\t}\n\tleafs.sort(function(a,b) {  return b.bst.N-a.bst.N;  });\n\tfor(var i=0; i<leafs.length; i++) leafs[i].ind=i;\n\treturn [root, leafs];\n}\n\nUPNG.quantize.getNearest = function(nd, r,g,b,a)\n{\n\tif(nd.left==null) {  nd.tdst = UPNG.quantize.dist(nd.est.q,r,g,b,a);  return nd;  }\n\tvar planeDst = UPNG.quantize.planeDst(nd.est,r,g,b,a);\n\t\n\tvar node0 = nd.left, node1 = nd.right;\n\tif(planeDst>0) {  node0=nd.right;  node1=nd.left;  }\n\t\n\tvar ln = UPNG.quantize.getNearest(node0, r,g,b,a);\n\tif(ln.tdst<=planeDst*planeDst) return ln;\n\tvar rn = UPNG.quantize.getNearest(node1, r,g,b,a);\n\treturn rn.tdst<ln.tdst ? rn : ln;\n}\nUPNG.quantize.planeDst = function(est, r,g,b,a) {  var e = est.e;  return e[0]*r + e[1]*g + e[2]*b + e[3]*a - est.eMq;  }\nUPNG.quantize.dist     = function(q,   r,g,b,a) {  var d0=r-q[0], d1=g-q[1], d2=b-q[2], d3=a-q[3];  return d0*d0+d1*d1+d2*d2+d3*d3;  }\n\nUPNG.quantize.splitPixels = function(nimg, nimg32, i0, i1, e, eMq)\n{\n\tvar vecDot = UPNG.quantize.vecDot;\n\ti1-=4;\n\tvar shfs = 0;\n\twhile(i0<i1)\n\t{\n\t\twhile(vecDot(nimg, i0, e)<=eMq) i0+=4;\n\t\twhile(vecDot(nimg, i1, e)> eMq) i1-=4;\n\t\tif(i0>=i1) break;\n\t\t\n\t\tvar t = nimg32[i0>>2];  nimg32[i0>>2] = nimg32[i1>>2];  nimg32[i1>>2]=t;\n\t\t\n\t\ti0+=4;  i1-=4;\n\t}\n\twhile(vecDot(nimg, i0, e)>eMq) i0-=4;\n\treturn i0+4;\n}\nUPNG.quantize.vecDot = function(nimg, i, e)\n{\n\treturn nimg[i]*e[0] + nimg[i+1]*e[1] + nimg[i+2]*e[2] + nimg[i+3]*e[3];\n}\nUPNG.quantize.stats = function(nimg, i0, i1){\n\tvar R = [0,0,0,0,  0,0,0,0,  0,0,0,0,  0,0,0,0];\n\tvar m = [0,0,0,0];\n\tvar N = (i1-i0)>>2;\n\tfor(var i=i0; i<i1; i+=4)\n\t{\n\t\tvar r = nimg[i]*(1/255), g = nimg[i+1]*(1/255), b = nimg[i+2]*(1/255), a = nimg[i+3]*(1/255);\n\t\t//var r = nimg[i], g = nimg[i+1], b = nimg[i+2], a = nimg[i+3];\n\t\tm[0]+=r;  m[1]+=g;  m[2]+=b;  m[3]+=a;\n\t\t\n\t\tR[ 0] += r*r;  R[ 1] += r*g;  R[ 2] += r*b;  R[ 3] += r*a;  \n\t\t               R[ 5] += g*g;  R[ 6] += g*b;  R[ 7] += g*a; \n\t\t                              R[10] += b*b;  R[11] += b*a;  \n\t\t                                             R[15] += a*a;  \n\t}\n\tR[4]=R[1];  R[8]=R[2];  R[9]=R[6];  R[12]=R[3];  R[13]=R[7];  R[14]=R[11];\n\t\n\treturn {R:R, m:m, N:N};\n}\nUPNG.quantize.estats = function(stats){\n\tvar R = stats.R, m = stats.m, N = stats.N;\n\t\n\t// when all samples are equal, but N is large (millions), the Rj can be non-zero ( 0.0003.... - precission error)\n\tvar m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3], iN = (N==0 ? 0 : 1/N);\n\tvar Rj = [\n\t\tR[ 0] - m0*m0*iN,  R[ 1] - m0*m1*iN,  R[ 2] - m0*m2*iN,  R[ 3] - m0*m3*iN,  \n\t\tR[ 4] - m1*m0*iN,  R[ 5] - m1*m1*iN,  R[ 6] - m1*m2*iN,  R[ 7] - m1*m3*iN,\n\t\tR[ 8] - m2*m0*iN,  R[ 9] - m2*m1*iN,  R[10] - m2*m2*iN,  R[11] - m2*m3*iN,  \n\t\tR[12] - m3*m0*iN,  R[13] - m3*m1*iN,  R[14] - m3*m2*iN,  R[15] - m3*m3*iN \n\t];\n\t\n\tvar A = Rj, M = UPNG.M4;\n\tvar b = [0.5,0.5,0.5,0.5], mi = 0, tmi = 0;\n\t\n\tif(N!=0)\n\tfor(var i=0; i<10; i++) {\n\t\tb = M.multVec(A, b);  tmi = Math.sqrt(M.dot(b,b));  b = M.sml(1/tmi,  b);\n\t\tif(Math.abs(tmi-mi)<1e-9) break;  mi = tmi;\n\t}\t\n\t//b = [0,0,1,0];  mi=N;\n\tvar q = [m0*iN, m1*iN, m2*iN, m3*iN];\n\tvar eMq255 = M.dot(M.sml(255,q),b);\n\t\n\treturn {  Cov:Rj, q:q, e:b, L:mi,  eMq255:eMq255, eMq : M.dot(b,q),\n\t\t\t\trgba: (((Math.round(255*q[3])<<24) | (Math.round(255*q[2])<<16) |  (Math.round(255*q[1])<<8) | (Math.round(255*q[0])<<0))>>>0)  };\n}\nUPNG.M4 = {\n\tmultVec : function(m,v) {\n\t\t\treturn [\n\t\t\t\tm[ 0]*v[0] + m[ 1]*v[1] + m[ 2]*v[2] + m[ 3]*v[3],\n\t\t\t\tm[ 4]*v[0] + m[ 5]*v[1] + m[ 6]*v[2] + m[ 7]*v[3],\n\t\t\t\tm[ 8]*v[0] + m[ 9]*v[1] + m[10]*v[2] + m[11]*v[3],\n\t\t\t\tm[12]*v[0] + m[13]*v[1] + m[14]*v[2] + m[15]*v[3]\n\t\t\t];\n\t},\n\tdot : function(x,y) {  return  x[0]*y[0]+x[1]*y[1]+x[2]*y[2]+x[3]*y[3];  },\n\tsml : function(a,y) {  return [a*y[0],a*y[1],a*y[2],a*y[3]];  }\n}\n\nUPNG.encode.concatRGBA = function(bufs) {\n\tvar tlen = 0;\n\tfor(var i=0; i<bufs.length; i++) tlen += bufs[i].byteLength;\n\tvar nimg = new Uint8Array(tlen), noff=0;\n\tfor(var i=0; i<bufs.length; i++) {\n\t\tvar img = new Uint8Array(bufs[i]), il = img.length;\n\t\tfor(var j=0; j<il; j+=4) {  \n\t\t\tvar r=img[j], g=img[j+1], b=img[j+2], a = img[j+3];\n\t\t\tif(a==0) r=g=b=0;\n\t\t\tnimg[noff+j]=r;  nimg[noff+j+1]=g;  nimg[noff+j+2]=b;  nimg[noff+j+3]=a;  }\n\t\tnoff += il;\n\t}\n\treturn nimg.buffer;\n}\n\nexport default UPNG;\n\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "export class ObjectUtils\r\n{\r\n\tprivate static keys(object: any)\r\n\t{\r\n\t\t// NOT WORKING FOR File type!\r\n\t\t// const keys = Object.keys(object);\r\n\t\tconst keys = [];\r\n\t\tfor (let key in object)\r\n\t\t{\r\n\t\t\tkeys.push(key);\r\n\t\t}\r\n\r\n\t\treturn keys;\r\n\t}\r\n\r\n\tpublic static mergeConfig<T extends Object>(defaultConfig: T, config: T): T\r\n\t{\r\n\t\t// Object.create makes a shallow copy\r\n\t\tconst resultConfig = Object.create(defaultConfig);\r\n\r\n\t\tfor (const key in config)\r\n\t\t{\r\n\t\t\tconst value = config[key];\r\n\t\t\tresultConfig[key] = value;\r\n\t\t}\r\n\r\n\t\treturn resultConfig;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if 2 objects equal each other, ie. they have the same\r\n\t * fields and values (recursively).\r\n\t */\r\n\tpublic static compare(object1: any, object2: any): boolean\r\n\t{\r\n\t\tif (object1 === object2)\r\n\t\t{\r\n\t\t\t// same instance or same value for primitive types\r\n\t\t\t// -> no need to check further\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tconst type1 = typeof object1;\r\n\t\tconst type2 = typeof object2;\r\n\r\n\t\tif (type1 !== type2)\r\n\t\t{\r\n\t\t\t// types don't match\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (type1 !== \"object\")\r\n\t\t{\r\n\t\t\t// they're both primitive types but don't have the same value (first if in this function)\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// at this point types match, they're not primitives, but they're not the same instance\r\n\t\t// -> check if all the properties have the same value\r\n\r\n\t\t// first check if they have the same keys\r\n\t\t// (note: objects can be either object or array)\r\n\r\n\t\tconst keys1 = ObjectUtils.keys(object1);\r\n\t\tconst keys2 = ObjectUtils.keys(object2);\r\n\r\n\r\n\t\tif (keys1.length !== keys2.length)\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tkeys1.sort();\r\n\t\tkeys2.sort();\r\n\r\n\t\tfor (let i = 0, ln = keys1.length; i < ln; ++i)\r\n\t\t{\r\n\t\t\tif (keys1[i] !== keys2[i])\r\n\t\t\t{\r\n\t\t\t\t// key names don't match\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// they have the same keys\r\n\t\t// check if they have the same values for each key\r\n\t\tfor (let i = 0, ln = keys1.length; i < ln; ++i)\r\n\t\t{\r\n\t\t\tconst key = keys1[i];\r\n\r\n\t\t\tif (!ObjectUtils.compare(object1[key], object2[key]))\r\n\t\t\t{\r\n\t\t\t\t// values don't match\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// match\r\n\r\n\t\treturn true;\r\n\t}\r\n}", "export class HTMLUtils\r\n{\r\n\t/**\r\n\t * Removes every child of the element\r\n\t * @param element HTMLElement\r\n\t */\r\n\tpublic static clearElement(element: Element, alsoRemoveFromDom: boolean = false)\r\n\t{\r\n\t\twhile (element.lastChild)\r\n\t\t{\r\n\t\t\telement.removeChild(element.lastChild);\r\n\t\t}\r\n\r\n\t\tif (alsoRemoveFromDom)\r\n\t\t{\r\n\t\t\tHTMLUtils.detach(element);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes element from DOM\r\n\t * @param element HTMLelement\r\n\t */\r\n\tpublic static detach(element: Element)\r\n\t{\r\n\t\telement?.parentElement?.removeChild(element);\r\n\t}\r\n}", "/**\r\n * You should use one of the descendants of this class: WarningWindow, ConfirmWindow, or PromptWindow\r\n * Example: const confirmed = await ConfirmWindow.open(\"Are you sure you want to delete this item?\");\r\n */\r\n\r\nimport {ObjectUtils} from \"utils/ObjectUtils\";\r\nimport {HTMLUtils} from \"utils/HTMLUtils\";\r\n\r\nexport interface IPopupWindowConfig\r\n{\r\n\tbackdrop?: boolean;\r\n\tok?: string; // The label of the OK button\r\n\tcancel?: string; // The label of the Cancel button\r\n\tparentElement?: HTMLElement;\r\n}\r\n\r\ninterface IPopupWindowProps\r\n{\r\n\tmessage: string;\r\n\tconfig?: IPopupWindowConfig;\r\n}\r\n\r\nexport abstract class PopupWindow<T>\r\n{\r\n\tprivate _isOkButtonEnabled: boolean = true;\r\n\tprivate _container: HTMLDivElement = document.createElement(\"div\");\r\n\tprivate _okButton: HTMLDivElement = document.createElement(\"div\");\r\n\tprivate readonly _props: IPopupWindowProps;\r\n\tprivate readonly _config: IPopupWindowConfig;\r\n\tprotected static readonly _defaultConfig: IPopupWindowConfig = {\r\n\t\tbackdrop: true,\r\n\t\tok: \"Yes\",\r\n\t\tcancel: \"No\",\r\n\t\tparentElement: document.body\r\n\t};\r\n\tprotected abstract _okValue: T; // the return value when the user clicks \"ok\"\r\n\tprotected abstract _cancelValue: T; // the return value when the user clicks \"cancel\"\r\n\tprotected _additionalElements: HTMLElement;\r\n\tprotected resolve: (isOk?: T) => void;\r\n\r\n\tconstructor(props: IPopupWindowProps)\r\n\t{\r\n\t\tthis._props = props;\r\n\t\tthis._config = ObjectUtils.mergeConfig(PopupWindow._defaultConfig, props.config || {});\r\n\t}\r\n\r\n\tprivate onKeyDown = (event: KeyboardEvent) =>\r\n\t{\r\n\t\tswitch(event.key)\r\n\t\t{\r\n\t\t\tcase \"Enter\":\r\n\t\t\t\tif (this._isOkButtonEnabled)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.onOkClick();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Escape\":\r\n\t\t\t\tthis.onCancelClick();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tprotected close()\r\n\t{\r\n\t\twindow.removeEventListener(\"keydown\", this.onKeyDown);\r\n\t\tHTMLUtils.detach(this._container);\r\n\t}\r\n\r\n\tprivate onCancelClick = () =>\r\n\t{\r\n\t\tthis.close();\r\n\t\tthis.resolve(this._cancelValue);\r\n\t};\r\n\r\n\tprivate onOkClick = () =>\r\n\t{\r\n\t\tif (this._isOkButtonEnabled)\r\n\t\t{\r\n\t\t\tthis.close();\r\n\t\t\tthis.resolve(this._okValue);\r\n\t\t}\r\n\t};\r\n\r\n\tprotected enableOkButton()\r\n\t{\r\n\t\tthis._isOkButtonEnabled = true;\r\n\t\tthis._okButton.classList.remove(\"disabled\");\r\n\t}\r\n\r\n\tprotected disableOkButton()\r\n\t{\r\n\t\tthis._isOkButtonEnabled = false;\r\n\t\tthis._okButton.classList.add(\"disabled\");\r\n\t}\r\n\r\n\tprotected open()\r\n\t{\r\n\t\twindow.addEventListener(\"keydown\", this.onKeyDown);\r\n\r\n\t\tthis.draw();\r\n\r\n\t\treturn new Promise<T>((resolve, reject) =>\r\n\t\t{\r\n\t\t\tthis.resolve = resolve;\r\n\t\t});\r\n\t}\r\n\r\n\tprivate draw()\r\n\t{\r\n\t\tthis._container.className = \"popupBackdrop flexCenter\";\r\n\t\tif (this._config.backdrop)\r\n\t\t{\r\n\t\t\tthis._container.onclick = this.onCancelClick;\r\n\t\t}\r\n\r\n\t\tconst popupWindow = document.createElement(\"div\");\r\n\t\tpopupWindow.className = \"popupWindow\";\r\n\r\n\t\tconst message = document.createElement(\"div\");\r\n\t\tmessage.className = \"message\";\r\n\t\tmessage.innerHTML = this._props.message;\r\n\t\tpopupWindow.appendChild(message);\r\n\t\t\r\n\t\tif (this._additionalElements)\r\n\t\t{\r\n\t\t\tpopupWindow.appendChild(this._additionalElements);\r\n\t\t}\r\n\r\n\t\tconst buttonContainer = document.createElement(\"div\");\r\n\t\tbuttonContainer.className = \"buttonContainer hbox flexCenter\";\r\n\r\n\t\tthis._okButton.className = \"ok btn\";\r\n\t\tthis._okButton.textContent = this._config.ok;\r\n\t\tthis._okButton.onclick = this.onOkClick;\r\n\r\n\t\tif (!this._isOkButtonEnabled)\r\n\t\t{\r\n\t\t\tthis._okButton.classList.add(\"disabled\");\r\n\t\t}\r\n\r\n\t\tbuttonContainer.appendChild(this._okButton);\r\n\r\n\t\tif (this._config.cancel)\r\n\t\t{\r\n\t\t\tconst cancelButton = document.createElement(\"div\");\r\n\t\t\tcancelButton.className = \"cancel btn\";\r\n\t\t\tcancelButton.textContent = this._config.cancel;\r\n\t\t\tcancelButton.onclick = this.onCancelClick;\r\n\t\t\tbuttonContainer.appendChild(cancelButton);\r\n\t\t}\r\n\r\n\t\tpopupWindow.appendChild(buttonContainer);\r\n\r\n\t\tthis._container.appendChild(popupWindow);\r\n\r\n\t\tthis._config.parentElement.appendChild(this._container);\r\n\t}\r\n}", "import {PopupWindow} from \"./PopupWindow\";\r\n\r\n/**\r\n * Can be used as an alternative for `confirm(\"confirmMessage\");`\r\n */\r\nexport class ConfirmWindow extends PopupWindow<boolean>\r\n{\r\n\tprotected _okValue = true;\r\n\tprotected _cancelValue = false;\r\n\r\n\tconstructor(message: string)\r\n\t{\r\n\t\tsuper({\r\n\t\t\tmessage: message,\r\n\t\t\tconfig: {\r\n\t\t\t\tbackdrop: false\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic static open(message: string)\r\n\t{\r\n\t\treturn new ConfirmWindow(message).open();\r\n\t}\r\n}", "export class FileSelector\r\n{\r\n\tprivate _uploadDiv: HTMLElement = document.getElementById(\"uploadDiv\");\r\n\tprivate _inputElement: HTMLInputElement = document.createElement(\"input\");\r\n\r\n\tprivate processFiles: (files: FileList) => Promise<void>;\r\n\r\n\tconstructor(processFilesCallback: (files: FileList) => Promise<void>)\r\n\t{\r\n\t\tthis._inputElement.type = \"file\";\r\n\t\tthis._inputElement.accept = \"application/pdf\";\r\n\t\tthis._inputElement.multiple = true;\r\n\r\n\t\tthis.processFiles = processFilesCallback;\r\n\t}\r\n\r\n\tpublic addEventListeners()\r\n\t{\r\n\t\tthis._inputElement.addEventListener(\"change\", async (event: Event) =>\r\n\t\t{\r\n\t\t\tconst files = this._inputElement.files;\r\n\t\t\tawait this.processFiles(files);\r\n\t\t\tthis._inputElement.value = \"\";\r\n\t\t});\r\n\r\n\t\tthis._uploadDiv.addEventListener(\"click\", () =>\r\n\t\t{\r\n\t\t\tthis._inputElement.click();\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener(\"dragover\", (event: Event) =>\r\n\t\t{\r\n\t\t\tevent.preventDefault();\r\n\t\t\tthis._uploadDiv.classList.add(\"active\");\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener(\"dragover\", (event: Event) =>\r\n\t\t{\r\n\t\t\tevent.preventDefault();\r\n\t\t\tthis._uploadDiv.classList.add(\"active\");\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener(\"dragleave\", (event: Event) =>\r\n\t\t{\r\n\t\t\tthis._uploadDiv.classList.remove(\"active\");\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener(\"drop\", (event: DragEvent) =>\r\n\t\t{\r\n\t\t\tevent.preventDefault();\r\n\t\t\tthis._uploadDiv.classList.remove(\"active\");\r\n\r\n\t\t\tconst files = event.dataTransfer.files;\r\n\t\t\tthis.processFiles(files);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic newFilesAdded()\r\n\t{\r\n\t\tthis._uploadDiv.classList.add(\"small\");\r\n\t}\r\n\r\n\tpublic allPagesDeleted()\r\n\t{\r\n\t\tthis._uploadDiv.classList.remove(\"small\");\r\n\t}\r\n}", "export class FileUtils\r\n{\r\n\tpublic static readAsArrayBuffer(file: File)\r\n\t{\r\n\t\treturn new Promise<ArrayBuffer>((resolve, reject) =>\r\n\t\t{\r\n\t\t\tconst fileReader = new FileReader();\r\n\t\t\tfileReader.onload = () =>\r\n\t\t\t{\r\n\t\t\t\tresolve(fileReader.result as ArrayBuffer);\r\n\t\t\t};\r\n\t\t\tfileReader.onerror = () =>\r\n\t\t\t{\r\n\t\t\t\treject(\"Error\");\r\n\t\t\t};\r\n\t\t\tfileReader.readAsArrayBuffer(file);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic static downloadFileGivenByData(content: string | Uint8Array, defaultFileName: string, type: string = \"text/plain\")\r\n\t{\r\n\t\tconst url = FileUtils.createURLFromData(content, type);\r\n\r\n\t\tFileUtils.downloadFileFromUrl(url, defaultFileName);\r\n\t}\r\n\r\n\tpublic static createURLFromData(content: string | Uint8Array, type: string = \"text/plain\")\r\n\t{\r\n\t\t// This is slow for big text -> we use Blob instead.\r\n\t\t//var url = \"data:text/plain;charset=utf-8,\" + encodeURIComponent(content);\r\n\r\n\t\tconst blob = new Blob([content], {type: type});\r\n\t\tconst url = window.URL.createObjectURL(blob);\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\tprivate static downloadFileFromUrl(url: string, defaultFileName: string)\r\n\t{\r\n\t\tconst a = document.createElement(\"a\");\r\n\t\ta.href = url;\r\n\r\n\t\t// This doesn't seem to be working, filename is always render.png\r\n\t\ta.setAttribute(\"download\", defaultFileName);\r\n\t\ta[\"download\"] = defaultFileName;\r\n\r\n\t\ta.style.display = \"none\";\r\n\t\tdocument.body.appendChild(a);\r\n\t\ta.click();\r\n\t\tdocument.body.removeChild(a);\r\n\t}\r\n\r\n\tpublic static async canvasToBlob(canvas: HTMLCanvasElement)\r\n\t{\r\n\t\treturn new Promise<Blob>((resolve, reject) =>\r\n\t\t{\r\n\t\t\tcanvas.toBlob((blob: Blob) =>\r\n\t\t\t{\r\n\t\t\t\tresolve(blob);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}", "import {isFunctionExpression} from \"typescript\";\r\n\r\nexport class Functions\r\n{\r\n\tpublic static readonly empty = () => {};\r\n}", "import {Functions} from \"./Functions\";\r\n\r\ntype ButtonFunction = () => void;\r\n\r\ninterface IButtonParams\r\n{\r\n\tonArrowUpClick: ButtonFunction;\r\n\tonRotateCCWClick: ButtonFunction;\r\n\tonRemoveClick: ButtonFunction;\r\n\tonRotateCWClick: ButtonFunction;\r\n\tonArrowDownClick: ButtonFunction;\r\n}\r\n\r\nexport class HTMLFactory\r\n{\r\n\tpublic static createButtonsForPDF(params: IButtonParams)\r\n\t{\r\n\t\tconst buttons = document.createElement(\"div\");\r\n\t\tbuttons.classList.add(\"buttons\");\r\n\t\tbuttons.classList.add(\"vbox\");\r\n\r\n\t\t//\r\n\t\t// Arrow up\r\n\t\t//\r\n\t\tconst arrowUp = document.createElement(\"div\");\r\n\t\tarrowUp.classList.add(\"btn\");\r\n\t\tarrowUp.classList.add(\"arrow\");\r\n\t\tarrowUp.classList.add(\"up\");\r\n\t\tarrowUp.title = \"Move page up\";\r\n\t\tarrowUp.onclick = params.onArrowUpClick;\r\n\t\tif (arrowUp.onclick === Functions.empty)\r\n\t\t{\r\n\t\t\tarrowUp.classList.add(\"disabled\");\r\n\t\t}\r\n\r\n\t\t//\r\n\t\t// Horizontal row\r\n\t\t//\r\n\t\tconst horizontal = document.createElement(\"div\");\r\n\t\thorizontal.classList.add(\"hbox\");\r\n\r\n\t\t//\r\n\t\t// Rotate CCW\r\n\t\t//\r\n\t\tconst rotateCCW = document.createElement(\"div\");\r\n\t\trotateCCW.classList.add(\"btn\");\r\n\t\trotateCCW.classList.add(\"rotation\");\r\n\t\trotateCCW.classList.add(\"ccw\");\r\n\t\trotateCCW.title = \"Rotate page by 90\u00B0\";\r\n\t\trotateCCW.onclick = params.onRotateCCWClick;\r\n\r\n\t\t//\r\n\t\t// Remove\r\n\t\t//\r\n\t\tconst remove = document.createElement(\"div\");\r\n\t\tremove.classList.add(\"btn\");\r\n\t\tremove.classList.add(\"remove\");\r\n\t\tremove.title = \"Remove page\";\r\n\t\tremove.onclick = params.onRemoveClick;\r\n\r\n\t\t//\r\n\t\t// Rotate CW\r\n\t\t//\r\n\t\tconst rotateCW = document.createElement(\"div\");\r\n\t\trotateCW.classList.add(\"btn\");\r\n\t\trotateCW.classList.add(\"rotation\");\r\n\t\trotateCW.title = \"Rotate page by 90\u00B0\";\r\n\t\trotateCW.onclick = params.onRotateCWClick;\r\n\r\n\t\thorizontal.appendChild(rotateCCW);\r\n\t\thorizontal.appendChild(remove);\r\n\t\thorizontal.appendChild(rotateCW);\r\n\r\n\t\t//\r\n\t\t// Arrow down\r\n\t\t//\r\n\t\tconst arrowDown = document.createElement(\"div\");\r\n\t\tarrowDown.classList.add(\"btn\");\r\n\t\tarrowDown.classList.add(\"arrow\");\r\n\t\tarrowDown.title = \"Move page down\";\r\n\t\tarrowDown.onclick = params.onArrowDownClick;\r\n\t\tif (arrowDown.onclick === Functions.empty)\r\n\t\t{\r\n\t\t\tarrowDown.classList.add(\"disabled\");\r\n\t\t}\r\n\r\n\t\tbuttons.appendChild(arrowUp);\r\n\t\tbuttons.appendChild(horizontal);\r\n\t\tbuttons.appendChild(arrowDown);\r\n\r\n\t\treturn buttons;\r\n\t}\r\n}", "export class MathUtils\r\n{\r\n\tpublic static DEG2RAD = Math.PI / 180.0;\r\n\tpublic static RAD2DEG = 180.0 / Math.PI;\r\n\r\n\tpublic static clampDegreesBetweenFullCircle(value: number)\r\n\t{\r\n\t\tlet ret = value % 360;\r\n\t\tif (value < 0)\r\n\t\t{\r\n\t\t\tret += 360;\r\n\t\t}\r\n\r\n\t\treturn ret;\r\n\t}\r\n}", "import {MathUtils} from \"./MathUtils\";\r\n\r\nexport class ImageUtils\r\n{\r\n\tpublic static readonly clearFillStyle = \"rgba(255, 255, 255, 0.004)\"; // 1 / 255 ~ 0.004\r\n\r\n\tprivate static _canvas: HTMLCanvasElement;\r\n\tprivate static _ctx: CanvasRenderingContext2D;\r\n\r\n\tpublic static get canvas()\r\n\t{\r\n\t\tif (!ImageUtils._canvas)\r\n\t\t{\r\n\t\t\tImageUtils._canvas = document.createElement(\"canvas\");\r\n\t\t}\r\n\r\n\t\treturn ImageUtils._canvas;\r\n\t}\r\n\r\n\tpublic static get ctx()\r\n\t{\r\n\t\tif (!ImageUtils._ctx)\r\n\t\t{\r\n\t\t\tImageUtils._ctx = ImageUtils.canvas.getContext(\"2d\");\r\n\t\t}\r\n\r\n\t\treturn ImageUtils._ctx;\r\n\t}\r\n\r\n\tpublic static loadImage(url: string, imgElement: HTMLImageElement = document.createElement(\"img\"))\r\n\t{\r\n\t\treturn new Promise<HTMLImageElement>((resolve, reject) =>\r\n\t\t{\r\n\t\t\timgElement;\r\n\t\t\timgElement.crossOrigin = \"anonymous\";\r\n\t\t\timgElement.onload = () =>\r\n\t\t\t{\r\n\t\t\t\tresolve(imgElement);\r\n\t\t\t};\r\n\r\n\t\t\timgElement.src = url;\r\n\t\t});\r\n\t}\r\n\r\n\tprivate static calcProjectedRectSizeOfRotatedRect(size: {width: number, height: number}, rad: number)\r\n\t{\r\n\t\tconst {width, height} = size;\r\n\r\n\t\tconst rectProjectedWidth = Math.abs(width * Math.cos(rad)) + Math.abs(height * Math.sin(rad));\r\n\t\tconst rectProjectedHeight = Math.abs(width * Math.sin(rad)) + Math.abs(height * Math.cos(rad));\r\n\r\n\t\treturn {\r\n\t\t\twidth: rectProjectedWidth,\r\n\t\t\theight: rectProjectedHeight\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * By default, we have a strange, thin, black border around the texture's non-transparent parts (probably it's due to the canvas' premultiplied-alpha).\r\n\t * There are some workarounds to solve this, one of the simplest is this.\r\n\t */\r\n\tprivate static removeBlackBorders(ctx: CanvasRenderingContext2D)\r\n\t{\r\n\t\tctx.fillStyle = ImageUtils.clearFillStyle;\r\n\t\tctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\t}\r\n\r\n\t/**\r\n\t * https://stackoverflow.com/questions/17411991/html5-canvas-rotate-image\r\n\t * https://jsfiddle.net/casamia743/xqh48gno/\r\n\t * angle in degrees (ClockWise (CW) is the positive direction)\r\n\t * returns base64 png\r\n\t */\r\n\tpublic static rotateImage(image: HTMLImageElement, angle: number, filter: string = \"\")\r\n\t{\r\n\t\tif (angle === 0)\r\n\t\t{\r\n\t\t\treturn image.src;\r\n\t\t}\r\n\r\n\t\tconst boundaryRad = Math.atan(image.width / image.height);\r\n\t\tlet degree = angle % 360;\r\n\t\tif (degree < 0)\r\n\t\t{\r\n\t\t\tdegree += 360;\r\n\t\t}\r\n\r\n\t\tconst rad = MathUtils.DEG2RAD * degree;\r\n\r\n\t\tconst {width, height} = ImageUtils.calcProjectedRectSizeOfRotatedRect(\r\n\t\t\t{\r\n\t\t\t\twidth: image.width,\r\n\t\t\t\theight: image.height\r\n\t\t\t},\r\n\t\t\trad\r\n\t\t);\r\n\r\n\t\tImageUtils.canvas.width = width;\r\n\t\tImageUtils.canvas.height = height;\r\n\r\n\t\tconst ctx = ImageUtils.ctx;\r\n\t\tctx.save();\r\n\r\n\t\tconst sinHeight = image.height * Math.abs(Math.sin(rad));\r\n\t\tconst cosHeight = image.height * Math.abs(Math.cos(rad));\r\n\t\tconst cosWidth = image.width * Math.abs(Math.cos(rad));\r\n\t\tconst sinWidth = image.width * Math.abs(Math.sin(rad));\r\n\r\n\t\t// Workaround no longer needed (yOrigin can stay 0 instead of 1), once this PR gets merged: https://github.com/Hopding/pdf-lib/pull/502\r\n\t\tlet xOrigin: number = 0;\r\n\t\tlet yOrigin: number = 0;\r\n\r\n\t\tif (rad < boundaryRad)\r\n\t\t{\r\n\t\t\txOrigin = Math.min(sinHeight, cosWidth);\r\n\t\t}\r\n\t\telse if (rad < Math.PI / 2)\r\n\t\t{\r\n\t\t\txOrigin = Math.max(sinHeight, cosWidth);\r\n\t\t}\r\n\t\telse if (rad < Math.PI / 2 + boundaryRad)\r\n\t\t{\r\n\t\t\txOrigin = width;\r\n\t\t\tyOrigin = Math.min(cosHeight, sinWidth);\r\n\t\t}\r\n\t\telse if (rad < Math.PI)\r\n\t\t{\r\n\t\t\txOrigin = width;\r\n\t\t\tyOrigin = Math.max(cosHeight, sinWidth);\r\n\t\t}\r\n\t\telse if (rad < Math.PI + boundaryRad)\r\n\t\t{\r\n\t\t\txOrigin = Math.max(sinHeight, cosWidth);\r\n\t\t\tyOrigin = height;\r\n\t\t}\r\n\t\telse if (rad < Math.PI / 2 * 3)\r\n\t\t{\r\n\t\t\txOrigin = Math.min(sinHeight, cosWidth);\r\n\t\t\tyOrigin = height;\r\n\t\t}\r\n\t\telse if (rad < Math.PI / 2 * 3 + boundaryRad)\r\n\t\t{\r\n\t\t\tyOrigin = Math.max(cosHeight, sinWidth);\r\n\t\t}\r\n\t\telse if (rad < Math.PI * 2)\r\n\t\t{\r\n\t\t\tyOrigin = Math.min(cosHeight, sinWidth);\r\n\t\t}\r\n\r\n\t\tctx.translate(xOrigin, yOrigin);\r\n\t\tctx.rotate(rad);\r\n\t\tImageUtils.removeBlackBorders(ctx);\r\n\t\tconst savedFilter = ctx.filter;\r\n\t\tctx.filter = filter;\r\n\t\tctx.drawImage(image, 0, 0, image.width, image.height);\r\n\t\tctx.restore();\r\n\t\tctx.filter = savedFilter;\r\n\r\n\t\treturn ImageUtils.canvas.toDataURL();\r\n\t}\r\n}", "import {PDFDocument} from \"pdf-lib\";\r\nimport {FileUtils} from \"utils/FileUtils\";\r\nimport {ImageUtils} from \"./ImageUtils\";\r\n\r\nimport * as pdfjs from \"pdfjs-dist\";\r\nimport {PDFPageProxy, PDFDocumentProxy} from \"pdfjs-dist/types/display/api\";\r\npdfjs.GlobalWorkerOptions.workerSrc = \"libs/pdfjs/pdf.worker.js\";\r\n\r\ninterface ISnapShotConfig\r\n{\r\n\tscale: number;\r\n\toffsetX: number;\r\n\toffsetY: number;\r\n\tmaxSize: number;\r\n\tisBackground: boolean;\r\n\tisTransparent: boolean;\r\n}\r\n\r\nexport class PDFRenderer\r\n{\r\n\tprivate static _url: string;\r\n\tprivate static _pdf: PDFDocumentProxy;\r\n\tprivate static _page: PDFPageProxy;\r\n\tprivate static _pdfViewBox: number[];\r\n\tprivate static _cropLeft: number;\r\n\tprivate static _cropBottom: number;\r\n\tprivate static _pdfPageWidth: number;\r\n\tprivate static _pdfPageHeight: number;\r\n\tprivate static _canvas: HTMLCanvasElement = document.createElement(\"canvas\");\r\n\tprivate static _context: CanvasRenderingContext2D = PDFRenderer._canvas.getContext(\"2d\");\r\n\r\n\tprivate static _queueToProcess: {\r\n\t\tsnapShotConfig: ISnapShotConfig;\r\n\t\tpdf?: PDFDocument;\r\n\t\ttileID?: string;\r\n\t\tresolve: (url: string) => void\r\n\t}[] = [];\r\n\tprivate static _isProcessing: boolean = false;\r\n\r\n\tprivate static _thumbnailCache: {\r\n\t\t[key: string]: Promise<string>;\r\n\t} = {};\r\n\r\n\tprivate static _processOrder: \"LIFO\" | \"FIFO\" = \"FIFO\";\r\n\r\n\tpublic static setProcessOrder(order: \"LIFO\" | \"FIFO\")\r\n\t{\r\n\t\tPDFRenderer._processOrder = order;\r\n\t}\r\n\r\n\tprivate static _background: \"transparent\" | \"white\" = \"white\";\r\n\r\n\tpublic static setBackground(value: \"transparent\" | \"white\")\r\n\t{\r\n\t\tPDFRenderer._background = value;\r\n\t}\r\n\r\n\tpublic static async savePDFValues(pdf: string | PDFDocument)\r\n\t{\r\n\t\tlet url: string = null;\r\n\t\tif (pdf instanceof PDFDocument)\r\n\t\t{\r\n\t\t\tconst byteArray = await pdf.save();\r\n\t\t\turl = FileUtils.createURLFromData(byteArray);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\turl = pdf;\r\n\t\t}\r\n\t\tPDFRenderer._url = url;\r\n\r\n\t\tPDFRenderer._pdf = await pdfjs.getDocument({url: PDFRenderer._url, verbosity: pdfjs.VerbosityLevel.ERRORS}).promise;\r\n\r\n\t\tconsole.log(\"PDF Loaded\");\r\n\r\n\t\tPDFRenderer._page = await PDFRenderer._pdf.getPage(1);\r\n\r\n\t\tPDFRenderer._pdfViewBox = PDFRenderer._page.view;\r\n\r\n\t\tif ((PDFRenderer._page.rotate / 90) % 2 === 0)\r\n\t\t{\r\n\t\t\tPDFRenderer._cropLeft = PDFRenderer._pdfViewBox[0];\r\n\t\t\tPDFRenderer._cropBottom = PDFRenderer._pdfViewBox[1];\r\n\t\t\tPDFRenderer._pdfPageWidth = PDFRenderer._pdfViewBox[2] - PDFRenderer._cropLeft;\r\n\t\t\tPDFRenderer._pdfPageHeight = PDFRenderer._pdfViewBox[3] - PDFRenderer._cropBottom;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tPDFRenderer._cropLeft = PDFRenderer._pdfViewBox[1];\r\n\t\t\tPDFRenderer._cropBottom = PDFRenderer._pdfViewBox[0];\r\n\t\t\tPDFRenderer._pdfPageWidth = PDFRenderer._pdfViewBox[3] - PDFRenderer._cropLeft;\r\n\t\t\tPDFRenderer._pdfPageHeight = PDFRenderer._pdfViewBox[2] - PDFRenderer._cropBottom;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static async init(pdf: string | PDFDocument)\r\n\t{\r\n\t\tawait PDFRenderer.savePDFValues(pdf);\r\n\t}\r\n\r\n\tprivate static async getSnapShot(config: ISnapShotConfig)\r\n\t{\r\n\t\tif (PDFRenderer._page)\r\n\t\t{\r\n\t\t\tconst viewport = PDFRenderer._page.getViewport({\r\n\t\t\t\tscale: config.scale,\r\n\t\t\t\trotation: PDFRenderer._page.rotate,\r\n\t\t\t\toffsetX: -config.offsetX,\r\n\t\t\t\toffsetY: -config.offsetY,\r\n\t\t\t\tdontFlip: false\r\n\t\t\t});\r\n\r\n\t\t\tif (config.isBackground)\r\n\t\t\t{\r\n\t\t\t\tconst aspect = PDFRenderer._pdfPageWidth / PDFRenderer._pdfPageHeight;\r\n\r\n\t\t\t\tif (aspect >= 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tPDFRenderer._canvas.width = config.maxSize;\r\n\t\t\t\t\tPDFRenderer._canvas.height = PDFRenderer._canvas.width / aspect;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tPDFRenderer._canvas.height = config.maxSize;\r\n\t\t\t\t\tPDFRenderer._canvas.width = PDFRenderer._canvas.height * aspect;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// Tile\r\n\t\t\t\tPDFRenderer._canvas.width = config.maxSize;\r\n\t\t\t\tPDFRenderer._canvas.height = config.maxSize;\r\n\t\t\t}\r\n\r\n\t\t\t// Render PDF page into canvas context\r\n\t\t\tconst renderContext = {\r\n\t\t\t\tcanvasContext: PDFRenderer._context,\r\n\t\t\t\tbackground: config.isTransparent ? \"rgb(255, 255, 255, 0)\" : null,\r\n\t\t\t\tviewport: viewport,\r\n\t\t\t\t//enableWebGL: true\r\n\t\t\t};\r\n\r\n\t\t\tawait PDFRenderer._page.render(renderContext).promise;\r\n\r\n\t\t\treturn PDFRenderer._context;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static clearQueue()\r\n\t{\r\n\t\tPDFRenderer._queueToProcess.length = 0;\r\n\t}\r\n\r\n\tpublic static async processQueue()\r\n\t{\r\n\t\tif (!PDFRenderer._isProcessing)\r\n\t\t{\r\n\t\t\tif (PDFRenderer._queueToProcess.length > 0)\r\n\t\t\t{\r\n\t\t\t\tPDFRenderer._isProcessing = true;\r\n\t\t\t\tconst queueElement = PDFRenderer._processOrder === \"LIFO\" ? PDFRenderer._queueToProcess.pop() : PDFRenderer._queueToProcess.shift();\r\n\t\t\t\tconst resolve = queueElement.resolve;\r\n\t\t\t\tconst snapShotConfig = queueElement.snapShotConfig;\r\n\r\n\t\t\t\tconst pdf = queueElement.pdf;\r\n\r\n\t\t\t\tif (pdf)\r\n\t\t\t\t{\r\n\t\t\t\t\tawait PDFRenderer.init(pdf);\r\n\r\n\t\t\t\t\tconst aspect = PDFRenderer._pdfPageWidth / PDFRenderer._pdfPageHeight;\r\n\t\t\t\t\tsnapShotConfig.scale = snapShotConfig.maxSize / (aspect >= 1 ? PDFRenderer._pdfPageWidth : PDFRenderer._pdfPageHeight);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst context = await PDFRenderer.getSnapShot(snapShotConfig);\r\n\r\n\t\t\t\tconsole.log(\"tile rasterized\");\r\n\r\n\t\t\t\tconst url = URL.createObjectURL(await FileUtils.canvasToBlob(context.canvas));\r\n\r\n\t\t\t\tresolve(url);\r\n\r\n\t\t\t\tPDFRenderer._isProcessing = false;\r\n\r\n\t\t\t\tif (PDFRenderer._queueToProcess.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tPDFRenderer.processQueue();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param maxSize \r\n\t * @param pdf If omitted, the last initialized PDF will be used\r\n\t */\r\n\tprivate static getFullImageURLFromPDF(maxSize: number, pdf: PDFDocument)\r\n\t{\r\n\t\treturn new Promise<string>((resolve, reject) =>\r\n\t\t{\r\n\t\t\tPDFRenderer._queueToProcess.push({\r\n\t\t\t\tsnapShotConfig: {\r\n\t\t\t\t\tscale: null, // will be calculated on the fly\r\n\t\t\t\t\tmaxSize: maxSize,\r\n\t\t\t\t\toffsetX: 0,\r\n\t\t\t\t\toffsetY: 0,\r\n\t\t\t\t\tisBackground: true,\r\n\t\t\t\t\tisTransparent: true\r\n\t\t\t\t},\r\n\t\t\t\tpdf: pdf,\r\n\t\t\t\tresolve: resolve\r\n\t\t\t});\r\n\r\n\t\t\tif (!PDFRenderer._isProcessing)\r\n\t\t\t{\r\n\r\n\t\t\t\tPDFRenderer.processQueue();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param maxSize max(width, height)\r\n\t * @param pdf \r\n\t * @param cacheKey If you'd like to cache the thumbnail, you should give a unique name. It will be saved at _cache[cacheKey]\r\n\t * @param rotationDelta rotation difference between the original one\r\n\t */\r\n\tpublic static async getThumbnailAndViewBox(maxSize: number, pdf: PDFDocument, cacheKey: string, rotationDelta: number)\r\n\t{\r\n\t\tif (cacheKey)\r\n\t\t{\r\n\t\t\tif (!this._thumbnailCache[cacheKey])\r\n\t\t\t{\r\n\t\t\t\tthis._thumbnailCache[cacheKey] = PDFRenderer.getFullImageURLFromPDF(maxSize, pdf);\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._thumbnailCache[`${cacheKey}_${rotationDelta}`])\r\n\t\t\t{\r\n\t\t\t\tconst imgSrcWithoutRotation = await this._thumbnailCache[cacheKey];\r\n\t\t\t\tconst img = await ImageUtils.loadImage(imgSrcWithoutRotation);\r\n\t\t\t\tthis._thumbnailCache[`${cacheKey}_${rotationDelta}`] = new Promise<string>((resolve, reject) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tresolve(ImageUtils.rotateImage(img, rotationDelta));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn this._thumbnailCache[`${cacheKey}_${rotationDelta}`];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn PDFRenderer.getFullImageURLFromPDF(maxSize, pdf);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static get isPending()\r\n\t{\r\n\t\treturn PDFRenderer._isProcessing || PDFRenderer._queueToProcess.length > 0;\r\n\t}\r\n}", "import {PDFDocument} from \"pdf-lib\";\r\nimport {FileUtils} from \"./FileUtils\";\r\n\r\n/**\r\n * Reads a PDF file, and splits it by pages. A PDF with 76 pages will result in an array of 76 PDF files\r\n */\r\n\r\nexport class PDFSplitter\r\n{\r\n\tpublic static async split(file: File)\r\n\t{\r\n\t\tconst originalPDFBytes = await FileUtils.readAsArrayBuffer(file);\r\n\t\tconst originalPDFDoc = await PDFDocument.load(originalPDFBytes);\r\n\r\n\t\tconst pageCount = originalPDFDoc.getPageCount();\r\n\r\n\t\tconst newPDFs: PDFDocument[] = [];\r\n\t\tfor (let i = 0; i < pageCount; ++i)\r\n\t\t{\r\n\t\t\tconst newPDF = await PDFDocument.create();\r\n\t\t\tconst [page] = await newPDF.copyPages(originalPDFDoc, [i]);\r\n\t\t\tnewPDF.addPage(page);\r\n\t\t\tnewPDFs.push(newPDF);\r\n\t\t}\r\n\r\n\t\treturn newPDFs;\r\n\t}\r\n}", "import {degrees, PDFDocument} from \"pdf-lib\";\r\nimport {ConfirmWindow} from \"popup/ConfirmWindow\";\r\nimport {FileSelector} from \"utils/FileSelector\";\r\nimport {FileUtils} from \"utils/FileUtils\";\r\nimport {Functions} from \"utils/Functions\";\r\nimport {HTMLFactory} from \"utils/HTMLFactory\";\r\nimport {HTMLUtils} from \"utils/HTMLUtils\";\r\nimport {ImageUtils} from \"utils/ImageUtils\";\r\nimport {MathUtils} from \"utils/MathUtils\";\r\nimport {PDFRenderer} from \"utils/PDFRenderer\";\r\nimport {PDFSplitter} from \"utils/PDFSplitter\";\r\n\r\nexport interface IOnePagePDFDoc\r\n{\r\n\tdoc: PDFDocument;\r\n\tthumbnail: string;\r\n\toriginalRotation: number; // 0 | 90 | 180 | 270\r\n\toriginalFileName: string;\r\n\toriginalFileSize: number; // for caching the thumbnail\r\n\toriginalFileLastModified: number;\r\n\toriginalPageNumber: number; // its pagenumber in the original pdf document\r\n}\r\n\r\nexport class PDFEditor\r\n{\r\n\tprivate _fileSelector: FileSelector;\r\n\tprivate _thumbnails: HTMLElement = document.getElementById(\"thumbnails\");\r\n\tprivate _info: HTMLElement = document.getElementById(\"info\");\r\n\tprivate _downloadBtn: HTMLElement = document.getElementById(\"downloadBtn\");\r\n\tprivate _newOnePagePDFObjects: IOnePagePDFDoc[] = []; // one paged pdfs\r\n\tprivate _savedScrollValue: number = 0;\r\n\tprivate readonly _thumbnailSize: number = 400;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._fileSelector = new FileSelector(this.processFiles);\r\n\t\tthis.addEventListeners();\r\n\t}\r\n\r\n\tprivate disableDownloadButton()\r\n\t{\r\n\t\tthis._downloadBtn.textContent = \"Loading...\";\r\n\t\tthis._downloadBtn.classList.add(\"disabled\");\r\n\t}\r\n\r\n\tprivate enableDownloadButton()\r\n\t{\r\n\t\tthis._downloadBtn.textContent = \"Download merged PDF\";\r\n\t\tthis._downloadBtn.classList.remove(\"disabled\");\r\n\t}\r\n\r\n\tprivate addEventListeners()\r\n\t{\r\n\t\tthis._fileSelector.addEventListeners();\r\n\t\tthis._downloadBtn.onclick = this.onDownloadClick;\r\n\t}\r\n\r\n\tprivate processFiles = async (files: FileList) =>\r\n\t{\r\n\t\tconst listOfNewFiles: File[] = [];\r\n\t\tfor (let i = 0; i < files.length; ++i)\r\n\t\t{\r\n\t\t\tconst file = files[i];\r\n\t\t\tlistOfNewFiles.push(file);\r\n\t\t}\r\n\r\n\t\tif (listOfNewFiles.length > 0 && files.length > 0)\r\n\t\t{\r\n\t\t\tthis._fileSelector.newFilesAdded();\r\n\t\t\tthis._downloadBtn.classList.remove(\"hidden\");\r\n\t\t\tthis.disableDownloadButton();\r\n\t\t\tawait this.addPDFsToList(listOfNewFiles);\r\n\r\n\t\t\tthis.enableDownloadButton();\r\n\t\t}\r\n\t};\r\n\r\n\tprivate async addPDFsToList(originalFiles: File[])\r\n\t{\r\n\t\tfor (const file of originalFiles)\r\n\t\t{\r\n\t\t\tconst newPDFs = await PDFSplitter.split(file);\r\n\r\n\t\t\tfor (let j = 0; j < newPDFs.length; ++j)\r\n\t\t\t{\r\n\t\t\t\tconst newPDF = newPDFs[j];\r\n\r\n\t\t\t\tconst firstPage = newPDF.getPage(0);\r\n\t\t\t\tlet originalRotation = MathUtils.clampDegreesBetweenFullCircle(firstPage.getRotation().angle);\r\n\r\n\t\t\t\tthis._newOnePagePDFObjects.push({\r\n\t\t\t\t\tdoc: newPDF,\r\n\t\t\t\t\toriginalRotation: originalRotation,\r\n\t\t\t\t\toriginalFileName: file.name,\r\n\t\t\t\t\toriginalFileSize: file.size,\r\n\t\t\t\t\toriginalFileLastModified: file.lastModified,\r\n\t\t\t\t\toriginalPageNumber: j,\r\n\t\t\t\t\tthumbnail: null,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait this.refreshThumbnails();\r\n\t}\r\n\r\n\tprivate async refreshThumbnails(scrollType: \"toBottom\" | \"toLastPosition\" = \"toBottom\")\r\n\t{\r\n\t\tHTMLUtils.clearElement(this._thumbnails);\r\n\r\n\t\tconst promisesToWaitFor = [];\r\n\r\n\t\tfor (let i = 0; i < this._newOnePagePDFObjects.length; ++i)\r\n\t\t{\r\n\t\t\tconst pdfObject = this._newOnePagePDFObjects[i];\r\n\t\t\tconst thumbnailContainer = document.createElement(\"div\");\r\n\t\t\tthumbnailContainer.classList.add(\"hbox\");\r\n\t\t\tthumbnailContainer.classList.add(\"thumbnailContainer\");\r\n\r\n\t\t\tconst labelContent = `${pdfObject.originalFileName}: page ${pdfObject.originalPageNumber + 1}`;\r\n\r\n\t\t\tconst firstPage = pdfObject.doc.getPage(0);\r\n\t\t\tlet currentRotationValue = firstPage.getRotation().angle;\r\n\t\t\tlet rotationDelta = MathUtils.clampDegreesBetweenFullCircle(currentRotationValue - pdfObject.originalRotation);\r\n\r\n\t\t\tconst cachekey = `${labelContent}_${pdfObject.originalFileSize}_${pdfObject.originalFileLastModified}`;\r\n\r\n\t\t\tconst thumbnailSrcPromise = PDFRenderer.getThumbnailAndViewBox(this._thumbnailSize, pdfObject.doc, cachekey, rotationDelta);\r\n\t\t\tconst thumbnail = scrollType === \"toBottom\" ? await ImageUtils.loadImage(await thumbnailSrcPromise) : document.createElement(\"img\");\r\n\t\r\n\t\t\tif (!thumbnail.src)\r\n\t\t\t{\r\n\t\t\t\tpromisesToWaitFor.push(\r\n\t\t\t\t\tnew Promise<void>((resolve, reject) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthumbnail.onload = () =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t\tthumbnail.src = await thumbnailSrcPromise;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthumbnail.classList.add(\"thumbnail\");\r\n\r\n\t\t\tconst label = document.createElement(\"div\");\r\n\t\t\tlabel.classList.add(\"label\");\r\n\r\n\t\t\tlabel.textContent = labelContent;\r\n\r\n\r\n\t\t\tconst onArrowUpClick = i > 0 ? () =>\r\n\t\t\t{\r\n\t\t\t\t[this._newOnePagePDFObjects[i], this._newOnePagePDFObjects[i - 1]] = [this._newOnePagePDFObjects[i - 1], this._newOnePagePDFObjects[i]];\r\n\t\t\t\tthis.thumbnailsReorderedCallback();\r\n\t\t\t} : Functions.empty;\r\n\r\n\t\t\tconst onRotateCCWClick = async () =>\r\n\t\t\t{\r\n\t\t\t\tcurrentRotationValue = MathUtils.clampDegreesBetweenFullCircle(currentRotationValue - 90);\r\n\t\t\t\trotationDelta = MathUtils.clampDegreesBetweenFullCircle(currentRotationValue - pdfObject.originalRotation);\r\n\t\t\t\tfirstPage.setRotation(degrees(currentRotationValue));\r\n\t\t\t\tthumbnail.src = await PDFRenderer.getThumbnailAndViewBox(this._thumbnailSize, pdfObject.doc, cachekey, rotationDelta);\r\n\t\t\t};\r\n\r\n\t\t\tconst onRemoveClick = async () =>\r\n\t\t\t{\r\n\t\t\t\tconst confirmed = await ConfirmWindow.open(\"Are you sure you want to delete this page?\");\r\n\t\t\t\tif (confirmed)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._newOnePagePDFObjects.splice(i, 1);\r\n\t\t\t\t\tthis.thumbnailsReorderedCallback();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tconst onRotateCWClick = async () =>\r\n\t\t\t{\r\n\t\t\t\tcurrentRotationValue = MathUtils.clampDegreesBetweenFullCircle(currentRotationValue + 90);\r\n\t\t\t\trotationDelta = MathUtils.clampDegreesBetweenFullCircle(currentRotationValue - pdfObject.originalRotation);\r\n\t\t\t\tfirstPage.setRotation(degrees(currentRotationValue));\r\n\t\t\t\tthumbnail.src = await PDFRenderer.getThumbnailAndViewBox(this._thumbnailSize, pdfObject.doc, cachekey, rotationDelta);\r\n\t\t\t};\r\n\r\n\t\t\tconst onArrowDownClick = i < this._newOnePagePDFObjects.length - 1 ? () =>\r\n\t\t\t{\r\n\t\t\t\t[this._newOnePagePDFObjects[i + 1], this._newOnePagePDFObjects[i]] = [this._newOnePagePDFObjects[i], this._newOnePagePDFObjects[i + 1]];\r\n\t\t\t\tthis.thumbnailsReorderedCallback();\r\n\t\t\t} : Functions.empty;\r\n\r\n\t\t\tconst buttons = HTMLFactory.createButtonsForPDF({\r\n\t\t\t\tonArrowUpClick,\r\n\t\t\t\tonRotateCCWClick,\r\n\t\t\t\tonRemoveClick,\r\n\t\t\t\tonRotateCWClick,\r\n\t\t\t\tonArrowDownClick\r\n\t\t\t});\r\n\r\n\t\t\tthumbnailContainer.appendChild(buttons);\r\n\t\t\tthumbnailContainer.appendChild(thumbnail);\r\n\t\t\tthumbnailContainer.appendChild(label);\r\n\r\n\t\t\tthis._thumbnails.appendChild(thumbnailContainer);\r\n\r\n\t\t\tif (scrollType === \"toBottom\")\r\n\t\t\t{\r\n\t\t\t\tthis._thumbnails.scrollTop = this._thumbnails.scrollHeight;\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateInfoText(i + 1);\r\n\t\t}\r\n\r\n\t\tawait Promise.all(promisesToWaitFor);\r\n\r\n\t\tif (scrollType === \"toLastPosition\")\r\n\t\t{\r\n\t\t\tthis._thumbnails.scrollTop = this._savedScrollValue;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis._thumbnails.scrollTop = this._thumbnails.scrollHeight;\r\n\t\t}\r\n\r\n\t\tif (this._newOnePagePDFObjects.length === 0)\r\n\t\t{\r\n\t\t\tthis.disableDownloadButton();\r\n\t\t\tthis._fileSelector.allPagesDeleted();\r\n\t\t\tthis._info.textContent = \"\";\r\n\t\t\tthis._downloadBtn.classList.add(\"hidden\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.updateInfoText(this._newOnePagePDFObjects.length);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateInfoText(numberOfPages: number)\r\n\t{\r\n\t\tthis._info.textContent = `Merged PDF will be generated with ${numberOfPages} pages`;\r\n\t}\r\n\r\n\tprivate thumbnailsReorderedCallback()\r\n\t{\r\n\t\tthis._savedScrollValue = this._thumbnails.scrollTop;\r\n\t\tthis.refreshThumbnails(\"toLastPosition\");\r\n\t}\r\n\r\n\tprivate setPDFHeaders(pdfDoc: PDFDocument)\r\n\t{\r\n\t\tpdfDoc.setTitle(\"Merged PDF\");\r\n\t\tpdfDoc.setAuthor(\"https://github.com/soadzoor/PDF-merger\");\r\n\t\t//pdfDoc.setKeywords([\"eggs\", \"wall\", \"fall\", \"king\", \"horses\", \"men\"]);\r\n\t\tpdfDoc.setProducer(\"https://github.com/soadzoor/PDF-merger\");\r\n\t\tpdfDoc.setCreator(\"PDF merger (https://github.com/soadzoor/PDF-merger)\");\r\n\t\tpdfDoc.setCreationDate(new Date());\r\n\t\tpdfDoc.setModificationDate(new Date());\r\n\t}\r\n\r\n\tprivate async createMergedPDF()\r\n\t{\r\n\t\tif (this._newOnePagePDFObjects.length > 0)\r\n\t\t{\r\n\t\t\tconst mergedPDF = await PDFDocument.create();\r\n\t\t\tthis.setPDFHeaders(mergedPDF);\r\n\r\n\t\t\tfor (const onePagedPDFObject of this._newOnePagePDFObjects)\r\n\t\t\t{\r\n\t\t\t\tconst onePagedDoc = onePagedPDFObject.doc;\r\n\r\n\t\t\t\t// All these pdf documents contain only one page, but it doesn't hurt to leave it like this for extra safety\r\n\t\t\t\tconst pageCount = onePagedDoc.getPageCount();\r\n\t\t\t\tconst pages = await mergedPDF.copyPages(onePagedDoc, this.getIndicesFromZeroToN(pageCount - 1));\r\n\r\n\t\t\t\tfor (const page of pages)\r\n\t\t\t\t{\r\n\t\t\t\t\tmergedPDF.addPage(page);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn mergedPDF;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate getIndicesFromZeroToN(n: number)\r\n\t{\r\n\t\tconst indices = [];\r\n\r\n\t\tfor (let i = 0; i <= n; ++i)\r\n\t\t{\r\n\t\t\tindices.push(i);\r\n\t\t}\r\n\r\n\t\treturn indices;\r\n\t}\r\n\r\n\tprivate onDownloadClick = async () =>\r\n\t{\r\n\t\tconst mergedPDF = await this.createMergedPDF();\r\n\t\tconst byteArray = await mergedPDF.save();\r\n\t\tFileUtils.downloadFileGivenByData(byteArray, \"mergedPDF.pdf\", \"application/pdf\");\r\n\t};\r\n}", "import {PDFEditor} from \"PDFEditor\";\r\n\r\nexport class Main\r\n{\r\n\tprivate _pdfEditor: PDFEditor = new PDFEditor();\r\n}\r\n\r\nconst main = new Main();"],
  "mappings": "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",
  "names": []
}
